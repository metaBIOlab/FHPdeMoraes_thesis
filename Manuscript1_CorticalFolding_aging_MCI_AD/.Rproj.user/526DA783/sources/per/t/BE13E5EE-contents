## DATA JOIN ####

dados_datasetscomp <- dados %>%
  dplyr::select(SUBJ, Gender, Age, AvgThickness, TotalArea, ExposedArea, localGI, logkteorico, hemi, ROI, Age_interval, Amostra, Diagnostic, method, logAvgThickness, logTotalArea, logExposedArea, machine, Session, Longitudinal_correction, logAvgThickness_age_decay, logTotalArea_age_decay, logExposedArea_age_decay, logkteorico_age_decay) %>%
  filter(Diagnostic == "CONTROLE" | Diagnostic == "CCL" | Diagnostic == "ALZ", localGI != 0 | !is.na(localGI), ROI == "hemisphere", Session == 1, machine == "Philips-Achieva", Longitudinal_correction == "yes", method == "Yujiang_script") %>% dplyr::select(SUBJ, Gender, Age, AvgThickness, TotalArea, ExposedArea, localGI, logkteorico, hemi, Age_interval, Amostra, Diagnostic, logAvgThickness, logTotalArea, logExposedArea, logAvgThickness_age_decay, logTotalArea_age_decay, logExposedArea_age_decay, logkteorico_age_decay)

dados_datasetscomp$Gender <- as.factor(dados_datasetscomp$Gender)
dados_datasetscomp$Age <- as.character(dados_datasetscomp$Age)

dados_datasetscomp$Age <- as.double(dados_datasetscomp$Age)

dados_datasetscomp <- full_join(dados_datasetscomp, datasets_yujiang)

dados_datasetscomp <- dplyr::select(dados_datasetscomp, -c(ROI))
 
### YUJIANG DATA - AGE INTERVAL ####

dados_datasetscomp$Age_interval[dados_datasetscomp$Age >= 10 &
                                  dados_datasetscomp$Age < 15] <- "11"
dados_datasetscomp$Age_interval[dados_datasetscomp$Age >= 15 &
                                  dados_datasetscomp$Age < 20] <- "16"
dados_datasetscomp$Age_interval[dados_datasetscomp$Age >= 20 &
                                  dados_datasetscomp$Age < 25] <- "21"
dados_datasetscomp$Age_interval[dados_datasetscomp$Age >= 25 &
                                  dados_datasetscomp$Age < 30] <- "26"
dados_datasetscomp$Age_interval[dados_datasetscomp$Age >= 30 &
                                  dados_datasetscomp$Age < 35] <- "31"
dados_datasetscomp$Age_interval[dados_datasetscomp$Age >= 35 &
                                  dados_datasetscomp$Age < 40] <- "36"
dados_datasetscomp$Age_interval[dados_datasetscomp$Age >= 40 &
                                  dados_datasetscomp$Age < 45] <- "41"
dados_datasetscomp$Age_interval[dados_datasetscomp$Age >= 45 &
                                  dados_datasetscomp$Age < 50] <- "46"
dados_datasetscomp$Age_interval[dados_datasetscomp$Age >= 50 &
                                  dados_datasetscomp$Age < 55] <- "51"
dados_datasetscomp$Age_interval[dados_datasetscomp$Age >= 55 &
                                  dados_datasetscomp$Age < 60] <- "56"
dados_datasetscomp$Age_interval[dados_datasetscomp$Age >= 60 &
                                  dados_datasetscomp$Age < 65] <- "61"
dados_datasetscomp$Age_interval[dados_datasetscomp$Age >= 65 &
                                  dados_datasetscomp$Age < 70] <- "66"
dados_datasetscomp$Age_interval[dados_datasetscomp$Age >= 70 &
                                  dados_datasetscomp$Age < 75] <- "71"
dados_datasetscomp$Age_interval[dados_datasetscomp$Age >= 75 &
                                  dados_datasetscomp$Age < 80] <- "76"
dados_datasetscomp$Age_interval[dados_datasetscomp$Age >= 80 &
                                  dados_datasetscomp$Age < 85] <- "81"
dados_datasetscomp$Age_interval[dados_datasetscomp$Age >= 85 &
                                  dados_datasetscomp$Age < 90] <- "86"
dados_datasetscomp$Age_interval[dados_datasetscomp$Age >= 90 &
                                  dados_datasetscomp$Age < 95] <- "91"
dados_datasetscomp$Age_interval[dados_datasetscomp$Age >= 95 &
                                  dados_datasetscomp$Age < 100] <- "96"
dados_datasetscomp$Age_interval[dados_datasetscomp$Age == "95"] <- "91"

### WITH MOTA&HOUZEL DATA ####
dados_datasetscomp <- full_join(dados_datasetscomp, dados_MH2015)
dados_datasetscomp <- filter(dados_datasetscomp, localGI != 0)

rm(ADNIAD_NonLongitudinal, ADNIAD_NonLongitudinal_lh, ADNIAD_NonLongitudinal_rh, ADNIControl_NonLongitudinal, ADNIControl_NonLongitudinal_lh, ADNIControl_NonLongitudinal_rh, HCP500r, HCP500r_lh, HCP500r_rh, NKI, NKI_lh, NKI_rh, OASIS_healthy, OASIS_healthy_lh, OASIS_healthy_rh)