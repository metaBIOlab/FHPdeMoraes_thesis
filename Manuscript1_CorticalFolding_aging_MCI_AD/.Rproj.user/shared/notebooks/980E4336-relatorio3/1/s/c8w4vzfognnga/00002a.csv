"0","m.multi.nova0_2 <-"
"0","  multinom(Diagnostic ~ logAvgThickness + Age + ESC, data = train.data)"
"1","# weights: "
"1"," "
"1","15"
"1"," ("
"1",""
"1","8"
"1",""
"1"," variable)
"
"1","initial  value 213.130784 
"
"1","iter  10 value 132.749238
"
"1","iter  20 value 130.774868
"
"1","iter  30 value 129.107343
"
"1","iter  40 value 127.724807
"
"1","iter  50 value 127.590914
"
"1","iter  60 value 127.569589
"
"1","iter  70 value 127.554830
"
"1","iter  80 value 127.547652
"
"1","iter  90 value 127.539117
"
"1","iter 100 value 127.535291
"
"1","final  value 127.535291 
"
"1","stopped after 100 iterations
"
"0","  stargazer(m.multi.nova0_2, type = ""text"")"
"1","
"
"1","==============================================
"
"1",""
"1","                 "
"1"," "
"1","    "
"1","Dependent variable:"
"1","     "
"1","
"
"1","                  "
"1","----------------------------"
"1","
"
"1",""
"1","                 "
"1"," "
"1","      "
"1","AD"
"1","      "
"1"," "
"1","     "
"1","MCI"
"1","     "
"1","
"
"1",""
"1","                 "
"1"," "
"1","     "
"1","(1)"
"1","      "
"1"," "
"1","     "
"1","(2)"
"1","     "
"1","
"
"1","----------------------------------------------
"
"1","logAvgThickness"
"1","  "
"1"," "
"1","  "
"1","-67.690***"
"1","  "
"1"," "
"1","   "
"1","-17.561"
"1","   "
"1","
"
"1",""
"1","                 "
"1"," "
"1","   "
"1","(2.917)"
"1","    "
"1"," "
"1","  "
"1","(11.642)"
"1","   "
"1","
"
"1",""
"1","                 "
"1"," "
"1","       "
"1",""
"1","       "
"1"," "
"1","      "
"1",""
"1","       "
"1","
"
"1","Age"
"1","              "
"1"," "
"1","   "
"1","0.223***"
"1","   "
"1"," "
"1","   "
"1","0.082**"
"1","   "
"1","
"
"1",""
"1","                 "
"1"," "
"1","   "
"1","(0.065)"
"1","    "
"1"," "
"1","   "
"1","(0.032)"
"1","   "
"1","
"
"1",""
"1","                 "
"1"," "
"1","       "
"1",""
"1","       "
"1"," "
"1","      "
"1",""
"1","       "
"1","
"
"1","ESC"
"1","              "
"1"," "
"1","  "
"1","-0.510***"
"1","   "
"1"," "
"1","  "
"1","-0.256***"
"1","  "
"1","
"
"1",""
"1","                 "
"1"," "
"1","   "
"1","(0.127)"
"1","    "
"1"," "
"1","   "
"1","(0.082)"
"1","   "
"1","
"
"1",""
"1","                 "
"1"," "
"1","       "
"1",""
"1","       "
"1"," "
"1","      "
"1",""
"1","       "
"1","
"
"1","Constant"
"1","         "
"1"," "
"1","  "
"1","15.068***"
"1","   "
"1"," "
"1","    "
"1","4.165"
"1","    "
"1","
"
"1",""
"1","                 "
"1"," "
"1","   "
"1","(4.478)"
"1","    "
"1"," "
"1","   "
"1","(5.908)"
"1","   "
"1","
"
"1",""
"1","                 "
"1"," "
"1","       "
"1",""
"1","       "
"1"," "
"1","      "
"1",""
"1","       "
"1","
"
"1","----------------------------------------------
"
"1","Akaike Inf. Crit."
"1"," "
"1","   "
"1","271.071"
"1","    "
"1"," "
"1","   "
"1","271.071"
"1","   "
"1","
"
"1","==============================================
"
"1","Note:"
"1","            "
"1"," "
"1"," "
"1","*p<0.1; **p<0.05; ***p<0.01"
"1","
"
"0","  z0_2 <-"
"0","    summary(m.multi.nova0_2)$coefficients / summary(m.multi.nova0_2)$standard.errors"
"0","    p0_2 <- (1 - pnorm(abs(z0_2), 0, 1)) * 2"
"0","    t(p0_2)"
"1","               "
"1","           AD"
"1","         MCI"
"1","
(Intercept)    "
"1"," 7.649503e-04"
"1"," 0.480802604"
"1","
logAvgThickness"
"1"," 0.000000e+00"
"1"," 0.131473759"
"1","
Age            "
"1"," 6.431381e-04"
"1"," 0.011507258"
"1","
ESC            "
"1"," 5.683326e-05"
"1"," 0.001850566"
"1","
"
"0","#Para facilitar a interpreta??o:"
"0","coef.multi0_2 = exp(coef(m.multi.nova0_2))"
"0","t(coef.multi0_2)"
"1","               "
"1","           AD"
"1","          MCI"
"1","
(Intercept)    "
"1"," 3.498279e+06"
"1"," 6.442058e+01"
"1","
logAvgThickness"
"1"," 4.006028e-30"
"1"," 2.363531e-08"
"1","
Age            "
"1"," 1.249800e+00"
"1"," 1.085065e+00"
"1","
ESC            "
"1"," 6.004399e-01"
"1"," 7.739285e-01"
"1","
"
"0","#Previsoes"
"0","predicted.classes.multi.nova0_2 <- m.multi.nova0_2 %>% predict(test.data, type = ""class"")"
"0",""
"0","#Model accuracy"
"0","mean(predicted.classes.multi.nova0_2 == test.data$Diagnostic)"
"1","[1]"
"1"," 0.6538462"
"1","
"
"0","# Summary"
"0","confusionMatrix(predicted.classes.multi.nova0_2, test.data$Diagnostic)"
"1","Confusion Matrix and Statistics

"
"1","          Reference
"
"1","Prediction"
"1"," CTL"
"1"," AD"
"1"," MCI"
"1","
       CTL"
"1","  26"
"1","  2"
"1","   3"
"1","
       AD "
"1","   0"
"1","  1"
"1","   4"
"1","
       MCI"
"1","   6"
"1","  3"
"1","   7"
"1","
"
"1","
Overall Statistics
"
"1",""
"1","                         "
"1","                 "
"1","
"
"1","               Accuracy :"
"1"," 0.6538          "
"1","
"
"1","                 95% CI :"
"1"," (0.5091, 0.7803)"
"1","
"
"1","    No Information Rate :"
"1"," 0.6154          "
"1","
"
"1","    P-Value [Acc > NIR] :"
"1"," 0.3380          "
"1","
"
"1","                         "
"1","                 "
"1","
"
"1","                  Kappa :"
"1"," 0.358           "
"1","
"
"1","                         "
"1","                 "
"1","
"
"1"," Mcnemar's Test P-Value :"
"1"," 0.3701          "
"1","
"
"1","
Statistics by Class:

"
"1","                    "
"1"," Class: CTL"
"1"," Class: AD"
"1"," Class: MCI"
"1","
Sensitivity         "
"1","     0.8125"
"1","   0.16667"
"1","     0.5000"
"1","
Specificity         "
"1","     0.7500"
"1","   0.91304"
"1","     0.7632"
"1","
Pos Pred Value      "
"1","     0.8387"
"1","   0.20000"
"1","     0.4375"
"1","
Neg Pred Value      "
"1","     0.7143"
"1","   0.89362"
"1","     0.8056"
"1","
Prevalence          "
"1","     0.6154"
"1","   0.11538"
"1","     0.2692"
"1","
Detection Rate      "
"1","     0.5000"
"1","   0.01923"
"1","     0.1346"
"1","
Detection Prevalence"
"1","     0.5962"
"1","   0.09615"
"1","     0.3077"
"1","
Balanced Accuracy   "
"1","     0.7812"
"1","   0.53986"
"1","     0.6316"
"1","
"
"0","#ROC"
"0","multiclass.roc("
"0","  as.numeric(test.data$Diagnostic),"
"0","  as.numeric(predicted.classes.multi.nova0_2),"
"0","  percent = F,"
"0","  ci.alpha = 0.9,"
"0","  stratified = FALSE,"
"0","  plot = TRUE,"
"0","  grid = TRUE,"
"0","  legacy.axes = TRUE,"
"0","  reuse.auc = TRUE,"
"0","  print.auc = TRUE,"
"0","  print.thres.col = ""blue"","
"0","  ci.type = ""bars"","
"0","  print.thres.cex = 0.7,"
"0","  main = ""ROC curve"","
"0","  ylab = ""Sensitivity (true positive rate)"","
"0","  xlab = ""1-Specificity (false positive rate)"""
"0","  )"
"2","Setting direction: controls < cases
"
"2","Setting direction: controls < cases
"
