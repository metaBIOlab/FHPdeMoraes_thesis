---
title: "Relatorio PRJ Girificacao"
author: "Fernanda Hansen Pacheco de Moraes"
date: "11 de dezembro de 2018"
output:
  html_document:
    df_print: kable
    fig_caption: yes
    number_sections: yes
    theme: paper
    toc: yes
    toc_depth: 5
  pdf_document:
    toc: yes
    toc_depth: '5'
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(
	echo = FALSE,
	message = FALSE,
	warning = FALSE
)
```

```{r preparo, message=FALSE, warning=FALSE, include=FALSE}
 setwd("C:/Users/fernanda.hansen/Desktop/aging/V6/") # se no pendrive
# setwd("C:/Users/fernanda.hansen/Desktop/aging/V6/") # se no pendrive
# carrega os pacotes utilizados ----
source("01-call_packages.R")

# Chama as funcoes ----
source("02-funcoes.R")

# onde estao os arquivos de resultados:
#path <- str_c("Z:/PRJ1513_GIRIFICACAO_CONTROLES/03_PROCS/PROC_DATA/STATS/long_tables/")
 path <- str_c("C:/Users/fernanda.hansen/Desktop/aging/V6/data/resultados/")
# path <- str_c("C:/Users/ferna/Desktop/aging/V6/data/resultados/")

 
#path_sessions <- str_c("Z:/PRJ1513_GIRIFICACAO_CONTROLES/03_PROCS/RAW_DATA/BIDS/")
 path_sessions <- str_c("C:/Users/fernanda.hansen/Desktop/aging/V6/data/")
#path_sessions <- str_c("C:/Users/ferna/Desktop/aging/V6/data/")


# importa os resultados ----
source("03-import_files.R") # arquivos dos sujeitos

# organiza os arquivos ----
source("04-organiza.R")
# source("rotina_arquivos_neuroquant_comparisson.R")

# Prepara os dados para analise ----
source("05-analises_prep.R")

# retira os outros diagnosticos e deixa so Philips
dados_raw <- dados

verificar_lGI_zero <- filter(dados, localGI == 0 | is.na(localGI))
write.csv(verificar_lGI_zero, "verificar_lGI_zero.csv")

dados_all <-
  filter(
    dados,
    Diagnostic == "CONTROLE" |
       Diagnostic == "CCL" |
       Diagnostic == "ALZ" ,
             localGI != 0 | !is.na(localGI) | !is.infinite(localGI), !is.infinite(logExposedArea))

dados_excluidos <- anti_join(dados_raw, dados_all)
write.csv(dados_excluidos, "dados_excluidos.csv")

dados <- filter(dados_all, machine == "Philips-Achieva", Longitudinal_correction == "no")

# separa em arquivo de hemisferios e de lobos ----
dados_hemi_v1 <- filter(dados, ROI == "hemisphere", Session == 1)

dados_lobos_v1 <- filter(dados, ROI == "F" | ROI == "T" | ROI == "O" | ROI == "P", Session == 1)

dados_CC <- filter(dados, ROI == "CC", Session == 1)

# define a idade para regressao
Idade <- 25

```

# Metodo

## Verificacao idade

```{r idade, eval=FALSE, message=FALSE, warning=FALSE, include=FALSE}
part_ses <- part_ses %>% mutate( birthday_date_fromacqdate = acq_date - dyears(age))

part_ses %>% filter(str_detect(birthday, "\\|") == TRUE) %>% dplyr::select(participant_id, birthday, birthday_date_fromacqdate) %>% kable() %>% kable_styling()

tabela_sujeitos %>% filter(str_detect(birthday, "\\|") == TRUE) %>% 
dplyr::select(participant_id, session_id, birthday, Birthdate, age , Age) %>% kable() %>% kable_styling()

tabela_sujeitos %>% filter(str_detect(birthday, "\\|") == FALSE) %>% mutate(birthday = as.Date(birthday, "%d-%m-%Y"),Birthdate = as.Date(Birthdate, "%d/%m/%Y"), age = year(acq_date) - year(birthday) , age_Age = age - Age, datas_nascimento_diferentes = ifelse(birthday == Birthdate, "TRUE", "FALSE")) %>% dplyr::select(participant_id, session_id, birthday, Birthdate, age, Age, age_Age, datas_nascimento_diferentes ) %>% arrange(desc(abs(age_Age))) %>% kable() %>% kable_styling()

tabela_sujeitos %>% filter(str_detect(birthday, "\\|") == FALSE) %>% mutate(birthday = as.Date(birthday, "%d-%m-%Y"),Birthdate = as.Date(Birthdate, "%d/%m/%Y"), age = year(acq_date) - year(birthday) , age_Age = age - Age, datas_nascimento_diferentes = ifelse(birthday == Birthdate, "TRUE", "FALSE")) %>% dplyr::select(participant_id, session_id, birthday, Birthdate, age, Age, age_Age, datas_nascimento_diferentes ) %>% arrange(desc(abs(age_Age))) %>% filter(datas_nascimento_diferentes == "FALSE") %>% kable() %>% kable_styling()

tabela_sujeitos %>% filter(is.na(Birthdate)) %>% dplyr::select(participant_id, session_id, birthday, Birthdate, Age) %>% kable() %>% kable_styling()

tabela_sujeitos <- dplyr::select(tabela_sujeitos, -c(Birthdate, Age))

```

## Numero de sujeitos

### Todos da lista
```{r N sujeitos, eval=FALSE, message=FALSE, warning=FALSE, include=FALSE}
summary_dados_all <- filter(dados_raw, Session == 1) %>%
  group_by(machine, Diagnostic) %>%
  summarise(
  N = n_distinct(SUBJ_ID),
  Mean = mean(Age),
  Max = max(Age),
  Min = min(Age),
  Median = median(Age),
  Std = sd(Age)
  )
  summary_dados_all %>% kable() %>% kable_styling()
```

### Todos processados pelo FreeSurfer com sucesso
```{r N sujeitos FS, eval=FALSE, message=FALSE, warning=FALSE, include=FALSE}
summary_dados_all <- filter(dados_all, Session == 1) %>%
  group_by(Diagnostic, machine) %>%
  summarise(
  N = n_distinct(SUBJ_ID),
  Mean = mean(Age),
  Max = max(Age),
  Min = min(Age),
  Median = median(Age),
  Std = sd(Age)
  )
  summary_dados_all %>% kable() %>% kable_styling()
```

### Somente Philips

```{r N sujeitos Philips, echo=FALSE, message=FALSE, warning=FALSE}
summary_dados_hemi <- filter(dados) %>%
  group_by(Session, Diagnostic, Gender) %>%
  summarise(
  N = n_distinct(SUBJ),
  Mean = mean(Age),
  Max = max(Age),
  Min = min(Age),
  Median = median(Age),
  Std = sd(Age)
  )
  summary_dados_hemi %>% kable() %>% kable_styling()
  
summary_dados_hemi_v1 <- filter(dados_hemi_v1, Session == 1) %>%
  group_by(Gender, Diagnostic) %>%
  summarise(
  N = n_distinct(SUBJ),
  Mean = mean(Age),
  Max = max(Age),
  Min = min(Age),
  Median = median(Age),
  Std = sd(Age)
  )
  summary_dados_hemi_v1 %>% kable() %>% kable_styling()
  
summary_dados_hemi_v1_diag <- filter(dados_hemi_v1, Session == 1) %>%
  group_by(Diagnostic) %>%
  summarise(
  N = n_distinct(SUBJ),
  Mean = mean(Age),
  Max = max(Age),
  Min = min(Age),
  Median = median(Age),
  Std = sd(Age)
  )
  summary_dados_hemi_v1_diag %>% kable() %>% kable_styling()
  
```

### Sujeitos excluídos

```{r N sujeitos excluidos, eval=FALSE, message=FALSE, warning=FALSE, include=FALSE}

excl <- dados_excluidos %>% dplyr::select(c(SUBJ, age, Diagnostic, machine, ROI, localGI)) %>% filter(ROI == "hemisphere") %>% distinct(SUBJ, .keep_all = TRUE)
  
excl %>% kable() %>% kable_styling()

```

## Comparacao entre modo com correcao longitudinal e sem

```{r comp longitudinal correction, echo=FALSE, warning=TRUE}

dados_long_comp <-
  dados_all %>% filter(
  ROI == "hemisphere" & (Diagnostic == "ALZ" |
  Diagnostic == "CCL" |
  Diagnostic == "CONTROLE") &
  !is.na(Longitudinal_correction) & !is.na(machine) & Session == "1") %>% group_by(SUBJ, hemi) %>% filter(n() > 1)

paste("Para essa verificacao, filtrei os sujeitos que tinham o processamento com e sem correcao. Assim o numero final de sujeitos incluidos é igual a ", n_distinct(dados_long_comp$SUBJ))

ggplot(dados_long_comp, aes(x = Diagnostic, y = AvgThickness, color = Longitudinal_correction, fill = Longitudinal_correction)) +
  geom_boxplot() +
  stat_compare_means(method = "t.test", label.y = 2.7, paired = TRUE) + theme_pubclean() + ylim(2, 2.8)

ggplot(dados_long_comp, aes(x = Diagnostic, y = eTIV, color = Longitudinal_correction, fill = Longitudinal_correction)) +
  geom_boxplot() +
  stat_compare_means(method = "t.test", paired = TRUE) + theme_pubclean() 
                     
ggplot(dados_long_comp, aes(x = Diagnostic, y = TotalArea, color = Longitudinal_correction, fill = Longitudinal_correction)) +
  geom_boxplot() +
  stat_compare_means(method = "t.test", paired = TRUE) + theme_pubclean()        

ggplot(dados_long_comp, aes(x = Diagnostic, y = GMvolume, color = Longitudinal_correction, fill = Longitudinal_correction)) +
  geom_boxplot() +
  stat_compare_means(method = "t.test", paired = TRUE) + theme_pubclean()   

ggplot(dados_long_comp, aes(x = Diagnostic, y = WhiteSurfArea, color = Longitudinal_correction, fill = Longitudinal_correction)) +
  geom_boxplot() +
  stat_compare_means(method = "t.test", paired = TRUE) + theme_pubclean()   

ggplot(dados_long_comp, aes(x = Diagnostic, y = localGI, color = Longitudinal_correction, fill = Longitudinal_correction)) +
  geom_boxplot() +
  stat_compare_means(method = "t.test", paired = TRUE) + theme_pubclean()

lm_long <- dados_long_comp %>%
  group_by(Longitudinal_correction) %>%
  do(fit_long = lm(1/2 * logAvgThickness + logTotalArea ~ logExposedArea, data = ., na.action = na.omit))

long_Coef = tidy(lm_long,
                    fit_long,
                    conf.int = TRUE,
                    conf.level = 0.95)
long_Pred = augment(lm_long, fit_long)
long_R2 = glance(lm_long, fit_long)

ggplot(dados_long_comp, aes(log(ExposedArea), 1/2*log(AvgThickness) + log(TotalArea), color = Longitudinal_correction, fill = Longitudinal_correction, alph = 0.4)) +
  geom_point() +
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubclean()

long_Coef %>% kable(digits = 4) %>% kable_styling()

ggplot(
  data = filter(long_Coef, term == "logExposedArea"),
  aes(x = reorder(Longitudinal_correction, estimate), y = estimate, color = Longitudinal_correction)
  ) +
  geom_point() + geom_errorbar(aes(ymin = estimate - std.error, ymax = estimate + std.error)) + geom_hline(yintercept = 1.25, linetype = "dashed") + theme_pubclean() + labs(y = "slope")

long_cor <- lm(1 / 2 * logAvgThickness + logTotalArea ~ logExposedArea, data = filter(dados_long_comp, Longitudinal_correction == "yes"), na.action = na.omit)
no_long_cor <- lm(1 / 2 * logAvgThickness + logTotalArea ~ logExposedArea, data = filter(dados_long_comp, Longitudinal_correction == "no"))

paste("Verificando a diferenca entre o coeficiente obtido com a correcao longitudinal e sem, qual o valor p deste teste?", test_coef(long_cor, 2, coef(no_long_cor)[2]))

```

# Resultados - sem correcao longitudinal

## Aplicacao do modelo

Todos os sujeitos
```{r model0 Mota & Houzel, echo=FALSE}

lm_amostra <- (filter(dados_datasetscomp, Amostra == "Mota&Houzel2015" | Amostra == "IDOR")) %>%
  group_by(Amostra) %>%
  do(fit_amostra = lm(1/2 * logAvgThickness + logTotalArea ~ logExposedArea, data = ., na.action = na.omit))

amostra_Coef = tidy(lm_amostra,
                    fit_amostra,
                    conf.int = TRUE,
                    conf.level = 0.95)
amostra_Pred = augment(lm_amostra, fit_amostra)
amostra_R2 = glance(lm_amostra, fit_amostra)

ggplot(filter(dados_datasetscomp, Amostra == "Mota&Houzel2015" | Amostra == "IDOR"), aes(logExposedArea, 1/2*logAvgThickness + logTotalArea)) +
  geom_point(aes(color = Amostra)) +
  geom_smooth(method = "lm", se = FALSE) +
  theme_pubclean()

amostra_Coef %>% kable(digits = 4) %>% kable_styling()

```

### Apenas humanos IDOR

```{r modelo_humanos, echo=FALSE, message=FALSE, warning=FALSE}

fit_comp_idor <-
  lm(1 / 2 * logAvgThickness + logTotalArea ~ logExposedArea, data = dados_hemi_v1, na.action = na.omit)
summary(fit_comp_idor)

fit_comp_idor_Coef = tidy(fit_comp_idor,
                          conf.int = TRUE,
                          conf.level = 0.95)
fit_comp_idor_Pred = augment(fit_comp_idor)
fit_comp_idor_Glance = glance(fit_comp_idor)

ggplot(dados_hemi_v1, aes(logExposedArea, 1/2*logAvgThickness + logTotalArea)) +
  geom_point(aes(color = Diagnostic)) +
  geom_smooth(method = "lm", se = FALSE) +
  theme_pubclean() + scale_color_discrete(name = "Diagnostic", labels = c("ALZ", "MCI", "CONTROL")) + labs(caption = paste("Humanos de todos os diagnosticos, apenas 1 visita, N = ", n_distinct(dados_hemi_v1$SUBJ))) 

fit_comp_idor_Coef %>% kable(digits = 4) %>% kable_styling()

paste("Verificando a diferenca entre o coeficiente obtido para a amostra e o teorico de 5/4, qual o valor p deste teste?", test_coef(lm(1 / 2 * logAvgThickness + logTotalArea ~ logExposedArea, data = dados_hemi_v1, na.action = na.omit), 2, 1.25))

```

#### SLOPE?

```{r slope, echo=FALSE, message=FALSE, warning=FALSE}
ggplot(dados_datasetscomp, aes(log(ExposedArea), 1/2*log(AvgThickness) + log(TotalArea))) +
  geom_point(aes(color = Amostra)) +
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubclean()

ggplot(data = filter(dados_datasetscomp, Amostra != "Mota&Houzel2015"), aes(log(ExposedArea), 1/2*log(AvgThickness) + log(TotalArea), color = Amostra, fill = Amostra, alpha = 0.3)) +
  geom_point() +
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubclean()

lm_amostras <- dados_datasetscomp %>%
  group_by(Amostra) %>%
  do(fit_amostras = lm(1/2 * logAvgThickness + logTotalArea ~ logExposedArea, data = ., na.action = na.omit))

amostras_Coef = tidy(lm_amostras,
                    fit_amostras,
                    conf.int = TRUE,
                    conf.level = 0.95)
amostras_Pred = augment(lm_amostras, fit_amostras)
amostras_R2 = glance(lm_amostras, fit_amostras)

amostras_Coef %>% kable(digits = 4) %>% kable_styling()
amostras_R2 %>% kable(digits = 4) %>% kable_styling()

ggplot(
  data = filter(amostras_Coef, term == "logExposedArea"),
  aes(x = reorder(Amostra, estimate), y = estimate, color = Amostra)
  ) +
  geom_point() + geom_errorbar(aes(ymin = estimate - std.error, ymax = estimate + std.error)) + geom_hline(yintercept = 1.25, linetype = "dashed")  + stat_compare_means(method = "kruskal.test") + theme_pubclean() + labs(y = "slope")

kruskal_amostras <- kruskal.test(estimate ~ Amostra, data = filter(amostras_Coef, term == "logExposedArea"))
tidy(kruskal_amostras) %>% kable(digits = 4) %>% kable_styling()

```

##### Qual a diferenca entre essas populacoes?

```{r populacoes, echo=FALSE, message=FALSE, warning=FALSE}

dados_datasetscomp$Age[dados_datasetscomp$Age == "26-30"] <- "26"
dados_datasetscomp$Age[dados_datasetscomp$Age == "31-35"] <- "31"
dados_datasetscomp$Age[dados_datasetscomp$Age == "22-25"] <- "22"
dados_datasetscomp$Age[dados_datasetscomp$Age == "36+"] <- "36"

dados_datasetscomp$Age <- as.numeric(dados_datasetscomp$Age)

res.aov.age <- aov(Age ~ Amostra, data = filter(dados_datasetscomp, Amostra != "Mota&Houzel2015"))
res.aov.age
summary(res.aov.age)
TukeyHSD(res.aov.age)

ggplot(data = filter(dados_datasetscomp, Amostra != "Mota&Houzel2015"), aes(x = Age, color = Amostra, fill = Amostra, alpha = 0.4)) + geom_density() + theme_pubclean()

ggplot(data = filter(dados_datasetscomp, Amostra != "Mota&Houzel2015"), aes(x = Amostra, y = Age, color = Amostra, fill = Amostra, alpha = 0.4)) + 
  geom_boxplot() + theme_pubclean() +
  stat_compare_means(label = "p.signif", method = "t.test", ref.group = "IDOR" , hide.ns = TRUE, label.y = 98) + 
  stat_compare_means(method = "anova", label.y = 105) + ylim(0, 110)

res.aov.thick <- aov(AvgThickness ~ Amostra, data = filter(dados_datasetscomp, Amostra != "Mota&Houzel2015"))
res.aov.thick
summary(res.aov.thick)
TukeyHSD(res.aov.thick)

ggplot(
  filter(dados_datasetscomp, Age_interval > 51 &
           Age_interval < 91),
  aes(
    x = Amostra,
    y = AvgThickness,
    fill = Amostra,
    color = Amostra
  )
) +
  geom_boxplot(aes(alpha = 0.5)) +
  ylim(1.5, 4.5) +
  stat_compare_means(label = "p.signif", method = "t.test", ref.group = "IDOR" , hide.ns = TRUE, label.y = 3.5, method.args = list(alternative = "greater")) + 
  stat_compare_means(method = "anova", label.y = 4) +
  facet_wrap(vars(Age_interval)) +
  theme_pubclean() +
  theme(axis.ticks = element_blank(), axis.text.x = element_blank())

res.aov.at <- aov(TotalArea ~ Amostra, filter(dados_datasetscomp, Amostra != "Mota&Houzel2015"))
res.aov.at
summary(res.aov.at)
TukeyHSD(res.aov.at)

ggplot(
  filter(dados_datasetscomp, Age_interval > 51 &
           Age_interval < 91),
  aes(
    x = Amostra,
    y = TotalArea,
    fill = Amostra,
    color = Amostra
  )
) +
  ylim(25000, 150000) +
  geom_boxplot(aes(alpha = 0.5)) +
  stat_compare_means(label = "p.signif", method = "t.test", ref.group = "IDOR" , hide.ns = TRUE, label.y = 130000, method.args = list(alternative = "greater")) + 
  stat_compare_means(method = "anova", label.y = 140000) +
  facet_wrap(vars(Age_interval)) +
  theme_pubclean() +
  theme(axis.ticks = element_blank(), axis.text.x = element_blank())

res.aov.ae <- aov(ExposedArea ~ Amostra, filter(dados_datasetscomp, Amostra != "Mota&Houzel2015"))
res.aov.ae
summary(res.aov.ae)
TukeyHSD(res.aov.ae)

ggplot(
  filter(dados_datasetscomp, Age_interval > 51 &
           Age_interval < 91),
  aes(
    x = Amostra,
    y = ExposedArea,
    fill = Amostra,
    color = Amostra
  )
) + ylim(10000, 60000) +
  geom_boxplot(aes(alpha = 0.5)) +
  stat_compare_means(label = "p.signif", method = "t.test", ref.group = "IDOR" , hide.ns = TRUE, label.y = 52000, method.args = list(alternative = "smaller")) + 
  stat_compare_means(method = "anova", label.y = 58000) +
  facet_wrap(vars(Age_interval)) +
  theme_pubclean() +
  theme(axis.ticks = element_blank(), axis.text.x = element_blank())

```
###### Dividindo a amostra IDOR por diagnosticos

```{r populacoes diags, eval=FALSE, message=FALSE, warning=FALSE, include=FALSE}

dados_datasetscomp$Amostra[dados_datasetscomp$Amostra == "IDOR" & dados_datasetscomp$Diagnostic == "ALZ" ] <- "IDORAD"

dados_datasetscomp$Amostra[dados_datasetscomp$Amostra == "IDOR" & dados_datasetscomp$Diagnostic == "CCL" ] <- "IDORMCI"

dados_datasetscomp$Amostra[dados_datasetscomp$Amostra == "IDOR" & dados_datasetscomp$Diagnostic == "CONTROLE" ] <- "IDORCTL"

my_comparisons_slope <- list( c("IDOR", "HCP500r"), c("IDOR", "NKI"), c("IDOR", "OASIS_healthy"), c("IDOR", "ADNIAD_NonLongitudinal"), c("IDOR", "ADNIControl_NonLongitudinal") )

ggplot(
  filter(dados_datasetscomp, Age_interval > 51 &
           Age_interval < 91),
  aes(
    x = Amostra,
    y = AvgThickness,
    fill = Amostra,
    color = Amostra
  )
) +
  geom_boxplot(aes(alpha = 0.5)) +
  ylim(1.5, 4.5) +
  stat_compare_means(label = "p.signif", method = "t.test", hide.ns = TRUE, label.y = 3.5, method.args = list(alternative = "greater")) + 
  stat_compare_means(method = "anova", label.y = 4) +
  facet_wrap(vars(Age_interval)) +
  theme_pubclean() +
  theme(axis.ticks = element_blank(), axis.text.x = element_blank())

ggplot(
  filter(dados_datasetscomp, Age_interval > 51 &
           Age_interval < 91),
  aes(
    x = Amostra,
    y = AvgThickness,
    fill = Amostra,
    color = Amostra
  )
) +
  geom_boxplot(aes(alpha = 0.5)) +
  ylim(1.5, 4.5) +
  stat_compare_means(label = "p.signif", method = "t.test", ref.group = "IDORCTL", hide.ns = TRUE, label.y = 3.5, method.args = list(alternative = "greater")) + 
  stat_compare_means(method = "anova", label.y = 4) +
  facet_grid(Diagnostic ~ Age_interval) +
  theme_pubclean() +
  theme(axis.ticks = element_blank(), axis.text.x = element_blank())

ggplot(
  filter(dados_datasetscomp, Age_interval > 51 &
           Age_interval < 91, Diagnostic == "ALZ"),
  aes(
    x = Amostra,
    y = AvgThickness,
    fill = Amostra,
    color = Amostra
  )
) +
  geom_boxplot(aes(alpha = 0.5)) +
  ylim(1.5, 4.5) +
  stat_compare_means(label = "p.signif", method = "t.test", hide.ns = TRUE, label.y = 3.5, method.args = list(alternative = "greater")) + 
  stat_compare_means(method = "anova", label.y = 4) +
  facet_wrap(vars(Age_interval)) +
  theme_pubclean() +
  theme(axis.ticks = element_blank(), axis.text.x = element_blank())

ggplot(
  filter(dados_datasetscomp, Age_interval > 51 &
           Age_interval < 91, Diagnostic == "CONTROLE"),
  aes(
    x = Amostra,
    y = AvgThickness,
    fill = Amostra,
    color = Amostra
  )
) +
  geom_boxplot(aes(alpha = 0.5)) +
  ylim(1.5, 4.5) +
  stat_compare_means(label = "p.signif", method = "t.test", ref.group = "IDORCTL", hide.ns = TRUE, label.y = 3.5, method.args = list(alternative = "greater")) + 
  stat_compare_means(method = "anova", label.y = 4) +
  facet_wrap(vars(Age_interval)) +
  theme_pubclean() +
  theme(axis.ticks = element_blank(), axis.text.x = element_blank())

```


## Diferenca idades

```{r age}

```

## Corpo Caloso
```{r corpo caloso, echo=FALSE}

ggplot(
  data = filter(dados, ROI == "hemisphere"),
  aes(y = logkteorico_corrected, x = logTotalArea_corrected_CC)
  ) + geom_point() + geom_smooth(method = "lm") + stat_cor() + theme_pubclean() + labs(x = "log10(CC Total Area)", y = "log10(Offset k)")
  
ggplot(
  data = filter(dados, ROI == "hemisphere"),
  aes(y = logkteorico_corrected, x = logExposedArea_corrected_CC)
  ) + geom_point() + geom_smooth(method = "lm") + stat_cor() + theme_pubclean() + labs(x = "log10(CC Exposed Area)", y = "log10(Offset k)")

ggplot(
  data = filter(dados, ROI == "hemisphere"),
  aes(y = logkteorico_age_decay, x = logTotalArea_age_decay_CC)
  ) + geom_point() + geom_smooth(method = "lm") + stat_cor() + theme_pubclean() + labs(x = "log10(CC Total Area) - deaged", y = "log10(Offset k) - deaged")
  
ggplot(
  data = filter(dados, ROI == "hemisphere"),
  aes(y = logkteorico_age_decay, x = logExposedArea_age_decay_CC)
  ) + geom_point() + geom_smooth(method = "lm") + stat_cor() + theme_pubclean() + labs(x = "log10(CC Smooth Area) - deaged", y = "log10(Offset k) - deaged")
  
ggplot(
  data = filter(dados, ROI == "hemisphere"),
  aes(y = logkteorico, x = log10(WM_volume_CC))
  ) + geom_point() + geom_smooth(method = "lm") + stat_cor() + theme_pubclean() + labs(x = "log10(CC White Matter Volume)", y = "log10(Offset k)")

ggplot(
  data = filter(dados, ROI == "hemisphere"),
  aes(y = logkteorico_corrected, x = logTotalArea_corrected_CC, color = Diagnostic)
  ) + geom_point() + geom_smooth(method = "lm") + stat_cor(aes(color = Diagnostic)) + theme_pubclean() + labs(x = "log10(CC Total Area)", y = "log10(Offset k)") + scale_color_discrete(name = "Diagnostic", labels = c("ALZ", "MCI", "CONTROL"))
  
ggplot(
  data = filter(dados, ROI == "hemisphere"),
  aes(y = logkteorico_corrected, x = logExposedArea_corrected_CC, color = Diagnostic)
  ) + geom_point() + geom_smooth(method = "lm") + stat_cor(aes(color = Diagnostic)) + theme_pubclean() + labs(x = "log10(CC Smooth Area)", y = "log10(Offset k)") + scale_color_discrete(name = "Diagnostic", labels = c("ALZ", "MCI", "CONTROL"))

ggplot(
  data = filter(dados, ROI == "hemisphere"),
  aes(y = logkteorico_age_decay, x = logTotalArea_age_decay_CC, color = Diagnostic)
  ) + geom_point() + geom_smooth(method = "lm") + stat_cor(aes(color = Diagnostic)) + theme_pubclean() + labs(x = "log10(CC Total Area) - deaged", y = "log10(Offset k) - deaged") + scale_color_discrete(name = "Diagnostic", labels = c("ALZ", "MCI", "CONTROL"))
  
ggplot(
  data = filter(dados, ROI == "hemisphere"),
  aes(y = logkteorico_age_decay, x = logExposedArea_age_decay_CC, color = Diagnostic)
  ) + geom_point() + geom_smooth(method = "lm") + stat_cor(aes(color = Diagnostic)) + theme_pubclean() + labs(x = "log10(CC Smooth Area) - deaged", y = "log10(Offset k) - deaged") + scale_color_discrete(name = "Diagnostic", labels = c("ALZ", "MCI", "CONTROL"))
  
ggplot(
  data = filter(dados, ROI == "hemisphere"),
  aes(y = logkteorico, x = log10(WM_volume_CC), color = Diagnostic)
  ) + geom_point() + geom_smooth(method = "lm") + stat_cor(aes(color = Diagnostic)) + theme_pubclean() + labs(x = "log10(CC White Matter Volume)", y = "log10(Offset k)") + scale_color_discrete(name = "Diagnostic", labels = c("ALZ", "MCI", "CONTROL"))
```

```{r corpo caloso correlacoes, echo=FALSE}
 
correl_k_areat_cc = rcorr(
  filter(dados, ROI == "hemisphere")$logkteorico,
  log10(filter(dados, ROI == "hemisphere")$TotalArea_corrected_CC)
  )
correl_k_areat_cc

correl_k_areas_cc = rcorr(
  filter(dados, ROI == "hemisphere")$logkteorico,
  log10(filter(dados, ROI == "hemisphere")$SmoothArea_corrected_CC
  ))
correl_k_areas_cc

correl_k_areat_decay_cc = rcorr(
  filter(dados, ROI == "hemisphere")$logkteorico_corr_decay,
  filter(dados, ROI == "hemisphere")$log_TotalArea_corr_decay_CC
  )
correl_k_areat_decay_cc  

correl_k_areas_decay_cc = rcorr(
  filter(dados, ROI == "hemisphere")$logkteorico_corr_decay,
  filter(dados, ROI == "hemisphere")$log_SmoothArea_corr_decay_CC
  )
correl_k_areas_decay_cc
  
correl_k_vol_cc = rcorr(
  filter(dados, ROI == "hemisphere")$logkteorico,
  log10(filter(dados, ROI == "hemisphere")$WM_volume_CC)
  )
correl_k_vol_cc
```

## COMPARAR HEMIFERIOS - desvio interhemisferico
```{r comparar hemisferios, echo=FALSE}

ggplot(data = dados,
       aes(
       y = logkteorico.L,
       x = logkteorico.R,
       color = Diagnostic,
       fill = Diagnostic
       )) + geom_point() + geom_smooth(method = "lm") + stat_cor(aes(color = Diagnostic)) + theme_pubclean() + scale_color_discrete(name = "Diagnostic", labels = c("ALZ", "MCI", "CONTROL")) + labs(x = "log10(Offset k) Right hemi", y = "log10(Offset k) Left hemi")

ggplot(data = dados,
       aes(
       y = logkteorico_age_decay.L,
       x = logkteorico_age_decay.R,
       color = Diagnostic,
       fill = Diagnostic
       )) + geom_point() + geom_smooth(method = "lm") + stat_cor(aes(color = Diagnostic)) + theme_pubclean() + scale_color_discrete(name = "Diagnostic", labels = c("ALZ", "MCI", "CONTROL"))

ggplot(
  data = dados,
  aes(left_minus_right, color = Diagnostic)
  ) + geom_density() + theme_pubclean() + scale_color_discrete(name = "Diagnostic", labels = c("ALZ", "MCI", "CONTROL"))

ggplot(
  data = dados,
  aes(left_minus_right_agedecay, color = Diagnostic)
  ) + geom_density() + theme_pubclean() + scale_color_discrete(name = "Diagnostic", labels = c("ALZ", "MCI", "CONTROL"))

ggplot(data = dados,
       aes(
       y = abs((logkteorico.L - logkteorico.R) / (
       var(logkteorico.L, na.rm = TRUE) + var(logkteorico.R, na.rm = TRUE) - 2 *
       cov(logkteorico.L, logkteorico.R, use = "complete")
       ) ^ (1 / 4)),
       x = logTotalArea_corrected_CC,
       color = Diagnostic,
       fill = Diagnostic
       )) + geom_point() + geom_smooth(method = "lm") + theme_pubclean() + scale_color_discrete(name = "Diagnostic", labels = c("ALZ", "MCI", "CONTROL")) + stat_cor() 

ggplot(data = dados,
       aes(
       y = abs((logkteorico.L - logkteorico.R) / (
       var(logkteorico.L, na.rm = TRUE) + var(logkteorico.R, na.rm = TRUE) - 2 *
       cov(logkteorico.L, logkteorico.R, use = "complete")
       ) ^ (1 / 4)),
       x = logTotalArea_corrected_CC,
       color = Diagnostic,
       fill = Diagnostic
       )) + geom_point() + geom_smooth(method = "lm", fullrange = TRUE) + theme_pubclean() + scale_color_discrete(name = "Diagnostic", labels = c("ALZ", "MCI", "CONTROL")) +
  xlim(0, 15) + stat_cor() 

ggplot(data = dados,
       aes(
       y = abs((logkteorico.L - logkteorico.R) / (
       var(logkteorico.L, logkteorico.R, na.rm = TRUE)
       ) ^ (1 / 4)),
       x = TotalArea_corrected_CC,
       color = Diagnostic
       )) + geom_col() + theme_pubclean() + scale_color_discrete(name = "Diagnostic", labels = c("ALZ", "MCI", "CONTROL"))

ggplot(data = dados,
       aes(
       y = abs((logkteorico.L - logkteorico.R) / (
       var(logkteorico.L, na.rm = TRUE) + var(logkteorico.R, na.rm = TRUE) - 2 *
       cov(logkteorico.L, logkteorico.R, use = "complete")
       ) ^ (1 / 4)),
       x = log10(WM_volume_CC),
       color = Diagnostic,
       fill = Diagnostic
       )) + geom_point() + geom_smooth(method = "lm") + theme_pubclean() + scale_color_discrete(name = "Diagnostic", labels = c("ALZ", "MCI", "CONTROL")) + labs(x = "log10(WM_Volume_CC)", y = "\varepsilon") + stat_cor() 

ggplot(data = dados,
       aes(
       y = abs((logkteorico.L - logkteorico.R) / (
       var(logkteorico.L, na.rm = TRUE) + var(logkteorico.R, na.rm = TRUE) - 2 *
       cov(logkteorico.L, logkteorico.R, use = "complete")
       ) ^ (1 / 4)),
       x = log10(WM_volume_CC),
       color = Diagnostic,
       fill = Diagnostic
       )) + geom_point() + geom_smooth(method = "lm", fullrange = TRUE) + theme_pubclean() + scale_color_discrete(name = "Diagnostic", labels = c("ALZ", "MCI", "CONTROL")) + labs(x = "log10(WM_Volume_CC)", y = "\varepsilon") + xlim(0, 10) + stat_cor() 

ggplot(data = dados,
       aes(
       y = abs((logkteorico.L - logkteorico.R) / (
       var(logkteorico.L, logkteorico.R, na.rm = TRUE)
       ) ^ (1 / 4)),
       x = log10(WM_volume_CC),
       color = Diagnostic
       )) + geom_col() + theme_pubclean() + scale_color_discrete(name = "Diagnostic", labels = c("ALZ", "MCI", "CONTROL"))

#### --sem o log na medida do eixo x -- ####

ggplot(data = dados,
       aes(
       y = abs((logkteorico.L - logkteorico.R) / (
       var(logkteorico.L, na.rm = TRUE) + var(logkteorico.R, na.rm = TRUE) - 2 *
       cov(logkteorico.L, logkteorico.R, use = "complete")
       ) ^ (1 / 4)),
       x = TotalArea_corrected_CC,
       color = Diagnostic,
       fill = Diagnostic
       )) + geom_point() + geom_smooth(method = "lm") + theme_pubclean() + scale_color_discrete(name = "Diagnostic", labels = c("ALZ", "MCI", "CONTROL")) + labs(x = "TotalArea_CC", y = "\varepsilon") + stat_cor() 

ggplot(data = dados,
       aes(
       y = abs((logkteorico.L - logkteorico.R) / (
       var(logkteorico.L, na.rm = TRUE) + var(logkteorico.R, na.rm = TRUE) - 2 *
       cov(logkteorico.L, logkteorico.R, use = "complete")
       ) ^ (1 / 4)),
       x = TotalArea_corrected_CC,
       color = Diagnostic,
       fill = Diagnostic
       )) + geom_point() + geom_smooth(method = "lm") + theme_pubclean() + scale_color_discrete(name = "Diagnostic", labels = c("ALZ", "MCI", "CONTROL")) + labs(x = "TotalArea_CC", y = "\varepsilon") + xlim(0, 4e+05) + stat_cor() 

ggplot(data = dados,
       aes(
       y = abs((logkteorico.L - logkteorico.R) / (
       var(logkteorico.L, logkteorico.R, na.rm = TRUE)
       ) ^ (1 / 4)),
       x = TotalArea_corrected_CC,
       color = Diagnostic
       )) + geom_col() + theme_pubclean() + scale_color_discrete(name = "Diagnostic", labels = c("ALZ", "MCI", "CONTROL"))

ggplot(data = dados,
       aes(
       y = abs((logkteorico.L - logkteorico.R) / (
       var(logkteorico.L, na.rm = TRUE) + var(logkteorico.R, na.rm = TRUE) - 2 *
       cov(logkteorico.L, logkteorico.R, use = "complete")
       ) ^ (1 / 4)),
       x = WM_volume_CC,
       color = Diagnostic,
       fill = Diagnostic
       )) + geom_point() + geom_smooth(method = "lm") + theme_pubclean() + scale_color_discrete(name = "Diagnostic", labels = c("ALZ", "MCI", "CONTROL")) + labs(x = "WM_Volume_CC", y = "\varepsilon") + stat_cor() 

ggplot(data = dados,
       aes(
       y = abs((logkteorico.L - logkteorico.R) / (
       var(logkteorico.L, na.rm = TRUE) + var(logkteorico.R, na.rm = TRUE) - 2 *
       cov(logkteorico.L, logkteorico.R, use = "complete")
       ) ^ (1 / 4)),
       x = WM_volume_CC,
       color = Diagnostic,
       fill = Diagnostic
       )) + geom_point() + geom_smooth(method = "lm") + theme_pubclean() + scale_color_discrete(name = "Diagnostic", labels = c("ALZ", "MCI", "CONTROL")) + labs(x = "WM_Volume_CC", y = "\varepsilon") + xlim(0, 4500) + stat_cor() 

ggplot(data = dados,
       aes(
       y = abs((logkteorico.L - logkteorico.R) / (
       var(logkteorico.L, logkteorico.R, na.rm = TRUE)
       ) ^ (1 / 4)),
       x = WM_volume_CC,
       color = Diagnostic
       )) + geom_col() + theme_pubclean() + scale_color_discrete(name = "Diagnostic", labels = c("ALZ", "MCI", "CONTROL"))

```

## AREA E VOLUME DO CORPO CALOSO  - comprimento axonal medio ponderado
```{r corpo caloso 3, echo=FALSE, cache=FALSE}

ggplot(
  data = filter(dados, ROI == "hemisphere"),
  aes(y = logkteorico,x = logWhiteSurfArea, color = Diagnostic)
  ) + geom_point() + geom_smooth(method = "lm") + stat_cor() + theme_pubclean()

ggplot(
  data = filter(dados, ROI == "hemisphere"),
  aes(x = WM_volume_CC, y = TotalArea_corrected_CC, color = Diagnostic, fill = Diagnostic)
  ) + geom_point() + geom_smooth(method = "lm") + stat_cor() + theme_pubclean()


ggplot(
  data = filter(dados, ROI == "hemisphere"),
  aes(y = logkteorico,x = logTotalArea_corrected_CC, color = Diagnostic)
  ) + geom_point() + geom_smooth(method = "lm") + stat_cor() + theme_pubclean()


my_comparisons <- list( c("CONTROLE", "CCL"), c("CONTROLE", "ALZ"), c("CCL", "ALZ") )


ggplot(
  data = filter(dados, ROI == "hemisphere"), aes(y = l, x = Diagnostic)) + geom_boxplot(aes(color = Diagnostic, alpha = 0.2, fill = Diagnostic)) + theme_pubclean() + stat_compare_means(method = "anova", label.y = 0.053) + stat_compare_means(label = "p.format", method = "t.test", comparisons = my_comparisons, hide.ns = TRUE)   

ggplot(
  data = filter(dados, ROI == "hemisphere"), aes(y = l, x = Diagnostic)) + geom_boxplot(aes(color = Diagnostic, alpha = 0.2, fill = Diagnostic)) + theme_pubclean() + stat_compare_means(method = "anova", label.y = 0.053) + stat_compare_means(label = "p.signif", method = "t.test", hide.ns = TRUE)

ggplot(
  data = filter(dados, ROI == "hemisphere"),
  aes(l, alpha = 0.2, fill = Diagnostic)
  ) + geom_histogram() + theme_pubclean()

ggplot(
  data = filter(dados, ROI == "hemisphere"),
  aes(
  x = l,
  y = logkteorico,
  color = Diagnostic,
  fill = Diagnostic
  )
  ) + geom_point() + geom_smooth(method = "lm") + theme_pubclean() + scale_color_discrete(name = "Diagnostic", labels = c("ALZ", "MCI", "CONTROL")) + stat_cor() 

ggplot(
  data = filter(dados, ROI == "hemisphere"),
  aes(
  x = l,
  y = logkteorico_corr_decay,
  color = Diagnostic,
  fill = Diagnostic
  )
  ) + geom_point() + geom_smooth(method = "lm") + theme_pubclean() + scale_color_discrete(name = "Diagnostic", labels = c("ALZ", "MCI", "CONTROL")) + stat_cor() 

```
## FRACAO CALOSA
```{r corpo caloso 4, echo=FALSE, cache=FALSE}

source("corpo_caloso.R")


ggplot(
  data = filter(dados, ROI == "hemisphere"),
  aes(y = TotalArea_corrected_CC, x = WhiteSurfArea_corrected, color = Diagnostic, fill = Diagnostic)
  ) + geom_point() + geom_smooth(method = "lm") + stat_cor() + theme_pubclean()

ggplot(
  data = filter(dados, ROI == "hemisphere"),
  aes(
  x = WhiteSurfArea,
  y = logkteorico,
  color = Diagnostic,
  fill = Diagnostic
  )
  ) + geom_point() + geom_smooth(method = "lm") + theme_pubclean() + scale_color_discrete(name = "Diagnostic", labels = c("ALZ", "MCI", "CONTROL")) + stat_cor() 

ggplot(
  data = filter(dados, ROI == "hemisphere"),
  aes(
  x = fC,
  y = logkteorico,
  color = Diagnostic,
  fill = Diagnostic
  )
  ) + geom_point() + geom_smooth(method = "lm") + theme_pubclean() + scale_color_discrete(name = "Diagnostic", labels = c("ALZ", "MCI", "CONTROL")) + stat_cor() 

ggplot(
  data = filter(dados, ROI == "hemisphere"),
  aes(
  x = fC,
  y = logkteorico_corr_decay,
  color = Diagnostic,
  fill = Diagnostic
  )
  ) + geom_point() + geom_smooth(method = "lm") + theme_pubclean() + scale_color_discrete(name = "Diagnostic", labels = c("ALZ", "MCI", "CONTROL")) + stat_cor() 

```
