---
title: "Relatorio PRJ Girificacao"
author: "Fernanda Hansen Pacheco de Moraes"
date: "11 de dezembro de 2018"
output:
  html_document:
    df_print: kable
    fig_caption: yes
    fig_width: 8
    number_sections: yes
    theme: paper
    toc: yes
  pdf_document:
    toc: yes
    toc_depth: '5'
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(
	echo = TRUE,
	message = FALSE,
	warning = FALSE
)
```

```{r preparo, message=FALSE, warning=FALSE, include=FALSE}
# PREPARO

# define a area de trabalho
# setwd("Z:/PRJ1513_GIRIFICACAO_CONTROLES/03_PROCS/STATISTICS/V6/")# se no idor
# setwd("E:/idor/Gyrification/") # se no pendrive
# setwd("C:/Users/fernanda.hansen/Desktop/aging/V6/") # se no pendrive
 setwd("C:/Users/ferna/Documents/idor/Gyrification/RRRRRR/aging/V6/") # se no computador

# carrega os pacotes utilizados
source("01-call_packages.R")

# Chama as funcoes
source("02-funcoes.R")

# onde estao os arquivos de resultados:
# path <- str_c("Z:/PRJ1513_GIRIFICACAO_CONTROLES/03_PROCS/PROC_DATA/STATS/long_tables/")
 path <- str_c("C:/Users/ferna/Documents/idor/Gyrification/STATS/long_tables/")

# path_yujiangscript <- str_c("Z:/PRJ1513_GIRIFICACAO_CONTROLES/03_PROCS/PROC_DATA/STATS/Wang_code_extraction/")
 path_yujiangscript <- str_c("C:/Users/ferna/Documents/idor/Gyrification/STATS/Wang_code_extraction/")

# path_yujiangscript_newsurfaces <- str_c("Z:/PRJ1513_GIRIFICACAO_CONTROLES/03_PROCS/PROC_DATA/STATS/Wang_code_extraction/")
path_yujiangscript_newsurfaces <- str_c("C:/Users/ferna/Documents/idor/Gyrification/STATS/Wang_code_extraction/")

alpha_beta <- str_c("C:/Users/ferna/Documents/idor/Gyrification/RRRRRR/aging/V6/data/resultados/")
  
# path_lobes <- str_c("Z:/PRJ1513_GIRIFICACAO_CONTROLES/03_PROCS/PROC_DATA/STATS/LobesScaling/")
path_lobes <- str_c("C:/Users/ferna/Documents/idor/Gyrification/STATS/LobesScaling/")
 
# path_sessions <- str_c("Z:/PRJ1513_GIRIFICACAO_CONTROLES/03_PROCS/RAW_DATA/BIDS/")
 path_sessions <- str_c("C:/Users/ferna/Documents/idor/Gyrification/Processamento_longitudinal/V6/data/")

# path_FA <- str_c("Z:/PRJ1513_GIRIFICACAO_CONTROLES/03_PROCS/STATISTICS/V6/data/FA_CC/")
 path_FA <- str_c("C:/Users/ferna/Documents/idor/Gyrification/Processamento_longitudinal/V6/data/FA_CC/") 
 
# importa os resultados
source("03-import_files.R") # arquivos dos sujeitos

# organiza os arquivos
source("04-organiza.R")
# source("rotina_arquivos_neuroquant_comparisson.R")

dados_raw <- dados

verificar_lGI_zero <- filter(dados, localGI == 0 | is.na(localGI))
write.csv(verificar_lGI_zero, "verificar_lGI_zero.csv")

# retira os outros diagnosticos e deixa so quem tem machine definido
dados_all <- dados %>% filter(
    Diagnostic == "CONTROLE" |
      Diagnostic == "CCL" |
      Diagnostic == "ALZ", !is.na(logAvgThickness), localGI != 0 | !is.na(localGI), !is.infinite(logExposedArea)) %>% 
  droplevels()

dados_excluidos <- anti_join(dados_raw, dados_all)
write.csv(dados_excluidos, "dados_excluidos.csv")

dados <- dados_all

Age.cor = 25

# Prepara os dados para analise
source("05-analises_prep.R")


# deixa so Philips

# dados$Diagnostic[dados$Diagnostic == "CONTROLE"] <- "Control"
# dados$Diagnostic[dados$Diagnostic == "ALZ"] <- "AD"
# dados$Diagnostic[dados$Diagnostic == "CCL"] <- "MCI"

dados$Diagnostic <- factor(dados$Diagnostic, levels = c("ALZ", "CCL","CONTROLE"))


dados <- filter(dados, machine == "Philips-Achieva", Longitudinal_correction == "yes")

# separa em arquivo de hemisferios e de lobos
dados_hemi_v1 <- filter(dados, ROI == "hemisphere", Session == 1, method == "FreeSurferStandard")

dados_lobos_v1 <- unique(filter(dados, ROI == "F" | ROI == "T" | ROI == "O" | ROI == "P", Session == 1, method == "Yujiang_script", !is.na(K_age_decay))) %>% droplevels()

dados_v1 <- filter(dados, ROI == "F" | ROI == "T" | ROI == "O" | ROI == "P" | ROI == "hemisphere", Session == 1, method == "Yujiang_script") %>% droplevels()

dados_hemi_v1_CH <- unique(filter(dados, ROI == "hemisphere", Session == 1, method == "Yujiang_script", !is.na(K_age_decay)))

dados_hemi_v1_eTIV <- dplyr::select(dados_hemi_v1, c(SUBJ, eTIV))

dados_hemi_v1_CH <- left_join(dados_hemi_v1_CH, dados_hemi_v1_eTIV, by = "SUBJ")
dados_hemi_v1_CH <- subset(dados_hemi_v1_CH, select = -c(eTIV.x))
names(dados_hemi_v1_CH)[names(dados_hemi_v1_CH) == 'eTIV.y'] <- 'eTIV'


dados_hemi_v1_CH$Diagnostic <- revalue(dados_hemi_v1_CH$Diagnostic, c("CONTROLE"="CTL", "ALZ"="AD", "CCL" = "MCI"))
dados_lobos_v1$Diagnostic <- revalue(dados_lobos_v1$Diagnostic, c("CONTROLE"="CTL", "ALZ"="AD", "CCL" = "MCI"))

```

# Metodo

## Verificacao idade

```{r idade, eval=FALSE, message=FALSE, warning=FALSE, include=FALSE}
part_ses <-
  part_ses %>% mutate(birthday_date_fromacqdate = acq_date - dyears(age))
  
  part_ses %>% filter(str_detect(birthday, "\\|") == TRUE) %>% dplyr::select(participant_id, birthday, birthday_date_fromacqdate) %>% kable(digits = 4) %>% kable_styling()
  
  tabela_sujeitos %>% filter(str_detect(birthday, "\\|") == TRUE) %>%
  dplyr::select(participant_id, session_id, birthday, Birthdate, age , Age) %>% kable(digits = 4) %>% kable_styling()
  
  tabela_sujeitos %>% filter(str_detect(birthday, "\\|") == FALSE) %>% mutate(
  birthday = as.Date(birthday, "%d-%m-%Y"),
  Birthdate = as.Date(Birthdate, "%d/%m/%Y"),
  age = year(acq_date) - year(birthday) ,
  age_Age = age - Age,
  datas_nascimento_diferentes = ifelse(birthday == Birthdate, "TRUE", "FALSE")
  ) %>% dplyr::select(
  participant_id,
  session_id,
  birthday,
  Birthdate,
  age,
  Age,
  age_Age,
  datas_nascimento_diferentes
  ) %>% arrange(desc(abs(age_Age))) %>% kable(digits = 4) %>% kable_styling()
  
  tabela_sujeitos %>% filter(str_detect(birthday, "\\|") == FALSE) %>% mutate(
  birthday = as.Date(birthday, "%d-%m-%Y"),
  Birthdate = as.Date(Birthdate, "%d/%m/%Y"),
  age = year(acq_date) - year(birthday) ,
  age_Age = age - Age,
  datas_nascimento_diferentes = ifelse(birthday == Birthdate, "TRUE", "FALSE")
  ) %>% dplyr::select(
  participant_id,
  session_id,
  birthday,
  Birthdate,
  age,
  Age,
  age_Age,
  datas_nascimento_diferentes
  ) %>% arrange(desc(abs(age_Age))) %>% filter(datas_nascimento_diferentes == "FALSE") %>% kable(digits = 4) %>% kable_styling()
  
  tabela_sujeitos %>% filter(is.na(Birthdate)) %>% dplyr::select(participant_id, session_id, birthday, Birthdate, Age) %>% kable(digits = 4) %>% kable_styling()
  
  tabela_sujeitos <-
  dplyr::select(tabela_sujeitos,-c(Birthdate, Age))

```

## Numero de sujeitos

### Todos da lista
```{r N sujeitos, eval=FALSE, message=FALSE, warning=FALSE, include=FALSE}
summary_dados_all <- filter(dados_raw, Session == 1) %>%
  group_by(machine, Diagnostic) %>%
  summarise(
  N = n_distinct(SUBJ),
  Mean = mean(Age),
  Max = max(Age),
  Min = min(Age),
  Median = median(Age),
  Std = sd(Age)
  )
  summary_dados_all %>% kable(digits = 4) %>% kable_styling()
```

### Todos processados pelo FreeSurfer com sucesso
```{r N sujeitos FS, eval=FALSE, message=FALSE, warning=FALSE, include=FALSE}
summary_dados_all <- filter(dados_all, Session == 1) %>%
  group_by(Diagnostic, machine) %>%
  summarise(
  N = n_distinct(SUBJ),
  Mean = mean(Age),
  Max = max(Age),
  Min = min(Age),
  Median = median(Age),
  Std = sd(Age)
  )
  summary_dados_all %>% kable(digits = 4) %>% kable_styling()
```

### Somente Philips

```{r N sujeitos Philips, echo=FALSE, message=FALSE, warning=FALSE}
summary_dados_hemi <- dados %>%
  group_by(Session, Diagnostic, Gender) %>%
  summarise(
  N = n_distinct(SUBJ),
  Mean = mean(Age),
  Max = max(Age),
  Min = min(Age),
  Median = median(Age),
  Std = sd(Age)
  )
  summary_dados_hemi %>% kable(digits = 4) %>% kable_styling()
  
  summary_dados_hemi_v1 <- dados_hemi_v1_CH %>%
  group_by(Gender, Diagnostic) %>%
  summarise(
  N = n_distinct(SUBJ),
  Mean = mean(Age),
  Max = max(Age),
  Min = min(Age),
  Median = median(Age),
  Std = sd(Age)
  )
  summary_dados_hemi_v1 %>% kable(digits = 4) %>% kable_styling()
  
  summary_dados_hemi_v1_diag <-
  dados_hemi_v1_CH %>%
  group_by(Diagnostic) %>%
  summarise(
  N = n_distinct(SUBJ),
  Mean = mean(Age),
  Max = max(Age),
  Min = min(Age),
  Median = median(Age),
  Std = sd(Age)
  )
  summary_dados_hemi_v1_diag %>% kable(digits = 4) %>% kable_styling()
  
sumario_dados_hemi_v1_diag <-
dados_hemi_v1_CH %>%
group_by(Diagnostic) %>%
summarise(
N = n_distinct(SUBJ),
Mean_age = mean(Age),
Std_age = sd(Age),
Mean_ESC = mean(ESC),
Std_ESC = sd(ESC),
Mean_COGNITIVE_INDEX = mean(COGNITIVE_INDEX,  na.rm = TRUE),
STD_COGNITIVE_INDEX = sd(COGNITIVE_INDEX,  na.rm = TRUE))

dados_hemi_v1_CH %>%
group_by(Diagnostic) %>%
summarise(
N = n_distinct(SUBJ),
Mean_age = mean(Age),
Std_age = sd(Age),
Mean_ESC = mean(ESC),
Std_ESC = sd(ESC),
Mean_COGNITIVE_INDEX = mean(COGNITIVE_INDEX,  na.rm = TRUE),
STD_COGNITIVE_INDEX = sd(COGNITIVE_INDEX,  na.rm = TRUE),
Mean_Tau = mean(TAU,  na.rm = TRUE),
STD_Tau = sd(TAU,  na.rm = TRUE),
Mean_AB4 = mean(`AB1-40`,  na.rm = TRUE),
STD_AB40 = sd(`AB1-40`,  na.rm = TRUE),
Mean_AB42= mean(`AB1-42`,  na.rm = TRUE),
STD_AB42 = sd(`AB1-42`,  na.rm = TRUE),
Mean_eTIV = mean(eTIV,  na.rm = TRUE),
STD_eTIV = sd(eTIV,  na.rm = TRUE),
Mean_AVGTHICK = mean(AvgThickness,  na.rm = TRUE),
STD_AVGTHICK = sd(AvgThickness,  na.rm = TRUE),
Mean_K = mean(K,  na.rm = TRUE),
STD_K = sd(K,  na.rm = TRUE),
Mean_lipoxin = mean(Lipoxina,  na.rm = TRUE),
STD_lipoxin = sd(Lipoxina,  na.rm = TRUE)) %>% kable(digits = 4) %>% kable_styling()

sumario_dados_hemi_v1_diag <-
dados_hemi_v1_CH %>%
group_by(Gender, Diagnostic) %>%
summarise(
N = n_distinct(SUBJ),
Mean_age = mean(Age),
Std_age = sd(Age),
Mean_ESC = mean(ESC),
Std_ESC = sd(ESC),
Mean_COGNITIVE_INDEX = mean(COGNITIVE_INDEX,  na.rm = TRUE),
STD_COGNITIVE_INDEX = sd(COGNITIVE_INDEX,  na.rm = TRUE),
Mean_Tau = mean(TAU,  na.rm = TRUE),
STD_Tau = sd(TAU,  na.rm = TRUE),
Mean_AB4 = mean(`AB1-40`,  na.rm = TRUE),
STD_AB40 = sd(`AB1-40`,  na.rm = TRUE),
Mean_AB42= mean(`AB1-42`,  na.rm = TRUE),
STD_AB42 = sd(`AB1-42`,  na.rm = TRUE),
Mean_eTIV = mean(eTIV,  na.rm = TRUE),
STD_eTIV = sd(eTIV,  na.rm = TRUE),
Mean_AVGTHICK = mean(AvgThickness,  na.rm = TRUE),
STD_AVGTHICK = sd(AvgThickness,  na.rm = TRUE),
Mean_K = mean(K,  na.rm = TRUE),
STD_K = sd(K,  na.rm = TRUE),
Mean_lipoxin = mean(Lipoxina,  na.rm = TRUE),
STD_lipoxin = sd(Lipoxina,  na.rm = TRUE))

sumario_dados_hemi_v1_diag %>% kable(digits = 4) %>% kable_styling()

lm_age <- lm(Age ~ Diagnostic, data = dados_hemi_v1)
anova(lm_age)
Age_diag_tk <- TukeyHSD(aov(Age ~ Diagnostic, data = dados_hemi_v1))
Age_diag_tk

lm_esc <- lm(ESC ~ Diagnostic, data = dados_hemi_v1)
anova(lm_esc)
ESC_diag_TK <- TukeyHSD(aov(ESC ~ Diagnostic, data = dados_hemi_v1))
ESC_diag_TK

lm_COGNITIVE_INDEX <- lm(COGNITIVE_INDEX ~ Diagnostic, data = dados_hemi_v1)
anova(lm_COGNITIVE_INDEX)
COGINDX_diag_TK <- TukeyHSD(aov(COGNITIVE_INDEX ~ Diagnostic, data = dados_hemi_v1))
COGINDX_diag_TK
```

### Sujeitos excluídos

```{r N sujeitos excluidos, echo=FALSE, message=FALSE, warning=FALSE}

excl <-
  dados_excluidos %>% dplyr::select(c(SUBJ, age, Diagnostic, machine, ROI, localGI)) %>% filter(ROI == "hemisphere") %>% distinct(SUBJ, .keep_all = TRUE)
  
  excl %>% kable(digits = 4) %>% kable_styling()

```

### lista sujeitos
```{r subjs, eval=FALSE, message=FALSE, warning=FALSE, include=FALSE}
dados_hemi_v1 %>% dplyr::select(SUBJ, acq_date, Age, Gender, Diagnostic) %>% unique() %>% kable(digits = 4) %>% kable_styling()
```

## Comparacao entre modo com correcao longitudinal e sem

```{r comp longitudinal correction, eval=FALSE, warning=TRUE, include=FALSE}

dados_long_comp <-
  dados_all %>% filter( machine == "Philips-Achieva",
  ROI == "hemisphere", Session == "1", method == "FreeSurferStandard") %>% group_by(SUBJ, hemi) %>% filter(n() > 1)

paste("Para essa verificacao, filtrei os sujeitos que tinham o processamento com e sem correcao. Assim o numero final de sujeitos incluidos é igual a ", n_distinct(dados_long_comp$SUBJ))

ggplot(dados_long_comp, aes(x = Diagnostic, y = AvgThickness, color = Longitudinal_correction, fill = Longitudinal_correction, alpha = 0.4)) +
  geom_boxplot() +
  stat_compare_means(method = "t.test", label.y = 2.7, paired = TRUE) + theme_pubr() + ylim(2, 2.8)

ggplot(dados_long_comp, aes(x = Diagnostic, y = eTIV, color = Longitudinal_correction, fill = Longitudinal_correction, alpha = 0.4)) +
  geom_boxplot() +
  stat_compare_means(method = "t.test", paired = TRUE) + theme_pubr() 
                     
ggplot(dados_long_comp, aes(x = Diagnostic, y = TotalArea, color = Longitudinal_correction, fill = Longitudinal_correction, alpha = 0.4)) +
  geom_boxplot() +
  stat_compare_means(method = "t.test", paired = TRUE) + theme_pubr()       

ggplot(dados_long_comp, aes(x = Diagnostic, y = GMvolume, color = Longitudinal_correction, fill = Longitudinal_correction, alpha = 0.4)) +
  geom_boxplot() +
  stat_compare_means(method = "t.test", paired = TRUE) + theme_pubr()   

ggplot(dados_long_comp, aes(x = Diagnostic, y = WhiteSurfArea, color = Longitudinal_correction, fill = Longitudinal_correction, alpha = 0.4)) +
  geom_boxplot() +
  stat_compare_means(method = "t.test", paired = TRUE) + theme_pubr()   

ggplot(dados_long_comp, aes(x = Diagnostic, y = localGI, color = Longitudinal_correction, fill = Longitudinal_correction, alpha = 0.4)) +
  geom_boxplot() +
  stat_compare_means(method = "t.test", paired = TRUE) + theme_pubr()

ggplot(dados_long_comp, aes(x = Diagnostic, y = ExposedArea, color = Longitudinal_correction, fill = Longitudinal_correction, alpha = 0.4)) +
  geom_boxplot() +
  stat_compare_means(method = "t.test", paired = TRUE) + theme_pubr()

lm_long <- dados_long_comp %>%
  group_by(Longitudinal_correction) %>%
  do(fit_long = lm(1/2 * logAvgThickness + logTotalArea ~ logExposedArea, data = ., na.action = na.omit))

long_Coef = tidy(lm_long,
                    fit_long,
                    conf.int = TRUE,
                    conf.level = 0.95)
long_Pred = augment(lm_long, fit_long)
long_R2 = glance(lm_long, fit_long)

ggplot(dados_long_comp, aes(logExposedArea, 1/2*logAvgThickness + logTotalArea, color = Longitudinal_correction, fill = Longitudinal_correction, alpha = 0.4)) +
  geom_point() +
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + labs(caption = paste("N = ", n_distinct(dados_long_comp$SUBJ))) 

long_Coef %>% kable(digits = 4) %>% kable_styling()

ggplot(
  data = filter(long_Coef, term == "logExposedArea"),
  aes(x = reorder(Longitudinal_correction, estimate), y = estimate, color = Longitudinal_correction)
  ) +
  geom_point() + geom_errorbar(aes(ymin = estimate - std.error, ymax = estimate + std.error)) + geom_hline(yintercept = 1.25, linetype = "dashed") + theme_pubr() + labs(y = "slope")


lm_long_diag <- dados_long_comp %>%
  group_by(Longitudinal_correction, Diagnostic) %>%
  do(fit_long_diag = lm(1/2 * logAvgThickness + logTotalArea ~ logExposedArea, data = ., na.action = na.omit))

long_Coef_diag = tidy(lm_long_diag,
                    fit_long_diag,
                    conf.int = TRUE,
                    conf.level = 0.95)
ggplot(
  data = filter(long_Coef_diag, term == "logExposedArea"),
  aes(x = Diagnostic, y = estimate, color = Longitudinal_correction)
  ) +
  geom_point() + geom_errorbar(aes(ymin = estimate - std.error, ymax = estimate + std.error)) + geom_hline(yintercept = 1.25, linetype = "dashed") + theme_pubr() + labs(y = "slope")

long_cor <- lm(1 / 2 * logAvgThickness + logTotalArea ~ logExposedArea, data = filter(dados_long_comp, Longitudinal_correction == "yes"), na.action = na.omit)
no_long_cor <- lm(1 / 2 * logAvgThickness + logTotalArea ~ logExposedArea, data = filter(dados_long_comp, Longitudinal_correction == "no"))

paste("Verificando a diferenca entre o coeficiente obtido com a correcao longitudinal e sem, qual o valor p deste teste?", test_coef(long_cor, 2, coef(no_long_cor)[2]))

```

## Comparing extraction script

```{r eval=FALSE, include=FALSE}
dados_hemi_v1 <- filter(dados, ROI == "hemisphere", Session == 1, method == "FreeSurferStandard") %>% dplyr::select(
  SUBJ,
  acq_date,
  hemi,
  method,
  Age, Age_interval, Age_interval10,
  Gender,
  ESC,
  Diagnostic,
  COGNITIVE_INDEX,
  AvgThickness,
  logAvgThickness,
  TotalArea,
  logTotalArea,
  ExposedArea,
  logExposedArea,
  WhiteSurfArea,
  logWhiteSurfArea,
  localGI ,
  K,
  Sample,
  logAvgThickness_age_decay,
  logTotalArea_age_decay,
  logExposedArea_age_decay,
  K_age_decay
  ) 

dados_hemi_v1_YW <- filter(dados, ROI == "hemisphere", Session == 1, method == "Yujiang_script", Longitudinal_correction == "yes") %>% dplyr::select(
  SUBJ,
  acq_date,
  hemi,
  method,
  Age,Age_interval,
  Gender,
  ESC,
  Diagnostic,
  COGNITIVE_INDEX,
  AvgThickness,
  logAvgThickness,
  TotalArea,
  logTotalArea,
  logTotalFullArea,
  ExposedArea,
  logExposedArea,
  WhiteSurfArea,
  ConvexHullArea,
  logWhiteSurfArea,
  logConvexHullArea,
  localGI ,
  K,
  Sample,
  logAvgThickness_age_decay,
  logTotalArea_age_decay,
  logExposedArea_age_decay,
  K_age_decay
  ) 
#%>% filter(!str_detect(SUBJ, 'SUBJ091'))

dados_hemi_v1_CH_20_30 <- filter(dados, ROI == "hemisphere", Session == 1, method == "Yujiang_script_020_30") %>% dplyr::select(
  SUBJ,
  acq_date,
  hemi,
  method,
  Age,Age_interval,
  Gender,
  Diagnostic,
  AvgThickness,
  logAvgThickness,
  TotalArea,
  logTotalArea,
  logTotalFullArea,
  ExposedArea,
  logExposedArea,
  WhiteSurfArea,
  ConvexHullArea,
  logWhiteSurfArea,
  logConvexHullArea,
  localGI ,
  K,
  Sample,
  logAvgThickness_age_decay,
  logTotalArea_age_decay,
  logExposedArea_age_decay,
  K_age_decay
  ) 

dados_hemi_v1_CH_30_30 <- filter(dados, ROI == "hemisphere", Session == 1, method == "Yujiang_script_030_30") %>% dplyr::select(
  SUBJ,
  acq_date,
  hemi,
  method,
  Age,Age_interval,
  Gender,
  Diagnostic,
  AvgThickness,
  logAvgThickness,
  TotalArea,
  logTotalArea,
  logTotalFullArea,
  ExposedArea,
  logExposedArea,
  WhiteSurfArea,
  ConvexHullArea,
  logWhiteSurfArea,
  logConvexHullArea,
  localGI ,
  K,
  Sample,
  logAvgThickness_age_decay,
  logTotalArea_age_decay,
  logExposedArea_age_decay,
  K_age_decay
  ) 

dados_hemi_v1_CH_50_30 <- filter(dados, ROI == "hemisphere", Session == 1, method == "Yujiang_script_050_30") %>% dplyr::select(
  SUBJ,
  acq_date,
  hemi,
  method,
  Age,Age_interval,
  Gender,
  Diagnostic,
  AvgThickness,
  logAvgThickness,
  TotalArea,
  logTotalArea,
  logTotalFullArea,
  ExposedArea,
  logExposedArea,
  WhiteSurfArea,
  ConvexHullArea,
  logWhiteSurfArea,
  logConvexHullArea,
  localGI ,
  K,
  Sample,
  logAvgThickness_age_decay,
  logTotalArea_age_decay,
  logExposedArea_age_decay,
  K_age_decay
  ) 

dados_hemi_v1_CH_75_30 <- filter(dados, ROI == "hemisphere", Session == 1, method == "Yujiang_script_075_30") %>% dplyr::select(
  SUBJ,
  acq_date,
  hemi,
  method,
  Age,Age_interval,
  Gender,
  Diagnostic,
  AvgThickness,
  logAvgThickness,
  TotalArea,
  logTotalArea,
  logTotalFullArea,
  ExposedArea,
  logExposedArea,
  WhiteSurfArea,
  ConvexHullArea,
  logWhiteSurfArea,
  logConvexHullArea,
  localGI ,
  K,
  Sample,
  logAvgThickness_age_decay,
  logTotalArea_age_decay,
  logExposedArea_age_decay,
  K_age_decay
  ) 

dados_hemi_v1_CH_100_30 <-
  filter(dados,
  ROI == "hemisphere",
  Session == 1,
  method == "Yujiang_script_100_30") %>% dplyr::select(
  SUBJ,
  acq_date,
  hemi,
  method,
  Age,Age_interval,
  Gender,
  Diagnostic,
  AvgThickness,
  logAvgThickness,
  TotalArea,
  logTotalArea,
  logTotalFullArea,
  ExposedArea,
  logExposedArea,
  WhiteSurfArea,
  ConvexHullArea,
  logWhiteSurfArea,
  logConvexHullArea,
  localGI ,
  K,
  Sample,
  logAvgThickness_age_decay,
  logTotalArea_age_decay,
  logExposedArea_age_decay,
  K_age_decay
  ) 
  

dados_hemi_extrac_Comp <- full_join(dados_hemi_v1, dados_hemi_v1_YW)
dados_hemi_extrac_Comp <- full_join(dados_hemi_extrac_Comp, dados_hemi_v1_CH_20_30)
dados_hemi_extrac_Comp <- full_join(dados_hemi_extrac_Comp, dados_hemi_v1_CH_30_30)
dados_hemi_extrac_Comp <- full_join(dados_hemi_extrac_Comp, dados_hemi_v1_CH_50_30)
dados_hemi_extrac_Comp <- full_join(dados_hemi_extrac_Comp, dados_hemi_v1_CH_75_30)
dados_hemi_extrac_Comp <- full_join(dados_hemi_extrac_Comp, dados_hemi_v1_CH_100_30)

paste("number of subjects in dados_hemi_extract_comp is ", n_distinct(dados_hemi_extrac_Comp$SUBJ))

dados_hemi_extrac_Comp <- semi_join(dados_hemi_extrac_Comp, dados_hemi_v1_YW, by = "SUBJ", "acq_date", "hemi", "Diagnostic")
dados_hemi_extrac_Comp <- semi_join(dados_hemi_extrac_Comp, dados_hemi_v1_CH_20_30, by = "SUBJ", "acq_date", "hemi", "Diagnostic")
dados_hemi_extrac_Comp <- semi_join(dados_hemi_extrac_Comp, dados_hemi_v1_CH_30_30, by = "SUBJ", "acq_date", "hemi", "Diagnostic")
dados_hemi_extrac_Comp <- semi_join(dados_hemi_extrac_Comp, dados_hemi_v1_CH_50_30, by = "SUBJ", "acq_date", "hemi", "Diagnostic")
dados_hemi_extrac_Comp <- semi_join(dados_hemi_extrac_Comp, dados_hemi_v1_CH_75_30, by = "SUBJ", "acq_date", "hemi", "Diagnostic")
dados_hemi_extrac_Comp <- semi_join(dados_hemi_extrac_Comp, dados_hemi_v1_CH_100_30, by = "SUBJ", "acq_date", "hemi", "Diagnostic")

paste("N de subjects in the next plots", n_distinct(dados_hemi_extrac_Comp$SUBJ), ".")

ggplot(dados_hemi_extrac_Comp, aes(x = Diagnostic, y = AvgThickness, color = method, fill = method, alpha = 0.4)) +
  geom_boxplot() +
  stat_compare_means(method = "anova") + theme_pubr()

ggplot(dados_hemi_extrac_Comp, aes(x = Diagnostic, y = TotalArea, color = method, fill = method, alpha = 0.4)) +
  geom_boxplot() +
  stat_compare_means(method = "anova") + theme_pubr()       

ggplot(dados_hemi_extrac_Comp, aes(x = Diagnostic, y = ExposedArea, color = method, fill = method, alpha = 0.4)) +
  geom_boxplot() +
  stat_compare_means(method = "anova") + theme_pubr()

ggplot(dados_hemi_extrac_Comp, aes(x = Diagnostic, y = K, color = method, fill = method, alpha = 0.4)) +
  geom_boxplot() +
  stat_compare_means(method = "anova") + theme_pubr()

dados_hemi_extract_Comp_wide <- right_join(dados_hemi_v1, dados_hemi_v1_CH, by = c("SUBJ", "hemi", "acq_date", "Diagnostic", "Gender"))

ggplot(dados_hemi_extract_Comp_wide, aes(x = logAvgThickness.x, y = logAvgThickness.y, alpha = 0.4)) +
  geom_point() +
  geom_smooth(method = "lm", se = TRUE) +
  geom_abline(intercept = 0, slope = 1) + 
  theme_pubr() + labs(caption = paste("N = ", n_distinct(dados_hemi_extract_Comp_wide$SUBJ))) 

ggplot(dados_hemi_extract_Comp_wide, aes(x = logTotalArea.x, y = logTotalArea.y, alpha = 0.4)) +
  geom_point() +
  geom_smooth(method = "lm", se = TRUE) +
  geom_abline(intercept = 0, slope = 1) + 
  theme_pubr() + labs(caption = paste("N = ", n_distinct(dados_hemi_extract_Comp_wide$SUBJ))) 

ggplot(dados_hemi_extract_Comp_wide, aes(x = logTotalArea.x, y = logTotalFullArea, alpha = 0.4)) +
  geom_point() +
  geom_smooth(method = "lm", se = TRUE) +
  geom_abline(intercept = 0, slope = 1) + 
  theme_pubr() + labs(caption = paste("N = ", n_distinct(dados_hemi_extract_Comp_wide$SUBJ)))

ggplot(dados_hemi_extract_Comp_wide, aes(x = logExposedArea.x, y = logExposedArea.y, alpha = 0.4)) +
  geom_point() +
  geom_smooth(method = "lm", se = TRUE) +
  geom_abline(intercept = 0, slope = 1) + 
  theme_pubr() + labs(caption = paste("N = ", n_distinct(dados_hemi_extract_Comp_wide$SUBJ))) 



lm_method <- dados_hemi_extrac_Comp %>%
  group_by(method) %>%
  do(fit_method = lm(1/2 * logAvgThickness + logTotalArea ~ logExposedArea, data = ., na.action = na.omit))

method_Coef = tidy(lm_method,
                    fit_method,
                    conf.int = TRUE,
                    conf.level = 0.95)
method_Pred = augment(lm_method, fit_method)
method_R2 = glance(lm_method, fit_method)

ggplot(dados_hemi_extrac_Comp, aes(logExposedArea, 1/2*logAvgThickness + logTotalArea, color = method, fill = method)) +
  geom_point() +
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + labs(caption = paste("N = ", n_distinct(dados_hemi_extrac_Comp$SUBJ))) + theme(legend.title = element_blank())

method_Coef %>% kable(digits = 4) %>% kable_styling()

ggplot(
  data = filter(method_Coef, term == "logExposedArea"),
  aes(x = reorder(method, estimate), y = estimate, color = method)
  ) +
  geom_point() + geom_errorbar(aes(ymin = estimate - std.error, ymax = estimate + std.error)) + geom_hline(yintercept = 1.25, linetype = "dashed") + theme_pubr() + labs(y = "slope") + theme(axis.text.x = element_text(angle = 45, hjust = 1), legend.position = 'none')


lm_method_diag <- dados_hemi_extrac_Comp %>%
  group_by(method, Diagnostic) %>%
  do(fit_method_diag = lm(1/2 * logAvgThickness + logTotalArea ~ logExposedArea, data = ., na.action = na.omit))

method_Coef_diag = tidy(lm_method_diag,
                    fit_method_diag,
                    conf.int = TRUE,
                    conf.level = 0.95)

method_Coef_diag %>% kable(digits = 4) %>% kable_styling()


ggplot(
  data = filter(method_Coef_diag, term == "logExposedArea"),
  aes(x = Diagnostic, y = estimate, color = Diagnostic)
  ) +
  geom_point() + geom_errorbar(aes(ymin = estimate - std.error, ymax = estimate + std.error)) + geom_hline(yintercept = 1.25, linetype = "dashed") + theme_pubr() + labs(y = "slope") + facet_grid(. ~ method) + theme(axis.text.x = element_text(angle = 45, hjust = 1))

Yujiang_cor <- lm(1 / 2 * logAvgThickness + logTotalArea ~ logExposedArea, data = filter(dados_hemi_extrac_Comp, method == "Yujiang_script"), na.action = na.omit)
FreeSurfer_cor <- lm(1 / 2 * logAvgThickness + logTotalArea ~ logExposedArea, data = filter(dados_hemi_extrac_Comp, method == "FreeSurferStandard"))

paste("Verificando a diferenca entre o coeficiente obtido com a extracao de dados pelo script e pelo modo tradicional do Freesurfer, qual o valor p deste teste?", test_coef(Yujiang_cor, 2, coef(FreeSurfer_cor)[2]))

Yujiang_20_30_cor <- lm(1 / 2 * logAvgThickness + logTotalArea ~ logExposedArea, data = filter(dados_hemi_extrac_Comp, method == "Yujiang_script_020_30"), na.action = na.omit)

paste("Verificando a diferenca entre o coeficiente obtido com as alteracoes de parametro do FreeSurfer (20 e 40) e com o script, qual o valor p deste teste?", test_coef(Yujiang_20_30_cor, 2, coef(Yujiang_cor)[2]))

Yujiang_30_30_cor <- lm(1 / 2 * logAvgThickness + logTotalArea ~ logExposedArea, data = filter(dados_hemi_extrac_Comp, method == "Yujiang_script_030_30"), na.action = na.omit)

paste("Verificando a diferenca entre o coeficiente obtido com as alteracoes de parametro do FreeSurfer (30 e 40) e com o script, qual o valor p deste teste?", test_coef(Yujiang_30_30_cor, 2, coef(Yujiang_cor)[2]))

Yujiang_50_30_cor <- lm(1 / 2 * logAvgThickness + logTotalArea ~ logExposedArea, data = filter(dados_hemi_extrac_Comp, method == "Yujiang_script_050_30"), na.action = na.omit)

paste("Verificando a diferenca entre o coeficiente obtido com as alteracoes de parametro do FreeSurfer (50 e 40) e com o script, qual o valor p deste teste?", test_coef(Yujiang_50_30_cor, 2, coef(Yujiang_cor)[2]))

Yujiang_75_30_cor <- lm(1 / 2 * logAvgThickness + logTotalArea ~ logExposedArea, data = filter(dados_hemi_extrac_Comp, method == "Yujiang_script_075_30"), na.action = na.omit)

paste("Verificando a diferenca entre o coeficiente obtido com as alteracoes de parametro do FreeSurfer (75 e 40) e com o script, qual o valor p deste teste?", test_coef(Yujiang_75_30_cor, 2, coef(Yujiang_cor)[2]))

# Yujiang_100_30_cor <- lm(1 / 2 * logAvgThickness + logTotalArea ~ logExposedArea, data = filter(dados_hemi_extrac_Comp, method == "Yujiang_script_100_30"), na.action = na.omit)

# paste("Verificando a diferenca entre o coeficiente obtido com as alteracoes de parametro do FreeSurfer (100 e 40) e com o script, qual o valor p deste teste?", test_coef(Yujiang_100_30_cor, 2, coef(Yujiang_cor)[2]))


lm_method_CH <- filter(dados_hemi_extrac_Comp, method != "FreeSurferStandard") %>%
  group_by(method) %>%
  do(fit_method_CH = lm(1/2 * logAvgThickness + logTotalArea ~ logConvexHullArea, data = .))

method_Coef_CH = tidy(lm_method_CH,
                    fit_method_CH,
                    conf.int = TRUE,
                    conf.level = 0.95)

ggplot(filter(dados_hemi_extrac_Comp, method != "FreeSurferStandard"), aes(logConvexHullArea, 1/2*logAvgThickness + logTotalArea, color = method, fill = method, alpha = 0.4)) +
  geom_point() +
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + labs(caption = paste("N = ", n_distinct(dados_hemi_extrac_Comp$SUBJ))) 

method_Coef_CH %>% kable(digits = 4) %>% kable_styling()

ggplot(
  data = filter(method_Coef_CH, term == "logConvexHullArea"),
  aes(x = reorder(method, estimate), y = estimate, color = method)
  ) +
  geom_point() + geom_errorbar(aes(ymin = estimate - std.error, ymax = estimate + std.error)) + geom_hline(yintercept = 1.25, linetype = "dashed") + theme_pubr() + labs(y = "slope") + theme(axis.text.x = element_text(angle = 45, hjust = 1))


lm_method_diag_CH <- filter(dados_hemi_extrac_Comp, method != "FreeSurferStandard") %>%
  group_by(method, Diagnostic) %>%
  do(fit_method_diag_CH = lm(1/2 * logAvgThickness + logTotalArea ~ logConvexHullArea, data = .))

method_Coef_diag_CH = tidy(lm_method_diag_CH,
                    fit_method_diag_CH,
                    conf.int = TRUE,
                    conf.level = 0.95)

method_Coef_diag_CH %>% kable(digits = 4) %>% kable_styling()


ggplot(
  data = filter(method_Coef_diag_CH, term == "logConvexHullArea"),
  aes(x = Diagnostic, y = estimate, color = Diagnostic)
  ) +
  geom_point() + geom_errorbar(aes(ymin = estimate - std.error, ymax = estimate + std.error)) + geom_hline(yintercept = 1.25, linetype = "dashed") + theme_pubr() + labs(y = "slope") + facet_grid(. ~ method) + theme(axis.text.x = element_text(angle = 45, hjust = 1))


Yujiang_cor <- lm(1 / 2 * logAvgThickness + logTotalArea ~ logConvexHullArea, data = filter(dados_hemi_extrac_Comp, method == "Yujiang_script"), na.action = na.omit)

Yujiang_20_30_cor <- lm(1 / 2 * logAvgThickness + logTotalArea ~ logConvexHullArea, data = filter(dados_hemi_extrac_Comp, method == "Yujiang_script_020_30"), na.action = na.omit)

paste("Verificando a diferenca entre o coeficiente obtido com as alteracoes de parametro do FreeSurfer (20 e 40) e com o script, qual o valor p deste teste?", test_coef(Yujiang_20_30_cor, 2, coef(Yujiang_cor)[2]))

Yujiang_30_30_cor <- lm(1 / 2 * logAvgThickness + logTotalArea ~ logConvexHullArea, data = filter(dados_hemi_extrac_Comp, method == "Yujiang_script_030_30"), na.action = na.omit)

paste("Verificando a diferenca entre o coeficiente obtido com as alteracoes de parametro do FreeSurfer (30 e 40) e com o script, qual o valor p deste teste?", test_coef(Yujiang_30_30_cor, 2, coef(Yujiang_cor)[2]))


Yujiang_50_30_cor <- lm(1 / 2 * logAvgThickness + logTotalArea ~ logConvexHullArea, data = filter(dados_hemi_extrac_Comp, method == "Yujiang_script_050_30"), na.action = na.omit)

paste("Verificando a diferenca entre o coeficiente obtido com as alteracoes de parametro do FreeSurfer (50 e 40) e com o script, qual o valor p deste teste?", test_coef(Yujiang_50_30_cor, 2, coef(Yujiang_cor)[2]))


Yujiang_75_30_cor <- lm(1 / 2 * logAvgThickness + logTotalArea ~ logConvexHullArea, data = filter(dados_hemi_extrac_Comp, method == "Yujiang_script_075_30"), na.action = na.omit)

paste("Verificando a diferenca entre o coeficiente obtido com as alteracoes de parametro do FreeSurfer (75 e 40) e com o script, qual o valor p deste teste?", test_coef(Yujiang_75_30_cor, 2, coef(Yujiang_cor)[2]))


# Yujiang_100_30_cor <- lm(1 / 2 * logAvgThickness + logTotalArea ~ logConvexHullArea, data = filter(dados_hemi_extrac_Comp, method == "Yujiang_script_100_30"), na.action = na.omit)

# paste("Verificando a diferenca entre o coeficiente obtido com as alteracoes de parametro do FreeSurfer (100 e 40) e com o script, qual o valor p deste teste?", test_coef(Yujiang_100_30_cor, 2, coef(Yujiang_cor)[2]))

```


```{r echo=FALSE}

dados_hemi_v1 <- filter(dados, ROI == "hemisphere", Session == 1, method == "FreeSurferStandard") %>% dplyr::select(
  SUBJ,
  acq_date,
  hemi,
  method,
  Age,Age_interval,
  Gender,
  ESC,
  Diagnostic,
  COGNITIVE_INDEX,
  AvgThickness,
  logAvgThickness,
  TotalArea,
  logTotalArea,
  ExposedArea,
  logExposedArea,
  WhiteSurfArea,
  logWhiteSurfArea,
  localGI ,
  K,
  Sample,
  logAvgThickness_age_decay,
  logTotalArea_age_decay,
  logExposedArea_age_decay,
  K_age_decay
  ) 

dados_hemi_v1_YW <- filter(dados, ROI == "hemisphere", Session == 1, method == "Yujiang_script", Longitudinal_correction == "yes") %>% dplyr::select(
  SUBJ,
  acq_date,
  hemi,
  method,
  Age,Age_interval,
  Gender,
  ESC,
  Diagnostic,
  COGNITIVE_INDEX,
  AvgThickness,
  logAvgThickness,
  TotalArea,
  logTotalArea,
  logTotalFullArea,
  ExposedArea,
  logExposedArea,
  WhiteSurfArea,
  ConvexHullArea,
  logWhiteSurfArea,
  logConvexHullArea,
  localGI ,
  K,
  Sample,
  logAvgThickness_age_decay,
  logTotalArea_age_decay,
  logExposedArea_age_decay,
  K_age_decay
  ) 

dados_hemi_extrac_Comp <- full_join(dados_hemi_v1, dados_hemi_v1_YW)

paste("number of subjects in dados_hemi_extract_comp is ", n_distinct(dados_hemi_extrac_Comp$SUBJ))

dados_hemi_extrac_Comp <- semi_join(dados_hemi_extrac_Comp, dados_hemi_v1_YW, by = "SUBJ", "acq_date", "hemi", "Diagnostic")

paste("N de subjects in the next plots", n_distinct(dados_hemi_extrac_Comp$SUBJ), ".")

ggplot(dados_hemi_extrac_Comp, aes(x = Diagnostic, y = AvgThickness, color = method, fill = method, alpha = 0.4)) +
  geom_boxplot() +
  stat_compare_means(method = "anova") + theme_pubr()

ggplot(dados_hemi_extrac_Comp, aes(x = Diagnostic, y = TotalArea, color = method, fill = method, alpha = 0.4)) +
  geom_boxplot() +
  stat_compare_means(method = "anova") + theme_pubr()       

ggplot(dados_hemi_extrac_Comp, aes(x = Diagnostic, y = ExposedArea, color = method, fill = method, alpha = 0.4)) +
  geom_boxplot() +
  stat_compare_means(method = "anova") + theme_pubr()

ggplot(dados_hemi_extrac_Comp, aes(x = Diagnostic, y = K, color = method, fill = method, alpha = 0.4)) +
  geom_boxplot() +
  stat_compare_means(method = "anova") + theme_pubr()

dados_hemi_extract_Comp_wide <- right_join(dados_hemi_v1, dados_hemi_v1_YW, by = c("SUBJ", "hemi", "acq_date", "Diagnostic", "Gender"))

ggplot(dados_hemi_extract_Comp_wide, aes(x = logAvgThickness.x, y = logAvgThickness.y, alpha = 0.4)) +
  geom_point() +
  geom_smooth(method = "lm", se = TRUE) +
  geom_abline(intercept = 0, slope = 1) + 
  theme_pubr() + labs(caption = paste("N = ", n_distinct(dados_hemi_extract_Comp_wide$SUBJ))) 

ggplot(dados_hemi_extract_Comp_wide, aes(x = logTotalArea.x, y = logTotalArea.y, alpha = 0.4)) +
  geom_point() +
  geom_smooth(method = "lm", se = TRUE) +
  geom_abline(intercept = 0, slope = 1) + 
  theme_pubr() + labs(caption = paste("N = ", n_distinct(dados_hemi_extract_Comp_wide$SUBJ))) 

ggplot(dados_hemi_extract_Comp_wide, aes(x = logTotalArea.x, y = logTotalFullArea, alpha = 0.4)) +
  geom_point() +
  geom_smooth(method = "lm", se = TRUE) +
  geom_abline(intercept = 0, slope = 1) + 
  theme_pubr() + labs(caption = paste("N = ", n_distinct(dados_hemi_extract_Comp_wide$SUBJ)))

ggplot(dados_hemi_extract_Comp_wide, aes(x = logExposedArea.x, y = logExposedArea.y, alpha = 0.4)) +
  geom_point() +
  geom_smooth(method = "lm", se = TRUE) +
  geom_abline(intercept = 0, slope = 1) + 
  theme_pubr() + labs(caption = paste("N = ", n_distinct(dados_hemi_extract_Comp_wide$SUBJ))) 

lm_method <- dados_hemi_extrac_Comp %>%
  group_by(method) %>%
  do(fit_method = lm(1/2 * logAvgThickness + logTotalArea ~ logExposedArea, data = ., na.action = na.omit))

method_Coef = tidy(lm_method,
                    fit_method,
                    conf.int = TRUE,
                    conf.level = 0.95)
method_Pred = augment(lm_method, fit_method)
method_R2 = glance(lm_method, fit_method)

ggplot(dados_hemi_extrac_Comp, aes(logExposedArea, 1/2*logAvgThickness + logTotalArea, color = method, fill = method)) +
  geom_point() +
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + labs(caption = paste("N = ", n_distinct(dados_hemi_extrac_Comp$SUBJ))) + theme(legend.title = element_blank())

method_Coef %>% kable(digits = 4) %>% kable_styling()

ggplot(
  data = filter(method_Coef, term == "logExposedArea"),
  aes(x = reorder(method, estimate), y = estimate, color = method)
  ) +
  geom_point() + geom_errorbar(aes(ymin = estimate - std.error, ymax = estimate + std.error)) + geom_hline(yintercept = 1.25, linetype = "dashed") + theme_pubr() + labs(y = "slope") + theme(axis.text.x = element_text(angle = 45, hjust = 1), legend.position = 'none')


lm_method_diag <- dados_hemi_extrac_Comp %>%
  group_by(method, Diagnostic) %>%
  do(fit_method_diag = lm(1/2 * logAvgThickness + logTotalArea ~ logExposedArea, data = ., na.action = na.omit))

method_Coef_diag = tidy(lm_method_diag,
                    fit_method_diag,
                    conf.int = TRUE,
                    conf.level = 0.95)

method_Coef_diag %>% kable(digits = 4) %>% kable_styling()


ggplot(
  data = filter(method_Coef_diag, term == "logExposedArea"),
  aes(x = Diagnostic, y = estimate, color = Diagnostic)
  ) +
  geom_point() + geom_errorbar(aes(ymin = estimate - std.error, ymax = estimate + std.error)) + geom_hline(yintercept = 1.25, linetype = "dashed") + theme_pubr() + labs(y = "slope") + facet_grid(. ~ method) + theme(axis.text.x = element_text(angle = 45, hjust = 1))

Yujiang_cor <- lm(1 / 2 * logAvgThickness + logTotalArea ~ logExposedArea, data = filter(dados_hemi_extrac_Comp, method == "Yujiang_script"), na.action = na.omit)
FreeSurfer_cor <- lm(1 / 2 * logAvgThickness + logTotalArea ~ logExposedArea, data = filter(dados_hemi_extrac_Comp, method == "FreeSurferStandard"))

paste("Verificando a diferenca entre o coeficiente obtido com a extracao de dados pelo script e pelo modo tradicional do Freesurfer, qual o valor p deste teste?", test_coef(Yujiang_cor, 2, coef(FreeSurfer_cor)[2]))

```

# Distrubuição da Sample

```{r distribuicao da Sample}
ggplot(data = dados_hemi_v1_CH, aes(x = Diagnostic, y = Age, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) + 
  geom_boxplot() + theme_pubr() +
  stat_compare_means(method = "anova")

ggplot(data = dados_hemi_v1_CH, aes(x = Diagnostic, y = ESC, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) + 
  geom_boxplot() + theme_pubr() +
  stat_compare_means(method = "anova")

ggplot(data = dados_hemi_v1_CH, aes(x = Diagnostic, y = K, color = sex, fill = sex, alpha = 0.4)) + 
  geom_boxplot() + theme_pubr() +
  stat_compare_means(method = "anova")



```



# Resultados - com correcao longitudinal


## Aplicacao do modelo

Todos os sujeitos
```{r model Mota & Houzel, echo=FALSE}

dados_datasetscomp$Diagnostic[dados_datasetscomp$Diagnostic == "CTL"] <- "Control"
dados_datasetscomp$Diagnostic[dados_datasetscomp$Diagnostic == "AD"] <- "AD"
dados_datasetscomp$Diagnostic[dados_datasetscomp$Diagnostic == "MCI"] <- "MCI"

lm_amostra <- (filter(dados_datasetscomp, Sample == "Mota&Houzel2015" | Sample == "IDOR")) %>%
  group_by(Sample) %>%
  do(fit_amostra = lm(1/2 * logAvgThickness + logTotalArea ~ logExposedArea, data = ., na.action = na.omit))

amostra_Coef = tidy(lm_amostra,
                    fit_amostra,
                    conf.int = TRUE,
                    conf.level = 0.95)
amostra_Pred = augment(lm_amostra, fit_amostra)
amostra_R2 = glance(lm_amostra, fit_amostra)

ggplot(filter(dados_datasetscomp, Sample == "Mota&Houzel2015" | Sample == "IDOR"), aes(logExposedArea, 1/2*logAvgThickness + logTotalArea)) +
  geom_point(aes(color = Sample)) +
  geom_smooth(method = "lm", se = FALSE) +
  theme_pubr()

amostra_Coef %>% kable(digits = 4) %>% kable_styling()

```

### Apenas humanos IDOR

```{r modelo_humanos, echo=FALSE, message=FALSE, warning=FALSE}
# dados_hemi_v1_CH <- unique(filter(dados, ROI == "hemisphere", Session == 1, method == "Yujiang_script", is.na(K_age_decay)))

lm_fit_comp_idor <- dados_hemi_v1_CH %>%
  group_by(Diagnostic) %>%
  do(fit_comp_idor = lm(1/2 * logAvgThickness + logTotalArea ~ logExposedArea, data = ., na.action = na.omit))

fit_comp_idor_Coef = tidy(lm_fit_comp_idor, fit_comp_idor,
                          conf.int = TRUE,
                          conf.level = 0.95)

fit_comp_idor_Coef %>% kable(digits = 4) %>% kable_styling()

ggplot(
  dados_hemi_v1_CH,
  aes(logExposedArea, 1 / 2 * logAvgThickness + logTotalArea, color = Diagnostic, fill = Diagnostic )
  ) +
  geom_point() +
  geom_smooth(method = "lm", se = TRUE) +
  geom_abline(slope = 1.25, intercept = coef(lm(1 / 2 * logAvgThickness + logTotalArea ~ logExposedArea, data = dados_hemi_v1_CH, na.action = na.omit))[1], color = "black") +
  theme_pubr() + labs(caption = paste(
  "Humanos de todos os diagnosticos, apenas 1 visita, N = ",
  n_distinct(dados_hemi_v1_CH$SUBJ)
  ))

paste("Verificando a diferenca entre o coeficiente obtido para a Sample e o teorico de 5/4, qual o valor p deste teste?", test_coef(lm(1 / 2 * logAvgThickness + logTotalArea ~ logExposedArea, data = dados_hemi_v1_CH, na.action = na.omit), 2, 1.25))

```

##### Sex
```{r sex }
ggplot(dados_hemi_v1_CH, aes(x = sex, y = K, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
         geom_boxplot() + stat_compare_means(method = "anova") + theme_pubr()

ggplot(dados_hemi_v1_CH, aes(logExposedArea, 1/2*logAvgThickness + logTotalArea, color = sex, fill = sex)) +
  geom_point() +
  geom_smooth(method = "lm", se = FALSE) +
  facet_wrap(Diagnostic ~ .) + stat_regline_equation() +
  theme_pubr()

lm_amostras_sex <- dados_hemi_v1_CH %>%
  group_by(sex, Diagnostic) %>%
  do(fit_amostras_sex = lm(1/2 * logAvgThickness + logTotalArea ~ logExposedArea, data = ., na.action = na.omit))

amostras_Coef_sex = tidy(lm_amostras_sex,
                    fit_amostras_sex,
                    conf.int = TRUE,
                    conf.level = 0.95)

 amostras_Coef_sex %>% kable(digits = 4) %>% kable_styling()


ggplot(dados_hemi_v1_CH, aes(x = sex, y = S, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
         geom_boxplot() + stat_compare_means(method = "anova") + theme_pubr()
 

 ggplot(dados_hemi_v1_CH, aes(x = sex, y = I, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
         geom_boxplot() + stat_compare_means(method = "anova") + theme_pubr()

 
```


## Influencia do envelhecimento e diagnostico na girificacao
### Envelhecimento saudavel
```{r envelhecimento, echo=FALSE, message=FALSE, warning=FALSE}

# dados_hemi_v1_CH <- unique(filter(dados, ROI == "hemisphere", Session == 1, method == "Yujiang_script", is.na(K_age_decay)))

ggplot(data = dados_hemi_v1_CH, aes(Diagnostic, Age, color = Diagnostic, fill = Diagnostic, alpha = 0.2)) +
  geom_boxplot() +
  theme_pubr() + stat_compare_means(method = "anova", label.y = 88) +
  stat_compare_means(method = "t.test", label = "p.signif") + ylim(40, 90)

aov_age <- aov(Age ~ Diagnostic, data = dados_hemi_v1_CH)
summary(aov_age)
TukeyHSD(aov_age)

ggplot(data = dados_hemi_v1_CH, aes(Age, AvgThickness, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_point() + stat_cor() +
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr()

ggplot(data = dados_hemi_v1_CH, aes(Age, logAvgThickness, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_point() + stat_cor() +
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr()

ggplot(data = dados_hemi_v1_CH, aes(Age, logAvgThickness_age_decay, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_point() + stat_regline_equation() +
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr()

ggplot(data = dados_hemi_v1_CH, aes(Age, TotalArea, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_point() + stat_cor() +
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr()

ggplot(data = dados_hemi_v1_CH, aes(Age, logTotalArea, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_point() + stat_cor() +
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr()

ggplot(data = dados_hemi_v1_CH, aes(Age, logTotalArea_age_decay, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_point() + stat_regline_equation() +
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr()

ggplot(data = dados_hemi_v1_CH, aes(Age, ExposedArea, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_point() + stat_cor() +
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr()

ggplot(data = dados_hemi_v1_CH, aes(Age, logExposedArea, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_point() + stat_cor() +
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr()

ggplot(data = dados_hemi_v1_CH, aes(Age, logExposedArea_age_decay, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_point() + stat_regline_equation() +
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr()

ggplot(data = filter(dados_hemi_v1_CH, Diagnostic == "CTL"), aes(logExposedArea, 1/2*logAvgThickness + logTotalArea, color = Age_interval, fill = Age_interval)) +
  geom_point() +
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + labs(caption = paste(
  "Controles, apenas 1 visita, N = ",
  n_distinct(filter(dados_hemi_v1_CH, Diagnostic == "CTL")$SUBJ)))

lm_age <- filter(dados_hemi_v1_CH, Diagnostic == "CTL") %>%
  group_by(Age_interval) %>%
  do(fit_age = lm(1/2 * logAvgThickness + logTotalArea ~ logExposedArea, data = ., na.action = na.omit))

age_Coef = tidy(lm_age,
                    fit_age,
                    conf.int = TRUE,
                    conf.level = 0.95)

age_augment = augment(lm_age, fit_age)

N_subj <- filter(dados_hemi_v1_CH, Diagnostic == "CTL") %>%
  group_by(Age_interval) %>%
  summarise(N_SUBJ = n_distinct(SUBJ))
                                           
ggplot(
  data = filter(age_Coef, term == "logExposedArea"),
  aes(
  x = Age_interval,
  y = estimate
  )
  ) +
  geom_point() +
  geom_errorbar(aes(ymin = estimate - std.error, ymax = estimate + std.error)) +
  geom_smooth(method = "lm", se = TRUE) +
  geom_hline(yintercept = 1.25, linetype = "dashed") +
  geom_text(aes(label = N_subj$N_SUBJ), nudge_y = 0.6) +
  theme_pubr() +
  labs(y = "slope") +
  labs(caption = paste(
  "Controles, apenas 1 visita, N = ",
  n_distinct(filter(dados_hemi_v1_CH, Diagnostic == "CTL")$SUBJ)))

age_Coef_term <- filter(age_Coef, term == "logExposedArea")

age_coef_aov <- (kruskal.test(estimate ~ Age_interval, data = age_Coef_term))
age_coef_aov
# age_coef_aov_TK <- dunn_test(estimate ~ Age_interval, data = age_Coef_term)

# plot(age_coef_aov_TK , las=1 , col="brown")

age_coef_aov_k <- (aov(K ~ Age_interval, data = dados_hemi_v1_CH))
summary(age_coef_aov_k)
age_coef_aov_K_TK <- TukeyHSD(age_coef_aov_k)
age_coef_aov_K_TK
plot(age_coef_aov_K_TK , las=1 , col="brown")


lm_age_diag <- dados_hemi_v1_CH %>%
  group_by(Diagnostic, 
           Age_interval) %>%
  do(fit_age_diag = lm(1/2 * logAvgThickness + logTotalArea ~ logExposedArea, data = ., na.action = na.omit))

age_Coef_diag = tidy(lm_age_diag,
                    fit_age_diag,
                    conf.int = TRUE,
                    conf.level = 0.95)

age_Coef_diag

N_subj_diag <- dados_hemi_v1_CH %>%
  group_by(Diagnostic, 
           Age_interval) %>%
  summarise(N_SUBJ = n_distinct(SUBJ))

ggplot(
  data = filter(age_Coef_diag, term == "logExposedArea"),
  aes(
  x = Age_interval,
  y = estimate, color = Diagnostic
  )
  ) +
  geom_point() +
  geom_errorbar(aes(ymin = estimate - std.error, ymax = estimate + std.error)) +
  geom_smooth(method = "lm", se = TRUE) +
  geom_text(aes(label = N_subj_diag$N_SUBJ), nudge_y = 0.6) +
  geom_hline(yintercept = 1.25, linetype = "dashed") +
  stat_compare_means(method = "kruskal.test") +
  theme_pubr() +
  labs(y = "slope") +
  facet_grid(Diagnostic ~ . )  +
  labs(caption = paste(
  "Todos, apenas 1 visita, N = ",
  n_distinct(dados_hemi_v1_CH$SUBJ)))
```
I:
```{r i age}

ggplot(data = dados_hemi_v1_CH, aes(Age, I, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_point() + stat_cor() +
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr()

age_coef_aov_I <- (aov(I ~ Age_interval, data = dados_hemi_v1_CH))
summary(age_coef_aov_I)
age_coef_aov_I_TK <- TukeyHSD(age_coef_aov_I)
age_coef_aov_I_TK
plot(age_coef_aov_I_TK , las=1 , col="brown")

ggplot(data = dados_hemi_v1_CH, aes(Age, I_age_decay, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_point() + stat_cor() +
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr()


```

S:
```{r s age}

ggplot(data = dados_hemi_v1_CH, aes(Age, S, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_point() + stat_cor() +
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr()


age_coef_aov_S <- (aov(S ~ Age_interval, data = dados_hemi_v1_CH))
summary(age_coef_aov_S)
age_coef_aov_S_TK <- TukeyHSD(age_coef_aov_S)
age_coef_aov_S_TK
plot(age_coef_aov_S_TK , las=1 , col="brown")

ggplot(data = dados_hemi_v1_CH, aes(Age, S_age_decay, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_point() + stat_cor() +
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr()

```

#### Envelhecimento saudavel - lobes
```{r envelhecimento - lobes, echo=FALSE, message=FALSE, warning=FALSE}

ggplot(data = dados_lobos_v1, aes(Age, AvgThickness, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_point() + stat_cor() +
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + facet_grid(ROI ~ .)

ggplot(data = dados_lobos_v1, aes(Age, logAvgThickness, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_point() + stat_cor() +
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + facet_grid(ROI ~ .)

ggplot(data = dados_lobos_v1, aes(Age, logAvgThickness_age_decay, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_point() + stat_regline_equation() +
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + facet_grid(ROI ~ .)

ggplot(data = dados_lobos_v1, aes(Age, TotalArea, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_point() + stat_cor() +
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + facet_grid(ROI ~ .)

ggplot(data = dados_lobos_v1, aes(Age, logTotalArea, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_point() + stat_cor() +
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + facet_grid(ROI ~ .)

ggplot(data = dados_lobos_v1, aes(Age, logTotalArea_age_decay, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_point() + stat_regline_equation() +
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + facet_grid(ROI ~ .)

ggplot(data = dados_lobos_v1, aes(Age, ExposedArea, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_point() + stat_cor() +
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + facet_grid(ROI ~ .)

ggplot(data = dados_lobos_v1, aes(Age, logExposedArea, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_point() + stat_cor() +
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + facet_grid(ROI ~ .)

ggplot(data = dados_lobos_v1, aes(Age, logExposedArea_age_decay, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_point() + stat_regline_equation() +
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + facet_grid(ROI ~ .)

lm_age <- dados_lobos_v1 %>%
  group_by(ROI, Diagnostic, 
           Age_interval) %>%
  do(fit_age = lm(1/2 * logAvgThickness + logTotalArea ~ logExposedArea, data = ., na.action = na.omit))

age_Coef = tidy(lm_age,
                    fit_age,
                    conf.int = TRUE,
                    conf.level = 0.95)

ggplot(
  data = filter(age_Coef, term == "logExposedArea"),
  aes(
  x = Age_interval,
  y = estimate, color = Diagnostic
  )
  ) +
  geom_point() + geom_errorbar(aes(ymin = estimate - std.error, ymax = estimate + std.error)) + geom_smooth(method = "lm", se = TRUE) + geom_hline(yintercept = 1.25, linetype = "dashed")  + stat_compare_means(method = "kruskal.test") + theme_pubr() + labs(y = "slope") + facet_grid(ROI ~ Diagnostic) + theme(axis.text.x = element_text(angle = 45, hjust = 1))
```


### Girifcacao e envelhecimento

```{r girificacao e envelhecimento, echo=FALSE, message=FALSE, warning=FALSE}

lm_diagnostic <- dados_hemi_v1_CH %>%
  group_by(Diagnostic) %>%
  do(fit_diagnostic = lm(1/2 * logAvgThickness + logTotalArea ~ logExposedArea, data = ., na.action = na.omit))

diagnostic_Coef = tidy(lm_diagnostic,
                    fit_diagnostic,
                    conf.int = TRUE,
                    conf.level = 0.95)


diagnostic_Coef %>% kable(digits = 4) %>% kable_styling()


ggplot(
  data = filter(diagnostic_Coef, term == "logExposedArea"),
  aes(
  x = Diagnostic,
  y = estimate, color = Diagnostic
  )
  ) +
  geom_point() + geom_errorbar(aes(ymin = estimate - std.error, ymax = estimate + std.error)) + geom_smooth(method = "lm", se = TRUE) + geom_hline(yintercept = 1.25, linetype = "dashed")  + stat_compare_means(method = "kruskal.test") + theme_pubr() + labs(y = "slope")

#kruskal.test(estimate, Diagnostic, data = filter(diagnostic_Coef, term == "logExposedArea"))

ggplot(data = dados_hemi_v1_CH, aes(logExposedArea, 1/2 * logAvgThickness + logTotalArea, color = Diagnostic, fill = Diagnostic)) +
  geom_point() +
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr()

ggplot(data = dados_hemi_v1_CH, aes(Age, K, color = Diagnostic, fill = Diagnostic)) +
  geom_point() + stat_regline_equation() +
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr()

ggplot(dados_hemi_v1_CH, aes(x = Diagnostic, y = K, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_boxplot() +
 stat_compare_means(method = "anova", label.y = -0.51) + theme_pubr()

ggplot(dados_hemi_v1_CH, aes(x = Diagnostic, y = K.zscore, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_boxplot() + stat_compare_means(method = "anova") + theme_pubr()

ggplot(dados_hemi_v1_CH, aes(x= K, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_density() + theme_pubr()

ggplot(dados_hemi_v1_CH, aes(x= K.zscore, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_density() + theme_pubr()

ggplot(dados_hemi_v1_CH, aes(x= K_age_decay.zscore, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_density() + theme_pubr()

aov_diag <- aov(K ~ Diagnostic, data = dados_hemi_v1_CH)
summary(aov_diag)
aov_diag_K_diag_TK <- TukeyHSD(aov_diag)
aov_diag_K_diag_TK

aov_diag_K_diag_TK_t <- mutate(as.data.frame(aov_diag_K_diag_TK$Diagnostic), Contrast = c("MCI-AD", "CTL-AD", "CTL-MCI") , morphological_parameter = "K", ROI = "hemisphere", Age_correction = "no")

ggplot(dados_hemi_v1_CH, aes(x = Diagnostic, y = logAvgThickness, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_boxplot() +
 stat_compare_means(method = "anova") + theme_pubr()


ggplot(dados_hemi_v1_CH, aes(x= logAvgThickness, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_density() + theme_pubr()

ggplot(dados_hemi_v1_CH, aes(x= logAvgThickness.zscore, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_density() + theme_pubr()

ggplot(dados_hemi_v1_CH, aes(x= logAvgThickness_age_decay.zscore, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_density() + theme_pubr()

aov_diag2 <- aov(logAvgThickness ~ Diagnostic, data = dados_hemi_v1_CH)
summary(aov_diag2)
aov_diag_2_diag_TK <- TukeyHSD(aov_diag2)
aov_diag_2_diag_TK

aov_diag_2_diag_TK_t <- mutate(as.data.frame(aov_diag_2_diag_TK$Diagnostic), Contrast = c("MCI-AD", "CTL-AD", "CTL-MCI"), morphological_parameter = "logAvgThickness", ROI = "hemisphere", Age_correction = "no")


model.age.esc <- aov(K ~ Diagnostic + Age + ESC, data = dados_hemi_v1_CH)
model.age.esc.2 <- aov(K ~ Diagnostic*Age*ESC, data = dados_hemi_v1_CH)
summary(model.age.esc)
summary(model.age.esc.2)
anova(model.age.esc,model.age.esc.2) %>% kable(digits = 4) %>% kable_styling()
etaSquared(model.age.esc.2) %>% kable(digits = 4) %>% kable_styling()
```

#### Exploring DA---
It seems that the DA sample is actually a misture of two samples. One of them seems to be very easy to predict, the other one intercepts K values for CTL and MCI. 
```{r Exploring DA, eval=FALSE, include=FALSE}
filter(dados_hemi_v1_CH, K_age_decay.zscore < -1) %>% 
  ggplot(aes(x= K_age_decay.zscore, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_density() + theme_pubr()

filter(dados_hemi_v1_CH, K_age_decay.zscore < -1) %>% 
  ggplot(aes(x= I_age_decay.zscore, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_density() + theme_pubr()

filter(dados_hemi_v1_CH, K_age_decay.zscore < -1) %>% 
  ggplot(aes(x= S_age_decay.zscore, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_density() + theme_pubr()

filter(dados_hemi_v1_CH, K_age_decay.zscore < -1) %>% 
ggplot(aes(x = COGNITIVE_INDEX, y = K_age_decay.zscore, color = Diagnostic)) + geom_point() + theme_pubr()

filter(dados_hemi_v1_CH, K_age_decay.zscore > -1) %>% 
 ggplot(aes(x = COGNITIVE_INDEX, y = K_age_decay.zscore, color = Diagnostic)) + geom_point() + theme_pubr()

filter(dados_hemi_v1_CH, K_age_decay.zscore < -1) %>% 
  ggplot(aes(x= K_age_decay.zscore, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_density() + theme_pubr()
```
What is the difference between these two DA groups?

Sex?
```{r eval=FALSE, include=FALSE}
filter(dados_hemi_v1_CH, Diagnostic == "AD") %>% 
ggplot(aes(x= K_age_decay.zscore, color = sex,  alpha = 0.4)) +
geom_density() + theme_pubr() 
```

Age:
```{r eval=FALSE, include=FALSE}
 filter(dados_hemi_v1_CH, Diagnostic == "AD") %>% 
ggplot(aes(x= K_age_decay.zscore, color = Age_interval, fill = Age_interval, alpha = 0.4)) +
geom_density() + theme_pubr()
```

Years of Education:
```{r eval=FALSE, include=FALSE}
 filter(dados_hemi_v1_CH, Diagnostic == "AD") %>% 
ggplot(aes(x= K_age_decay.zscore, color = ESC, fill = ESC, alpha = 0.4)) +
geom_density() + theme_pubr()

filter(dados_hemi_v1_CH, K_age_decay.zscore < -1, Diagnostic == "AD") %>% 
ggplot(aes(x= K_age_decay.zscore, color = ESC, fill = ESC, alpha = 0.4)) +
geom_density() + theme_pubr()
```


#### Exploring MCI---
The MCI have the same behaviour, with less pronounced difference
```{r Exploring  MCI, eval=FALSE, include=FALSE}

filter(dados_hemi_v1_CH, K_age_decay.zscore < -0.75 & K_age_decay.zscore > -1.2) %>% 
  ggplot(aes(x= K_age_decay.zscore, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_density() + theme_pubr()

filter(dados_hemi_v1_CH, K_age_decay.zscore < -0.75 & K_age_decay.zscore > -1.2) %>% 
 ggplot(aes(x = COGNITIVE_INDEX, y = K_age_decay.zscore, color = Diagnostic)) + geom_point() + theme_pubr()
```

```{r eval=FALSE, include=FALSE}

ggplot(dados_hemi_v1_CH, aes(x = Diagnostic, y = I, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_boxplot() +
 stat_compare_means(method = "anova" ) + theme_pubr()

ggplot(dados_hemi_v1_CH, aes(x = Diagnostic, y = I.zscore, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_boxplot() +
 stat_compare_means(method = "anova" ) + theme_pubr()

ggplot(dados_hemi_v1_CH, aes(x = I.zscore, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_density() + theme_pubr()

aov_diag_I <- aov(I ~ Diagnostic, data = dados_hemi_v1_CH)
summary(aov_diag_I)
aov_diag_I_diag_TK <- TukeyHSD(aov_diag_I)
aov_diag_I_diag_TK

aov_diag_I_diag_TK_t <- mutate(as.data.frame(aov_diag_I_diag_TK$Diagnostic), Contrast = c("MCI-AD", "CTL-AD", "CTL-MCI") , morphological_parameter = "I", Age_correction = "no", ROI = "hemisphere")

ggplot(dados_hemi_v1_CH, aes(x = Diagnostic, y = I_age_decay, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_boxplot() +
 stat_compare_means(method = "anova") + theme_pubr()

ggplot(dados_hemi_v1_CH, aes(x = Diagnostic, y = I_age_decay.zscore, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_boxplot() +
 stat_compare_means(method = "anova") + theme_pubr()

ggplot(dados_hemi_v1_CH, aes(x = I_age_decay.zscore, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_density() + theme_pubr()

aov_diag_I_age_decay <- aov(I_age_decay ~ Diagnostic, data = dados_hemi_v1_CH)
summary(aov_diag_I_age_decay)
aov_diag_I_age_decay_diag_TK <- TukeyHSD(aov_diag_I_age_decay)
aov_diag_I_age_decay_diag_TK

aov_diag_I_age_decay_diag_TK_t <- mutate(as.data.frame(aov_diag_I_age_decay_diag_TK$Diagnostic), Contrast = c("MCI-AD", "CTL-AD", "CTL-MCI") , morphological_parameter = "I", Age_correction = "yes", ROI = "hemisphere")

```

```{r eval=FALSE, include=FALSE}


ggplot(dados_hemi_v1_CH, aes(x = Diagnostic, y = S, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_boxplot() +
 stat_compare_means(method = "anova") + theme_pubr()

ggplot(dados_hemi_v1_CH, aes(x = Diagnostic, y = S.zscore, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_boxplot() +
 stat_compare_means(method = "anova") + theme_pubr()

ggplot(dados_hemi_v1_CH, aes(x = S.zscore, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_density() + theme_pubr()

aov_diag_S <- aov(S ~ Diagnostic, data = dados_hemi_v1_CH)
summary(aov_diag_S)
aov_diag_S_diag_TK <- TukeyHSD(aov_diag_S)
aov_diag_S_diag_TK

aov_diag_S_diag_TK_t <- mutate(as.data.frame(aov_diag_S_diag_TK$Diagnostic), Contrast = c("MCI-AD", "CTL-AD", "CTL-MCI") , morphological_parameter = "S", Age_correction = "no", ROI = "hemisphere")

ggplot(dados_hemi_v1_CH, aes(x = Diagnostic, y = S_age_decay, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_boxplot() +
 stat_compare_means(method = "anova") + theme_pubr()

ggplot(dados_hemi_v1_CH, aes(x = Diagnostic, y = S_age_decay.zscore, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_boxplot() +
 stat_compare_means(method = "anova") + theme_pubr()

ggplot(dados_hemi_v1_CH, aes(x = S_age_decay.zscore, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_density() + theme_pubr()

aov_diag_S_age_decay <- aov(S_age_decay ~ Diagnostic, data = dados_hemi_v1_CH)
summary(aov_diag_S_age_decay)
aov_diag_S_age_decay_diag_TK <- TukeyHSD(aov_diag_S_age_decay)
aov_diag_S_age_decay_diag_TK

aov_diag_S_age_decay_diag_TK_t <- mutate(as.data.frame(aov_diag_S_age_decay_diag_TK$Diagnostic), Contrast = c("MCI-AD", "CTL-AD", "CTL-MCI") , morphological_parameter = "S", Age_correction = "yes", ROI = "hemisphere")

```

#### Reduzindo o efeito da idade

```{r girificacao e envelhecimento - age decay, echo=FALSE, message=FALSE, warning=FALSE}
# dados_hemi_v1_CH <- unique(filter(dados, ROI == "hemisphere", Session == 1, method == "Yujiang_script", is.na(K_age_decay)))

lm_diagnostic_agedecay <- dados_hemi_v1_CH %>%
  group_by(Diagnostic) %>%
  do(fit_diagnostic_agedecay = lm(1/2 * logAvgThickness_age_decay + logTotalArea_age_decay ~ logExposedArea_age_decay, data = ., na.action = na.omit))

diagnostic_Coef_agedecay = tidy(lm_diagnostic_agedecay,
                    fit_diagnostic_agedecay,
                    conf.int = TRUE,
                    conf.level = 0.95)

diagnostic_Coef_agedecay %>% kable(digits = 4) %>% kable_styling()


aov_diag_slope <- kruskal.test(estimate ~ Diagnostic, data = filter(diagnostic_Coef_agedecay, term == "logExposedArea_age_decay"))
aov_diag_slope

ggplot(
  data = filter(diagnostic_Coef_agedecay, term == "logExposedArea_age_decay"),
  aes(
  x = Diagnostic,
  y = estimate, color = Diagnostic
  )
  ) +
  geom_point() + geom_errorbar(aes(ymin = estimate - std.error, ymax = estimate + std.error)) + geom_smooth(method = "lm", se = TRUE) + geom_hline(yintercept = 1.25, linetype = "dashed")  + stat_compare_means(method = "kruskal.test") + theme_pubr() + labs(y = "slope")

ggplot(data = dados_hemi_v1_CH, aes(logExposedArea_age_decay, 1/2 * logAvgThickness_age_decay + logTotalArea_age_decay , color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_point() + 
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr()

ggplot(data = dados_hemi_v1_CH, aes(Age, K_age_decay, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_point() + stat_regline_equation() +
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr()

ggplot(dados_hemi_v1_CH, aes(x = K_age_decay.zscore, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_density() + theme_pubr()

ggplot(dados_hemi_v1_CH, aes(x = logAvgThickness_age_decay.zscore, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_density() + theme_pubr()

ggplot(dados_hemi_v1_CH, aes(x = S_age_decay.zscore, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_density() + theme_pubr()

ggplot(dados_hemi_v1_CH, aes(x = I_age_decay.zscore, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_density() + theme_pubr()


```

### Diferenca entre diagnosticos

```{r diag - age decay}
ggplot(dados_hemi_v1_CH, aes(x = Diagnostic, y = K_age_decay, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_boxplot() +
 stat_compare_means(method = "anova") + theme_pubr()

aov_diag3 <- aov(K_age_decay ~ Diagnostic, data = dados_hemi_v1_CH)
summary(aov_diag3)
aov_diag_3_diag_TK <- TukeyHSD(aov_diag3)
aov_diag_3_diag_TK

aov_diag_3_diag_TK_t <- mutate(as.data.frame(aov_diag_3_diag_TK$Diagnostic), Contrast = c("MCI-AD", "CTL-AD", "CTL-MCI") , morphological_parameter = "K", ROI = "hemisphere", Age_correction = "yes")

ggplot(dados_hemi_v1_CH, aes(x = Diagnostic, y = logAvgThickness_age_decay, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_boxplot() +
 stat_compare_means(method = "anova") + theme_pubr()

aov_diag4 <- aov(logAvgThickness_age_decay ~ Diagnostic, data = dados_hemi_v1_CH)
summary(aov_diag4)
aov_diag_4_diag_TK <- TukeyHSD(aov_diag4)
aov_diag_4_diag_TK

aov_diag_4_diag_TK_t <- mutate(as.data.frame(aov_diag_4_diag_TK$Diagnostic), Contrast = c("MCI-AD", "CTL-AD", "CTL-MCI") , morphological_parameter = "logAvgThickness", ROI = "hemisphere", Age_correction = "yes")

aov_summary <- rbind(aov_diag_K_diag_TK_t, aov_diag_2_diag_TK_t, aov_diag_3_diag_TK_t, aov_diag_4_diag_TK_t)

```


### Podemos localizar partes com maior detrimento por idade e doenca?

```{r girificacao e lobos, echo=FALSE, message=FALSE, warning=FALSE}
dados_lobos_v1_F <- filter(dados_lobos_v1, ROI == "F")

dados_lobos_v1_T <- filter(dados_lobos_v1, ROI == "T")

dados_lobos_v1_O <- filter(dados_lobos_v1, ROI == "O")

dados_lobos_v1_P <- filter(dados_lobos_v1, ROI == "P")

dados_lobos_v1_OP <- filter(dados_lobos_v1, ROI == "O" | ROI == "P")


lm_diagnostic_lobe <- dados_lobos_v1 %>%
  group_by(ROI, Diagnostic) %>%
  do(
  fit_diagnostic_lobe = lm(
  1 / 2 * logAvgThickness + logTotalArea ~ logExposedArea,
  data = .,
  na.action = na.omit
  )
  )
  
diagnostic_Coef_lobe = tidy(
  lm_diagnostic_lobe,
  fit_diagnostic_lobe,
  conf.int = TRUE,
  conf.level = 0.95
  )
  
# diagnostic_Coef_lobe %>% kable(digits = 4) %>% kable_styling()

ggplot(data = filter(dados_lobos_v1, Diagnostic == "CTL"), aes(logExposedArea, 1/2 * logAvgThickness + logTotalArea, color = ROI, fill = ROI)) +
  geom_point() + geom_smooth(method = "lm", se = TRUE) +
  geom_abline(slope = filter(diagnostic_Coef_lobe, term == "logExposedArea", Diagnostic == "CTL", ROI == "hemisphere")$estimate, linetype = "dashed", intercept = filter(diagnostic_Coef_lobe, term == "(Intercept)", Diagnostic == "CTL", ROI == "hemisphere")$estimate) +
  stat_regline_equation() +
  theme_pubr()

ggplot(
  data = dados_lobos_v1,
  aes(
  logExposedArea,
  1 / 2 * logAvgThickness + logTotalArea,
  color = Diagnostic,
  fill = Diagnostic
  )
  ) +
  geom_point() +
  geom_abline(slope = filter(diagnostic_Coef_lobe, term == "logExposedArea", Diagnostic == "CTL", ROI == "hemisphere")$estimate, linetype = "dashed", intercept = filter(diagnostic_Coef_lobe, term == "(Intercept)", Diagnostic == "CTL", ROI == "hemisphere")$estimate) +
  stat_regline_equation() + 
  facet_wrap(ROI ~ .) +
  theme_pubr() 

ggplot(
  data = filter(diagnostic_Coef_lobe, term == "logExposedArea"),
  aes(
  x = reorder(Diagnostic, estimate),
  y = estimate,
  color = Diagnostic
  )
  ) +
  geom_point() + 
  geom_errorbar(aes(ymin = estimate - std.error, ymax = estimate + std.error)) + 
  geom_hline(yintercept = 1.25, linetype = "dashed")  + 
  stat_compare_means(method = "kruskal.test") + 
  labs(y = "slope") + 
  facet_wrap(ROI ~. ) + 
  theme_pubr()

```

#### Corrigindo pela curvatura

```{r girificaca e lobos - corrigido pela curvatura, echo=FALSE, message=FALSE, warning=FALSE}
lm_diagnostic_lobe_curv <- dados_lobos_v1 %>%
  group_by(ROI, Diagnostic) %>%
  do(fit_diagnostic_lobe_curv = lm(1/2 * logAvgThickness + logTotalArea_corrected ~ logExposedArea_corrected, data = ., na.action = na.omit))

diagnostic_Coef_lobe_curv = tidy(lm_diagnostic_lobe_curv,
                    fit_diagnostic_lobe_curv,
                    conf.int = TRUE,
                    conf.level = 0.95)

# diagnostic_Coef_lobe_curv %>% kable(digits = 4) %>% kable_styling()

ggplot(data = filter(dados_lobos_v1, Diagnostic == "CTL"), aes(logExposedArea_corrected, 1/2 * logAvgThickness + logTotalArea_corrected, color = ROI, fill = ROI)) +
  geom_point() +
  geom_smooth(method = "lm", se = TRUE) +
  geom_abline(slope = filter(diagnostic_Coef_lobe_curv, term == "logExposedArea_corrected", Diagnostic == "CTL", ROI == "hemisphere")$estimate, linetype = "dashed", intercept = filter(diagnostic_Coef_lobe_curv, term == "(Intercept)", Diagnostic == "CTL", ROI == "hemisphere")$estimate) + 
  stat_regline_equation() + 
  theme_pubr()

ggplot(data = dados_lobos_v1, aes(logExposedArea_corrected, 1/2 * logAvgThickness + logTotalArea_corrected, color = Diagnostic, fill = Diagnostic)) +
  geom_point() +
  geom_smooth(method = "lm", se = TRUE)  +
  geom_abline(slope = filter(diagnostic_Coef_lobe_curv, term == "logExposedArea_corrected", Diagnostic == "CTL", ROI == "hemisphere")$estimate, linetype = "dashed", intercept = filter(diagnostic_Coef_lobe_curv, term == "(Intercept)", Diagnostic == "CTL", ROI == "hemisphere")$estimate) +
  stat_regline_equation() + 
  theme_pubr() + facet_wrap(ROI ~. )

ggplot(
  data = filter(diagnostic_Coef_lobe_curv, term == "logExposedArea_corrected"),
  aes(
  x = reorder(Diagnostic, estimate),
  y = estimate,
  color = Diagnostic
  )
  ) +
  geom_point() + geom_errorbar(aes(ymin = estimate - std.error, ymax = estimate + std.error)) + stat_compare_means(method = "kruskal.test") + theme_pubr() + labs(y = "slope") + facet_wrap(ROI ~. )

ggplot(data = dados_lobos_v1, aes(Age, K_corrected,color = Diagnostic, fill = Diagnostic)) +
  geom_smooth(method = "lm", se = TRUE) + stat_cor() +
  theme_pubr() + facet_wrap(ROI ~. )


ggplot(dados_lobos_v1, aes(x = Diagnostic, y = K_corrected, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_boxplot() +
 stat_compare_means(method = "anova", label.y = -0.25) + theme_pubr() + facet_wrap(ROI ~ . )

aov_diag5 <- aov(K_corrected ~ Diagnostic*ROI, data = dados_lobos_v1)
summary(aov_diag5)
aov_diag_5_diag_TK <- TukeyHSD(aov_diag5)
aov_diag_5_diag_TK

aov_diag5_F <- aov(K_corrected ~ Diagnostic, data = dados_lobos_v1_F)
summary(aov_diag5_F)
aov_diag_5_diag_F_TK <- TukeyHSD(aov_diag5_F)
aov_diag_5_diag_F_TK

aov_diag_5_diag_F_TK_t <- mutate(as.data.frame(aov_diag_5_diag_F_TK$Diagnostic), Contrast = c("MCI-AD", "CTL-AD", "CTL-MCI") , morphological_parameter = "K", ROI = "frontal lobe", Age_correction = "no")

aov_diag5_P <- aov(K_corrected ~ Diagnostic, data = dados_lobos_v1_P)
summary(aov_diag5_P)
aov_diag_5_diag_P_TK <- TukeyHSD(aov_diag5_P)
aov_diag_5_diag_P_TK

aov_diag_5_diag_P_TK_t <- mutate(as.data.frame(aov_diag_5_diag_P_TK$Diagnostic), Contrast = c("MCI-AD", "CTL-AD", "CTL-MCI") , morphological_parameter = "K", ROI = "parietal lobe", Age_correction = "no")


aov_diag5_O <- aov(K_corrected ~ Diagnostic, data = dados_lobos_v1_O)
summary(aov_diag5_O)
aov_diag_5_diag_O_TK <- TukeyHSD(aov_diag5_O)
aov_diag_5_diag_O_TK

aov_diag_5_diag_O_TK_t <- mutate(as.data.frame(aov_diag_5_diag_O_TK$Diagnostic), Contrast = c("MCI-AD", "CTL-AD", "CTL-MCI") , morphological_parameter = "K", ROI = "occipital lobe", Age_correction = "no")

aov_diag5_T <- aov(K_corrected ~ Diagnostic, data = dados_lobos_v1_T)
summary(aov_diag5_T)
aov_diag_5_diag_T_TK <- TukeyHSD(aov_diag5_T)
aov_diag_5_diag_T_TK

aov_diag_5_diag_T_TK_t <- mutate(as.data.frame(aov_diag_5_diag_T_TK$Diagnostic), Contrast = c("MCI-AD", "CTL-AD", "CTL-MCI") , morphological_parameter = "K", ROI = "temporal lobe", Age_correction = "no")

aov_summary <- rbind(aov_summary, aov_diag_5_diag_F_TK_t, aov_diag_5_diag_P_TK_t, aov_diag_5_diag_O_TK_t,  aov_diag_5_diag_T_TK_t)

ggplot(dados_lobos_v1, aes(x = Diagnostic, y = logAvgThickness, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_boxplot() + stat_compare_means(method = "anova") + theme_pubr() + facet_wrap(ROI ~ . )

aov_diag6 <- aov(logAvgThickness ~ Diagnostic * ROI, data = dados_lobos_v1)
summary(aov_diag6)
aov_diag_6_diag_TK <- TukeyHSD(aov_diag6)
aov_diag_6_diag_TK


aov_diag6_F <- aov(logAvgThickness ~ Diagnostic, data = dados_lobos_v1_F)
summary(aov_diag6_F)
aov_diag_6_diag_F_TK <- TukeyHSD(aov_diag6_F)
aov_diag_6_diag_F_TK

aov_diag_6_diag_F_TK_t <- mutate(as.data.frame(aov_diag_6_diag_F_TK$Diagnostic), Contrast = c("MCI-AD", "CTL-AD", "CTL-MCI") , morphological_parameter = "logAvgThickness", ROI = "frontal lobe", Age_correction = "no")

aov_diag6_P <- aov(logAvgThickness ~ Diagnostic, data = dados_lobos_v1_P)
summary(aov_diag6_P)
aov_diag_6_diag_P_TK <- TukeyHSD(aov_diag6_P)
aov_diag_6_diag_P_TK

aov_diag_6_diag_P_TK_t <- mutate(as.data.frame(aov_diag_6_diag_P_TK$Diagnostic), Contrast = c("MCI-AD", "CTL-AD", "CTL-MCI") , morphological_parameter = "logAvgThickness", ROI = "parietal lobe", Age_correction = "no")

aov_diag6_O <- aov(logAvgThickness ~ Diagnostic, data = dados_lobos_v1_O)
summary(aov_diag6_O)
aov_diag_6_diag_O_TK <- TukeyHSD(aov_diag6_O)
aov_diag_6_diag_O_TK

aov_diag_6_diag_O_TK_t <- mutate(as.data.frame(aov_diag_6_diag_O_TK$Diagnostic), Contrast = c("MCI-AD", "CTL-AD", "CTL-MCI") , morphological_parameter = "logAvgThickness", ROI = "occipital lobe", Age_correction = "no")

aov_diag6_T <- aov(logAvgThickness ~ Diagnostic, data = dados_lobos_v1_T)
summary(aov_diag6_T)
aov_diag_6_diag_T_TK <- TukeyHSD(aov_diag6_T)
aov_diag_6_diag_T_TK

aov_diag_6_diag_T_TK_t <- mutate(as.data.frame(aov_diag_6_diag_T_TK$Diagnostic), Contrast = c("MCI-AD", "CTL-AD", "CTL-MCI") , morphological_parameter = "logAvgThickness", ROI = "temporal lobe", Age_correction = "no")

aov_summary <- rbind(aov_summary, aov_diag_6_diag_F_TK_t, aov_diag_6_diag_P_TK_t, aov_diag_6_diag_O_TK_t,  aov_diag_6_diag_T_TK_t)
```

#### Corrigindo pela idade 

```{r girificaca e lobos - age decay, echo=FALSE, message=FALSE, warning=FALSE}
lm_diagnostic_agedecay_lobe <- dados_lobos_v1 %>%
  group_by(ROI, Diagnostic) %>%
  do(fit_diagnostic_agedecay_lobe = lm(1/2 * logAvgThickness_age_decay + logTotalArea_age_decay ~ logExposedArea_age_decay, data = ., na.action = na.omit))

diagnostic_Coef_agedecay_lobe = tidy(lm_diagnostic_agedecay_lobe,
                    fit_diagnostic_agedecay_lobe,
                    conf.int = TRUE,
                    conf.level = 0.95)

# diagnostic_Coef_agedecay_lobe %>% kable(digits = 4) %>% kable_styling()

ggplot(data = filter(dados_lobos_v1, Diagnostic == "CTL"), aes(logExposedArea_age_decay, 1/2 * logAvgThickness_age_decay + logTotalArea_age_decay, color = ROI, fill = ROI)) +
  geom_point() +
  geom_smooth(method = "lm", se = TRUE) +
  geom_abline(slope = filter(diagnostic_Coef_agedecay_lobe, term == "logExposedArea_age_decay", Diagnostic == "CTL", ROI == "hemisphere")$estimate, linetype = "dashed", intercept = filter(diagnostic_Coef_agedecay_lobe, term == "(Intercept)", Diagnostic == "CTL", ROI == "hemisphere")$estimate) +
  stat_regline_equation() + 
  theme_pubr()

ggplot(data = dados_lobos_v1, aes(logExposedArea_age_decay, 1/2 * logAvgThickness_age_decay + logTotalArea_age_decay, color = Diagnostic, fill = Diagnostic)) +
  geom_point() +
  geom_smooth(method = "lm", se = TRUE) +
  geom_abline(slope = filter(diagnostic_Coef_agedecay_lobe, term == "logExposedArea_age_decay", Diagnostic == "CTL", ROI == "hemisphere")$estimate, linetype = "dashed", intercept = filter(diagnostic_Coef_agedecay_lobe, term == "(Intercept)", Diagnostic == "CTL", ROI == "hemisphere")$estimate) +
  stat_regline_equation() + 
  theme_pubr() + facet_wrap(ROI ~. )

ggplot(
  data = filter(diagnostic_Coef_agedecay_lobe, term == "logExposedArea_age_decay"),
  aes(
  x = reorder(Diagnostic, estimate),
  y = estimate,
  color = Diagnostic
  )
  ) +
  geom_point() +
  geom_errorbar(aes(ymin = estimate - std.error, ymax = estimate + std.error)) +
  geom_hline(yintercept = 1.25, linetype = "dashed") +
  stat_compare_means(method = "kruskal.test") + 
  theme_pubr() +
  labs(y = "slope") +
  facet_wrap(ROI ~. )

ggplot(data = filter(dados_lobos_v1, Diagnostic == "CTL"), aes(Age, K_corrected, alpha = 0.4)) +
  geom_smooth(se = TRUE) +
  stat_regline_equation() +
  theme_pubr() + facet_wrap(ROI ~ . )

ggplot(data = filter(dados_lobos_v1, Diagnostic == "CTL"), aes(Age, K_age_decay, alpha = 0.4)) +
  geom_smooth(se = TRUE) +
  stat_regline_equation() +
  theme_pubr() + facet_wrap(ROI ~ . )

ggplot(data = dados_lobos_v1, aes(Age, K_age_decay, color = Diagnostic, fill = Diagnostic)) +
  stat_regline_equation() +
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + facet_wrap(ROI ~ . )

ggplot(dados_lobos_v1, aes(x = Diagnostic, y = K_age_decay, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_boxplot() +
 stat_compare_means(method = "anova") + theme_pubr() + facet_wrap(ROI ~ . )

aov_diag7 <- aov(K_age_decay ~ Diagnostic*ROI, data = dados_lobos_v1)
summary(aov_diag7)
aov_diag_7_diag_TK <- TukeyHSD(aov_diag7)
#aov_diag_7_diag_TK


aov_diag7_F <- aov(K_age_decay ~ Diagnostic, data = dados_lobos_v1_F)
summary(aov_diag7_F)
aov_diag_7_diag_F_TK <- TukeyHSD(aov_diag7_F)
aov_diag_7_diag_F_TK

aov_diag_7_diag_F_TK_t <- mutate(as.data.frame(aov_diag_7_diag_F_TK$Diagnostic), Contrast = c("MCI-AD", "CTL-AD", "CTL-MCI") , morphological_parameter = "K", ROI = "frontal lobe", Age_correction = "yes")

aov_diag7_P <- aov(K_age_decay ~ Diagnostic, data = dados_lobos_v1_P)
summary(aov_diag7_P)
aov_diag_7_diag_P_TK <- TukeyHSD(aov_diag7_P)
aov_diag_7_diag_P_TK

aov_diag_7_diag_P_TK_t <- mutate(as.data.frame(aov_diag_7_diag_P_TK$Diagnostic), Contrast = c("MCI-AD", "CTL-AD", "CTL-MCI") , morphological_parameter = "K", ROI = "parietal lobe", Age_correction = "yes")

aov_diag7_O <- aov(K_age_decay ~ Diagnostic, data = dados_lobos_v1_O)
summary(aov_diag7_O)
aov_diag_7_diag_O_TK <- TukeyHSD(aov_diag7_O)
aov_diag_7_diag_O_TK

aov_diag_7_diag_O_TK_t <- mutate(as.data.frame(aov_diag_7_diag_O_TK$Diagnostic), Contrast = c("MCI-AD", "CTL-AD", "CTL-MCI") , morphological_parameter = "K", ROI = "occipital lobe", Age_correction = "yes")

aov_diag7_T <- aov(K_age_decay ~ Diagnostic, data = dados_lobos_v1_T)
summary(aov_diag7_T)
aov_diag_7_diag_T_TK <- TukeyHSD(aov_diag7_T)
aov_diag_7_diag_T_TK

aov_diag_7_diag_T_TK_t <- mutate(as.data.frame(aov_diag_7_diag_T_TK$Diagnostic), Contrast = c("MCI-AD", "CTL-AD", "CTL-MCI") , morphological_parameter = "K", ROI = "temporal lobe", Age_correction = "yes")

aov_summary <- rbind(aov_summary, aov_diag_7_diag_F_TK_t, aov_diag_7_diag_P_TK_t, aov_diag_7_diag_O_TK_t,  aov_diag_7_diag_T_TK_t)

ggplot(dados_lobos_v1, aes(x = Diagnostic, y = logAvgThickness_age_decay, color = Diagnostic, fill = Diagnostic)) +
  geom_boxplot() +
 stat_compare_means(method = "anova", label.y = 0.25) + theme_pubr() + facet_wrap(ROI ~ . )

aov_diag8 <- aov(logAvgThickness_age_decay ~ Diagnostic*ROI, data = dados_lobos_v1)
summary(aov_diag8)
aov_diag_8_diag_TK <- TukeyHSD(aov_diag8)
aov_diag_8_diag_TK


aov_diag8_F <- aov(logAvgThickness_age_decay ~ Diagnostic, data = dados_lobos_v1_F)
summary(aov_diag8_F)
aov_diag_8_diag_F_TK <- TukeyHSD(aov_diag8_F)
aov_diag_8_diag_F_TK

aov_diag_8_diag_F_TK_t <- mutate(as.data.frame(aov_diag_8_diag_F_TK$Diagnostic), Contrast = c("MCI-AD", "CTL-AD", "CTL-MCI") , morphological_parameter = "logAvgThickness", ROI = "frontal lobe", Age_correction = "yes")

aov_diag8_P <- aov(logAvgThickness_age_decay ~ Diagnostic, data = dados_lobos_v1_P)
summary(aov_diag8_P)
aov_diag_8_diag_P_TK <- TukeyHSD(aov_diag8_P)
aov_diag_8_diag_P_TK

aov_diag_8_diag_P_TK_t <- mutate(as.data.frame(aov_diag_8_diag_P_TK$Diagnostic), Contrast = c("MCI-AD", "CTL-AD", "CTL-MCI") , morphological_parameter = "logAvgThickness", ROI = "parietal lobe", Age_correction = "yes")

aov_diag8_O <- aov(logAvgThickness_age_decay ~ Diagnostic, data = dados_lobos_v1_O)
summary(aov_diag8_O)
aov_diag_8_diag_O_TK <- TukeyHSD(aov_diag8_O)
aov_diag_8_diag_O_TK

aov_diag_8_diag_O_TK_t <- mutate(as.data.frame(aov_diag_8_diag_O_TK$Diagnostic), Contrast = c("MCI-AD", "CTL-AD", "CTL-MCI") , morphological_parameter = "logAvgThickness", ROI = "occipital lobe", Age_correction = "yes")

aov_diag8_T <- aov(logAvgThickness_age_decay ~ Diagnostic, data = dados_lobos_v1_T)
summary(aov_diag8_T)
aov_diag_8_diag_T_TK <- TukeyHSD(aov_diag8_T)
aov_diag_8_diag_T_TK

aov_diag_8_diag_T_TK_t <- mutate(as.data.frame(aov_diag_8_diag_T_TK$Diagnostic), Contrast = c("MCI-AD", "CTL-AD", "CTL-MCI") , morphological_parameter = "logAvgThickness", ROI = "temporal lobe", Age_correction = "yes")

aov_summary <- rbind(aov_summary, aov_diag_8_diag_F_TK_t, aov_diag_8_diag_P_TK_t, aov_diag_8_diag_O_TK_t,  aov_diag_8_diag_T_TK_t)

```

### Comparing Anovas - diff and p-values

```{r}
aov_summary <- aov_summary %>% mutate(signif = as.factor(ifelse(`p adj` < 0.05 | `p adj` == 0.05, "yes", "no")))
aov_summary$ROI <- as.factor(aov_summary$ROI)
aov_summary$ROI <- factor(aov_summary$ROI, levels = c("hemisphere", "frontal lobe", "occipital lobe", "parietal lobe", "temporal lobe"))

# ggplot(data = aov_summary, aes(
#   x = ROI,
#   y = diff,
#   ymin = lwr,
#   ymax = upr,
#   color = Contrast, 
#   linetype = ifelse(signif == "no", 2, 1))) +
#   geom_hline(yintercept = 0,
#              linetype = "11",
#              colour = "grey60") +
#   geom_errorbar(aes(width = 0.1, position = position_dodge(width = 0.6))) +
#   geom_point(position = position_dodge(width = 0.6)) +
#   scale_x_discrete(limits=c("temporal lobe", "parietal lobe","occipital lobe", "frontal lobe", "hemisphere")) + 
#   coord_flip() +
#   facet_grid(morphological_parameter ~ Age_correction, labeller = label_both) + 
#   labs(title = "95% family-wise confidence level", y =  "Differences in mean levels of Diagnostic", x = "ROI", caption = "Dashed lines show non significant differences, p adj > 0.05)") +
#   theme_pubr()

ggplot(data = filter(aov_summary, `p adj` < 0.05 |
                         `p adj` == 0.05), aes(
  x = ROI,
  y = diff,
  ymin = lwr,
  ymax = upr,
  color = Contrast)) +
  geom_hline(yintercept = 0,
             linetype = "11",
             colour = "grey60") +
  geom_errorbar(width = 0.1, position = position_dodge(width = 0.6)) +
  geom_point(position = position_dodge(width = 0.6)) +
  scale_x_discrete(limits=c("temporal lobe", "parietal lobe","occipital lobe", "frontal lobe", "hemisphere")) + 
  coord_flip() +
  facet_grid(morphological_parameter~ Age_correction, labeller = label_both) +
  labs(title = "95% family-wise confidence level", y =  "Differences in mean levels of Diagnostic", x = "ROI", caption = "only significant differences, p adj =< 0.05)") +
  theme_pubr()


aov_summary %>% filter(`p adj` < 0.05 |
                         `p adj` == 0.05, ROI == "hemisphere") %>%
  group_by(Contrast, Age_correction) %>% filter(diff == max(diff)) %>% arrange(desc(diff)) %>%
  kable() %>%
  kable_styling()

aov_summary %>% filter(`p adj` < 0.05 |
                         `p adj` == 0.05, ROI == "hemisphere") %>% group_by(Contrast) %>% filter(diff == max(diff)) %>% arrange(desc(diff)) %>%
  kable() %>%
  kable_styling()

aov_summary %>% filter(`p adj` < 0.05 |
                         `p adj` == 0.05, ROI != "hemisphere") %>% group_by(Contrast, Age_correction) %>% filter(diff == max(diff)) %>% arrange(desc(diff)) %>%
  kable() %>%
  kable_styling()

aov_summary %>% filter(`p adj` < 0.05 |
                         `p adj` == 0.05, ROI != "hemisphere") %>% group_by(Contrast) %>% filter(diff == max(diff)) %>% arrange(desc(diff)) %>%
  kable() %>%
  kable_styling()

aov_summary %>% filter(`p adj` < 0.05 |
                         `p adj` == 0.05, ROI != "hemisphere") %>% group_by(Contrast, ROI) %>% filter(diff == max(diff)) %>% arrange(desc(diff)) %>%
  kable() %>%
  kable_styling()

aov_summary %>% filter(`p adj` < 0.05 |
                         `p adj` == 0.05) %>% group_by(Contrast) %>% filter(diff == max(diff)) %>% arrange(desc(diff)) %>%
  kable() %>%
  kable_styling()

aov_summary %>% filter(Contrast == "CTL-MCI") %>% filter(diff == max(diff)) %>% arrange(desc(diff)) %>%
  kable() %>%
  kable_styling()

```

### S and I - AD and CTL


```{r K I S}
mean_K_I_S <-
  dados_hemi_v1_CH %>% group_by(Diagnostic) %>% summarise(
    mean.K = mean(K, na.rm = TRUE),
    SD_K = sd(K, na.rm = TRUE),
    mean.I = mean(I, na.rm = TRUE),
    SD_I = sd(I, na.rm = TRUE),
    mean.S = mean(S, na.rm = TRUE),
    SD_S = sd(S, na.rm = TRUE),
    mean.K_age_decay = mean(K_age_decay, na.rm = TRUE),
    SD_K_age_decay = sd(K_age_decay, na.rm = TRUE),
    mean.I_age_decay = mean(I_age_decay, na.rm = TRUE),
    SD_I_age_decay = sd(I_age_decay, na.rm = TRUE),
    mean.S_age_decay = mean(S_age_decay, na.rm = TRUE),
    SD_S_age_decay = sd(S_age_decay, na.rm = TRUE),
    mean.K.zscore = mean(K.zscore, na.rm = TRUE),
    SD_K.zscore = sd(K.zscore, na.rm = TRUE),
    mean.I.zscore = mean(I.zscore, na.rm = TRUE),
    SD_I.zscore = sd(I.zscore, na.rm = TRUE),
    mean.S.zscore = mean(S.zscore, na.rm = TRUE),
    SD_S.zscore = sd(S.zscore, na.rm = TRUE),
    mean.K_age_decay.zscore = mean(K_age_decay.zscore, na.rm = TRUE),
    SD_K_age_decay.zscore = sd(K_age_decay.zscore, na.rm = TRUE),
    mean.I_age_decay.zscore = mean(I_age_decay.zscore, na.rm = TRUE),
    SD_I_age_decay.zscore = sd(I_age_decay.zscore, na.rm = TRUE),
    mean.S_age_decay.zscore = mean(S_age_decay.zscore, na.rm = TRUE),
    SD_S_age_decay.zscore = sd(S_age_decay.zscore, na.rm = TRUE)
  )


plot_ly(mean_K_I_S, x= ~mean.K, z=~mean.S, y=~mean.I, type="scatter3d", mode='lines+markers', color=~Diagnostic) %>% layout(scene = list(xaxis = list(title = 'K'),
                     zaxis = list(title = 'S'),
                     yaxis = list(title = 'I')))

plot_ly(mean_K_I_S, x=~mean.K_age_decay, z=~mean.S_age_decay, y=~mean.I_age_decay, type="scatter3d", mode='lines+markers', color=~Diagnostic) %>% layout(scene = list(xaxis = list(title = 'K_age_decay'),
                     zaxis = list(title = 'S_age_decay'),
                     yaxis = list(title = 'I_age_decay')))

plot_ly(mean_K_I_S, x= ~mean.K.zscore, z=~mean.S.zscore, y=~mean.I.zscore, type="scatter3d", mode='lines+markers', color=~Diagnostic) %>% layout(scene = list(xaxis = list(title = 'K'),
                     zaxis = list(title = 'S'),
                     yaxis = list(title = 'I')))

plot_ly(mean_K_I_S, x=~mean.K_age_decay.zscore, z=~mean.S_age_decay.zscore, y=~mean.I_age_decay.zscore, type="scatter3d", mode='lines+markers', color=~Diagnostic) %>% layout(scene = list(xaxis = list(title = 'K_age_decay'),
                     zaxis = list(title = 'S_age_decay'),
                     yaxis = list(title = 'I_age_decay')))

```

## Envelhecimento vs DA

```{r ageing vs DA}
dados_hemi_v1_CH_DACTL <- dados_hemi_v1_CH

source("06-calculo_zscore_k_s_i_age.R")

aov_diag_K <- aov(K ~ Diagnostic, data = dados_hemi_v1_CH_DACTL)
aov_diag_K_diag_TK <- TukeyHSD(aov_diag_K)
aov_diag_K_diag_TK_t <- mutate(as.data.frame(aov_diag_K_diag_TK$Diagnostic), Contrast = c("MCI-AD", "CTL-AD", "CTL-MCI") , morphological_parameter = "K", ROI = "hemisphere", Age_correction = "no")

aov_diag_K_age_decay <- aov(K_age_decay ~ Diagnostic, data = dados_hemi_v1_CH_DACTL)
aov_diag_K_age_decay_diag_TK <- TukeyHSD(aov_diag_K_age_decay)
aov_diag_K_age_decay_diag_TK_t <- mutate(as.data.frame(aov_diag_K_age_decay_diag_TK$Diagnostic), Contrast = c("MCI-AD", "CTL-AD", "CTL-MCI") , morphological_parameter = "K", ROI = "hemisphere", Age_correction = "yes")

aov_diag_S <- aov(S ~ Diagnostic, data = dados_hemi_v1_CH_DACTL)
aov_diag_S_diag_TK <- TukeyHSD(aov_diag_S)
aov_diag_S_diag_TK_t <- mutate(as.data.frame(aov_diag_S_diag_TK$Diagnostic), Contrast = c("MCI-AD", "CTL-AD", "CTL-MCI")  , morphological_parameter = "S", ROI = "hemisphere", Age_correction = "no")

aov_diag_S_age_decay <- aov(S_age_decay ~ Diagnostic, data = dados_hemi_v1_CH_DACTL)
aov_diag_S_age_decay_diag_TK <- TukeyHSD(aov_diag_S_age_decay)
aov_diag_S_age_decay_diag_TK_t <- mutate(as.data.frame(aov_diag_S_age_decay_diag_TK$Diagnostic), Contrast = c("MCI-AD", "CTL-AD", "CTL-MCI")  , morphological_parameter = "S", ROI = "hemisphere", Age_correction = "yes")

aov_diag_I <- aov(I ~ Diagnostic, data = dados_hemi_v1_CH_DACTL)
aov_diag_I_diag_TK <- TukeyHSD(aov_diag_I)
aov_diag_I_diag_TK_t <- mutate(as.data.frame(aov_diag_S_diag_TK$Diagnostic), Contrast = c("MCI-AD", "CTL-AD", "CTL-MCI")  , morphological_parameter = "I", ROI = "hemisphere", Age_correction = "no")

aov_diag_I_age_decay <- aov(I_age_decay ~ Diagnostic, data = dados_hemi_v1_CH_DACTL)
aov_diag_I_age_decay_diag_TK <- TukeyHSD(aov_diag_I_age_decay)
aov_diag_I_age_decay_diag_TK_t <- mutate(as.data.frame(aov_diag_I_age_decay_diag_TK$Diagnostic), Contrast = c("MCI-AD", "CTL-AD", "CTL-MCI")  , morphological_parameter = "I", ROI = "hemisphere", Age_correction = "yes")

aov_summary_KSI_ADCTL <- full_join(aov_diag_K_diag_TK_t, aov_diag_K_age_decay_diag_TK_t) %>%
full_join(aov_diag_S_diag_TK_t) %>%
full_join(aov_diag_S_age_decay_diag_TK_t) %>%
full_join(aov_diag_I_diag_TK_t) %>%
full_join(aov_diag_I_age_decay_diag_TK_t)

ggplot(data = filter(aov_summary_KSI_ADCTL, `p adj` < 0.05 |
                         `p adj` == 0.05), aes(
  x = ROI,
  y = diff,
  ymin = lwr,
  ymax = upr,
  color = Contrast)) +
  geom_hline(yintercept = 0,
             linetype = "11",
             colour = "grey60") +
  geom_errorbar(width = 0.1, position = position_dodge(width = 0.6)) +
  geom_point(position = position_dodge(width = 0.6)) +
  coord_flip() +
  facet_grid(morphological_parameter ~ Age_correction, labeller = label_both) +
  labs(title = "95% family-wise confidence level", y =  "Differences in mean levels of Diagnostic", x = "ROI", caption = "only significant differences, p adj =< 0.05)") +
  theme_pubr()

aov_summary_KSI_ADCTL %>% kable() %>% kable_styling()

filter(aov_summary_KSI_ADCTL, `p adj` < 0.05 |
                         `p adj` == 0.05) %>% kable() %>% kable_styling()


mean_K_I_S_ADCTL <-
  filter(dados_hemi_v1_CH_DACTL) %>% group_by(Diagnostic, Age_interval10) %>% summarise(
    mean.T = mean(logAvgThickness, na.rm = TRUE),
    SD_T = sd(logAvgThickness, na.rm = TRUE),
    mean.K = mean(K, na.rm = TRUE),
    SD_K = sd(K, na.rm = TRUE),
    mean.I = mean(I, na.rm = TRUE),
    SD_I = sd(I, na.rm = TRUE),
    mean.S = mean(S, na.rm = TRUE),
    SD_S = sd(S, na.rm = TRUE),
    mean.T_age_decay = mean(logAvgThickness_age_decay, na.rm = TRUE),
    SD_T_age_decay = sd(logAvgThickness_age_decay, na.rm = TRUE),
    mean.K_age_decay = mean(K_age_decay, na.rm = TRUE),
    SD_K_age_decay = sd(K_age_decay, na.rm = TRUE),
    mean.I_age_decay = mean(I_age_decay, na.rm = TRUE),
    SD_I_age_decay = sd(I_age_decay, na.rm = TRUE),
    mean.S_age_decay = mean(S_age_decay, na.rm = TRUE),
    SD_S_age_decay = sd(S_age_decay, na.rm = TRUE),
    mean.T.zscore = mean(logAvgThickness.zscore, na.rm = TRUE),
    SD_T.zscore = sd(logAvgThickness.zscore, na.rm = TRUE),
    mean.K.zscore = mean(K.zscore, na.rm = TRUE),
    SD_K.zscore = sd(K.zscore, na.rm = TRUE),
    mean.I.zscore = mean(I.zscore, na.rm = TRUE),
    SD_I.zscore = sd(I.zscore, na.rm = TRUE),
    mean.S.zscore = mean(S.zscore, na.rm = TRUE),
    SD_S.zscore = sd(S.zscore, na.rm = TRUE),
    mean.T_age_decay.zscore = mean(logAvgThickness_age_decay.zscore, na.rm = TRUE),
    SD_T_age_decay.zscore = sd(logAvgThickness_age_decay.zscore, na.rm = TRUE),
    mean.K_age_decay.zscore = mean(K_age_decay.zscore, na.rm = TRUE),
    SD_K_age_decay.zscore = sd(K_age_decay.zscore, na.rm = TRUE),
    mean.I_age_decay.zscore = mean(I_age_decay.zscore, na.rm = TRUE),
    SD_I_age_decay.zscore = sd(I_age_decay.zscore, na.rm = TRUE),
    mean.S_age_decay.zscore = mean(S_age_decay.zscore, na.rm = TRUE),
    SD_S_age_decay.zscore = sd(S_age_decay.zscore, na.rm = TRUE)
  )


ggplot(mean_K_I_S_ADCTL, aes(y = mean.T.zscore, x = Age_interval10, color = Diagnostic, fill = Diagnostic)) + 
  geom_point() + geom_errorbar(aes(ymin = mean.T.zscore - SD_T.zscore, ymax=mean.T.zscore + SD_T.zscore)) + geom_line(aes(group = Diagnostic)) +
    theme_pubr()

ggplot(mean_K_I_S_ADCTL, aes(y = mean.T_age_decay.zscore, x = Age_interval10, color = Diagnostic, fill = Diagnostic)) + 
  geom_point() + geom_errorbar(aes(ymin = mean.T_age_decay.zscore - SD_T_age_decay.zscore, ymax=mean.T_age_decay.zscore + SD_T_age_decay.zscore)) + geom_line(aes(group = Diagnostic)) +
    theme_pubr()


ggplot(mean_K_I_S_ADCTL, aes(y = mean.K.zscore, x = Age_interval10, color = Diagnostic, fill = Diagnostic)) + 
  geom_point() + geom_errorbar(aes(ymin = mean.K.zscore - SD_K.zscore, ymax=mean.K.zscore + SD_K.zscore)) + geom_line(aes(group = Diagnostic)) +
    theme_pubr()

ggplot(mean_K_I_S_ADCTL, aes(y = mean.K_age_decay.zscore, x = Age_interval10, color = Diagnostic, fill = Diagnostic)) + 
  geom_point() + geom_errorbar(aes(ymin = mean.K_age_decay.zscore - SD_K_age_decay.zscore, ymax=mean.K_age_decay.zscore + SD_K_age_decay.zscore)) + geom_line(aes(group = Diagnostic)) +
    theme_pubr()

ggplot(mean_K_I_S_ADCTL, aes(y = mean.S.zscore, x = Age_interval10, color = Diagnostic, fill = Diagnostic)) + 
  geom_point() + geom_errorbar(aes(ymin = mean.S.zscore - SD_S.zscore, ymax=mean.S.zscore + SD_S.zscore)) + geom_line(aes(group = Diagnostic)) +
    theme_pubr()

ggplot(mean_K_I_S_ADCTL, aes(y = mean.S_age_decay.zscore, x = Age_interval10, color = Diagnostic, fill = Diagnostic)) + 
  geom_point() + geom_errorbar(aes(ymin = mean.S_age_decay.zscore - SD_S_age_decay.zscore, ymax=mean.S_age_decay.zscore + SD_S_age_decay.zscore)) + geom_line(aes(group = Diagnostic)) +
    theme_pubr()

ggplot(mean_K_I_S_ADCTL, aes(y = mean.I.zscore, x = Age_interval10, color = Diagnostic, fill = Diagnostic)) + 
  geom_point() + geom_errorbar(aes(ymin = mean.I.zscore - SD_I.zscore, ymax=mean.I.zscore + SD_I.zscore)) + geom_line(aes(group = Diagnostic)) +
    theme_pubr()

ggplot(mean_K_I_S_ADCTL, aes(y = mean.I_age_decay.zscore, x = Age_interval10, color = Diagnostic, fill = Diagnostic)) + 
  geom_point() + geom_errorbar(aes(ymin = mean.I_age_decay.zscore - SD_I_age_decay.zscore, ymax=mean.I_age_decay.zscore + SD_I_age_decay.zscore)) + geom_line(aes(group = Diagnostic)) +
    theme_pubr()

plot_ly(
  mean_K_I_S_ADCTL,
  x =  ~ mean.K,
  z =  ~ mean.S,
  y =  ~ mean.I,
  type = "scatter3d",
  mode = 'lines+markers+text',
  color =  ~ Diagnostic,
  text = ~ Age_interval10
) %>% layout(scene = list(
  xaxis = list(title = 'K'),
  zaxis = list(title = 'S'),
  yaxis = list(title = 'I')
))

plot_ly(
  mean_K_I_S_ADCTL,
  x = ~ mean.K_age_decay,
  z =  ~ mean.S_age_decay,
  y =  ~ mean.I_age_decay,
  type = "scatter3d",
  mode = 'lines+markers+text',
  color =  ~ Diagnostic,
  text = ~ Age_interval10
) %>% layout(scene = list(
  xaxis = list(title = 'K_age_decay'),
  zaxis = list(title = 'S_age_decay'),
  yaxis = list(title = 'I_age_decay')
))


plot_ly(
  filter(mean_K_I_S_ADCTL, Age_interval10 == "60" | Age_interval10 == "80"
  ),
  x =  ~ mean.K,
  z =  ~ mean.S,
  y =  ~ mean.I,
  type = "scatter3d",
  mode = 'lines+markers+text',
  color =  ~ Diagnostic,
  text = ~ Age_interval10
) %>% layout(scene = list(
  xaxis = list(title = 'K'),
  zaxis = list(title = 'S'),
  yaxis = list(title = 'I')
))

plot_ly(
  filter(mean_K_I_S_ADCTL, Age_interval10 == "60" | Age_interval10 == "80"
  ),
  x = ~ mean.K_age_decay,
  z =  ~ mean.S_age_decay,
  y =  ~ mean.I_age_decay,
  type = "scatter3d",
  mode = 'lines+markers+text',
  color =  ~ Diagnostic,
  text = ~ Age_interval10
) %>% layout(scene = list(
  xaxis = list(title = 'K_age_decay'),
  zaxis = list(title = 'S_age_decay'),
  yaxis = list(title = 'I_age_decay')
))


plot_ly(
  filter(mean_K_I_S_ADCTL, Age_interval10 == "60" | Age_interval10 == "80"
  ),
  x =  ~ mean.K.zscore,
  z =  ~ mean.S.zscore,
  y =  ~ mean.I.zscore,
  type = "scatter3d",
  mode = 'lines+markers+text',
  color =  ~ Diagnostic,
  text = ~ Age_interval10
) %>% layout(scene = list(
  xaxis = list(title = 'K'),
  zaxis = list(title = 'S'),
  yaxis = list(title = 'I')
))

plot_ly(
  filter(mean_K_I_S_ADCTL, Age_interval10 == "60" | Age_interval10 == "80"
  ),
  x = ~ mean.K_age_decay.zscore,
  z =  ~ mean.S_age_decay.zscore,
  y =  ~ mean.I_age_decay.zscore,
  type = "scatter3d",
  mode = 'lines+markers+text',
  color =  ~ Diagnostic,
  text = ~ Age_interval10
) %>% layout(scene = list(
  xaxis = list(title = 'K_age_decay'),
  zaxis = list(title = 'S_age_decay'),
  yaxis = list(title = 'I_age_decay')
))

ggplot(dados_hemi_v1_CH_DACTL, aes(y = S.zscore, x = K.zscore, color = Diagnostic, fill = Diagnostic, label = Age_interval10)) + 
  geom_point()+ geom_line(aes(group = Diagnostic)) +geom_text(nudge_y = 0.08) +
    theme_pubr()

ggplot(dados_hemi_v1_CH_DACTL, aes(y = S_age_decay.zscore, x = K_age_decay.zscore, color = Diagnostic, fill = Diagnostic, label = Age_interval10)) + 
  geom_point()+ geom_line(aes(group = Diagnostic)) + geom_text(nudge_y = 0.08) +
    theme_pubr()

ggplot(dados_hemi_v1_CH_DACTL, aes(y = S, x = K, color = Diagnostic, fill = Diagnostic, label = Age_interval10)) + 
  geom_point() + geom_text() + stat_ellipse() +
    theme_pubr()

ggplot(dados_hemi_v1_CH_DACTL, aes(y = S_age_decay, x = K_age_decay, color = Diagnostic, fill = Diagnostic, label = Age_interval10)) + 
  geom_point() + geom_text() + stat_ellipse() +
    theme_pubr()

ggplot(dados_hemi_v1_CH_DACTL, aes(y = S, x = Diagnostic, color = Diagnostic, fill = Diagnostic)) + 
  geom_boxplot() + stat_compare_means(method="anova") +
    theme_pubr()

ggplot(dados_hemi_v1_CH_DACTL, aes(y = S_age_decay, x = Diagnostic, color = Diagnostic, fill = Diagnostic)) + geom_boxplot() + stat_compare_means(method="anova") +
    theme_pubr()

    ggplot(dados_hemi_v1_CH_DACTL, aes(y = I, x = Diagnostic, color = Diagnostic, fill = Diagnostic)) + 
  geom_boxplot() + stat_compare_means(method="anova") +
    theme_pubr()

ggplot(dados_hemi_v1_CH_DACTL, aes(y = I_age_decay, x = Diagnostic, color = Diagnostic, fill = Diagnostic)) + geom_boxplot() + stat_compare_means(method="anova") +
    theme_pubr()

    
```

### Sem MCI

```{r ageing vs DA !MCI}
dados_hemi_v1_CH_DACTL <- filter(dados_hemi_v1_CH, Diagnostic != "MCI")

source("06-calculo_zscore_k_s_i_age.R")

aov_diag_K <- aov(K ~ Diagnostic, data = dados_hemi_v1_CH_DACTL)
aov_diag_K_diag_TK <- TukeyHSD(aov_diag_K)
aov_diag_K_diag_TK_t <- mutate(as.data.frame(aov_diag_K_diag_TK$Diagnostic), Contrast = c("CTL-AD") , morphological_parameter = "K", ROI = "hemisphere", Age_correction = "no")

aov_diag_K_age_decay <- aov(K_age_decay ~ Diagnostic, data = dados_hemi_v1_CH_DACTL)
aov_diag_K_age_decay_diag_TK <- TukeyHSD(aov_diag_K_age_decay)
aov_diag_K_age_decay_diag_TK_t <- mutate(as.data.frame(aov_diag_K_age_decay_diag_TK$Diagnostic), Contrast = c("CTL-AD") , morphological_parameter = "K", ROI = "hemisphere", Age_correction = "yes")

aov_diag_S <- aov(S ~ Diagnostic, data = dados_hemi_v1_CH_DACTL)
aov_diag_S_diag_TK <- TukeyHSD(aov_diag_S)
aov_diag_S_diag_TK_t <- mutate(as.data.frame(aov_diag_S_diag_TK$Diagnostic), Contrast = c("CTL-AD")  , morphological_parameter = "S", ROI = "hemisphere", Age_correction = "no")

aov_diag_S_age_decay <- aov(S_age_decay ~ Diagnostic, data = dados_hemi_v1_CH_DACTL)
aov_diag_S_age_decay_diag_TK <- TukeyHSD(aov_diag_S_age_decay)
aov_diag_S_age_decay_diag_TK_t <- mutate(as.data.frame(aov_diag_S_age_decay_diag_TK$Diagnostic), Contrast = c("CTL-AD")  , morphological_parameter = "S", ROI = "hemisphere", Age_correction = "yes")

aov_diag_I <- aov(I ~ Diagnostic, data = dados_hemi_v1_CH_DACTL)
aov_diag_I_diag_TK <- TukeyHSD(aov_diag_I)
aov_diag_I_diag_TK_t <- mutate(as.data.frame(aov_diag_S_diag_TK$Diagnostic), Contrast = c("CTL-AD")  , morphological_parameter = "I", ROI = "hemisphere", Age_correction = "no")

aov_diag_I_age_decay <- aov(I_age_decay ~ Diagnostic, data = dados_hemi_v1_CH_DACTL)
aov_diag_I_age_decay_diag_TK <- TukeyHSD(aov_diag_I_age_decay)
aov_diag_I_age_decay_diag_TK_t <- mutate(as.data.frame(aov_diag_I_age_decay_diag_TK$Diagnostic), Contrast = c("CTL-AD")  , morphological_parameter = "I", ROI = "hemisphere", Age_correction = "yes")

aov_summary_KSI_ADCTL <- full_join(aov_diag_K_diag_TK_t, aov_diag_K_age_decay_diag_TK_t) %>%
full_join(aov_diag_S_diag_TK_t) %>%
full_join(aov_diag_S_age_decay_diag_TK_t) %>%
full_join(aov_diag_I_diag_TK_t) %>%
full_join(aov_diag_I_age_decay_diag_TK_t)

ggplot(data = filter(aov_summary_KSI_ADCTL, `p adj` < 0.05 |
                         `p adj` == 0.05), aes(
  x = ROI,
  y = diff,
  ymin = lwr,
  ymax = upr,
  color = Contrast)) +
  geom_hline(yintercept = 0,
             linetype = "11",
             colour = "grey60") +
  geom_errorbar(width = 0.1, position = position_dodge(width = 0.6)) +
  geom_point(position = position_dodge(width = 0.6)) +
  coord_flip() +
  facet_grid(morphological_parameter ~ Age_correction, labeller = label_both) +
  labs(title = "95% family-wise confidence level", y =  "Differences in mean levels of Diagnostic", x = "ROI", caption = "only significant differences, p adj =< 0.05)") +
  theme_pubr()

aov_summary_KSI_ADCTL %>% kable() %>% kable_styling()

filter(aov_summary_KSI_ADCTL, `p adj` < 0.05 |
                         `p adj` == 0.05) %>% kable() %>% kable_styling()


mean_K_I_S_ADCTL <-
  filter(dados_hemi_v1_CH_DACTL) %>% group_by(Diagnostic, Age_interval10) %>% summarise(
    mean.T = mean(logAvgThickness, na.rm = TRUE),
    SD_T = sd(logAvgThickness, na.rm = TRUE),
    mean.K = mean(K, na.rm = TRUE),
    SD_K = sd(K, na.rm = TRUE),
    mean.I = mean(I, na.rm = TRUE),
    SD_I = sd(I, na.rm = TRUE),
    mean.S = mean(S, na.rm = TRUE),
    SD_S = sd(S, na.rm = TRUE),
    mean.T_age_decay = mean(logAvgThickness_age_decay, na.rm = TRUE),
    SD_T_age_decay = sd(logAvgThickness_age_decay, na.rm = TRUE),
    mean.K_age_decay = mean(K_age_decay, na.rm = TRUE),
    SD_K_age_decay = sd(K_age_decay, na.rm = TRUE),
    mean.I_age_decay = mean(I_age_decay, na.rm = TRUE),
    SD_I_age_decay = sd(I_age_decay, na.rm = TRUE),
    mean.S_age_decay = mean(S_age_decay, na.rm = TRUE),
    SD_S_age_decay = sd(S_age_decay, na.rm = TRUE),
    mean.T.zscore = mean(logAvgThickness.zscore, na.rm = TRUE),
    SD_T.zscore = sd(logAvgThickness.zscore, na.rm = TRUE),
    mean.K.zscore = mean(K.zscore, na.rm = TRUE),
    SD_K.zscore = sd(K.zscore, na.rm = TRUE),
    mean.I.zscore = mean(I.zscore, na.rm = TRUE),
    SD_I.zscore = sd(I.zscore, na.rm = TRUE),
    mean.S.zscore = mean(S.zscore, na.rm = TRUE),
    SD_S.zscore = sd(S.zscore, na.rm = TRUE),
    mean.T_age_decay.zscore = mean(logAvgThickness_age_decay.zscore, na.rm = TRUE),
    SD_T_age_decay.zscore = sd(logAvgThickness_age_decay.zscore, na.rm = TRUE),
    mean.K_age_decay.zscore = mean(K_age_decay.zscore, na.rm = TRUE),
    SD_K_age_decay.zscore = sd(K_age_decay.zscore, na.rm = TRUE),
    mean.I_age_decay.zscore = mean(I_age_decay.zscore, na.rm = TRUE),
    SD_I_age_decay.zscore = sd(I_age_decay.zscore, na.rm = TRUE),
    mean.S_age_decay.zscore = mean(S_age_decay.zscore, na.rm = TRUE),
    SD_S_age_decay.zscore = sd(S_age_decay.zscore, na.rm = TRUE)
  )


ggplot(mean_K_I_S_ADCTL, aes(y = mean.T.zscore, x = Age_interval10, color = Diagnostic, fill = Diagnostic)) + 
  geom_point() + geom_errorbar(aes(ymin = mean.T.zscore - SD_T.zscore, ymax=mean.T.zscore + SD_T.zscore)) + geom_line(aes(group = Diagnostic)) +
    theme_pubr()

ggplot(mean_K_I_S_ADCTL, aes(y = mean.T_age_decay.zscore, x = Age_interval10, color = Diagnostic, fill = Diagnostic)) + 
  geom_point() + geom_errorbar(aes(ymin = mean.T_age_decay.zscore - SD_T_age_decay.zscore, ymax=mean.T_age_decay.zscore + SD_T_age_decay.zscore)) + geom_line(aes(group = Diagnostic)) +
    theme_pubr()


ggplot(mean_K_I_S_ADCTL, aes(y = mean.K.zscore, x = Age_interval10, color = Diagnostic, fill = Diagnostic)) + 
  geom_point() + geom_errorbar(aes(ymin = mean.K.zscore - SD_K.zscore, ymax=mean.K.zscore + SD_K.zscore)) + geom_line(aes(group = Diagnostic)) +
    theme_pubr()

ggplot(mean_K_I_S_ADCTL, aes(y = mean.K_age_decay.zscore, x = Age_interval10, color = Diagnostic, fill = Diagnostic)) + 
  geom_point() + geom_errorbar(aes(ymin = mean.K_age_decay.zscore - SD_K_age_decay.zscore, ymax=mean.K_age_decay.zscore + SD_K_age_decay.zscore)) + geom_line(aes(group = Diagnostic)) +
    theme_pubr()

ggplot(mean_K_I_S_ADCTL, aes(y = mean.S.zscore, x = Age_interval10, color = Diagnostic, fill = Diagnostic)) + 
  geom_point() + geom_errorbar(aes(ymin = mean.S.zscore - SD_S.zscore, ymax=mean.S.zscore + SD_S.zscore)) + geom_line(aes(group = Diagnostic)) +
    theme_pubr()

ggplot(mean_K_I_S_ADCTL, aes(y = mean.S_age_decay.zscore, x = Age_interval10, color = Diagnostic, fill = Diagnostic)) + 
  geom_point() + geom_errorbar(aes(ymin = mean.S_age_decay.zscore - SD_S_age_decay.zscore, ymax=mean.S_age_decay.zscore + SD_S_age_decay.zscore)) + geom_line(aes(group = Diagnostic)) +
    theme_pubr()

ggplot(mean_K_I_S_ADCTL, aes(y = mean.I.zscore, x = Age_interval10, color = Diagnostic, fill = Diagnostic)) + 
  geom_point() + geom_errorbar(aes(ymin = mean.I.zscore - SD_I.zscore, ymax=mean.I.zscore + SD_I.zscore)) + geom_line(aes(group = Diagnostic)) +
    theme_pubr()

ggplot(mean_K_I_S_ADCTL, aes(y = mean.I_age_decay.zscore, x = Age_interval10, color = Diagnostic, fill = Diagnostic)) + 
  geom_point() + geom_errorbar(aes(ymin = mean.I_age_decay.zscore - SD_I_age_decay.zscore, ymax=mean.I_age_decay.zscore + SD_I_age_decay.zscore)) + geom_line(aes(group = Diagnostic)) +
    theme_pubr()

plot_ly(
  mean_K_I_S_ADCTL,
  x =  ~ mean.K,
  z =  ~ mean.S,
  y =  ~ mean.I,
  type = "scatter3d",
  mode = 'lines+markers+text',
  color =  ~ Diagnostic,
  text = ~ Age_interval10
) %>% layout(scene = list(
  xaxis = list(title = 'K'),
  zaxis = list(title = 'S'),
  yaxis = list(title = 'I')
))

plot_ly(
  mean_K_I_S_ADCTL,
  x = ~ mean.K_age_decay,
  z =  ~ mean.S_age_decay,
  y =  ~ mean.I_age_decay,
  type = "scatter3d",
  mode = 'lines+markers+text',
  color =  ~ Diagnostic,
  text = ~ Age_interval10
) %>% layout(scene = list(
  xaxis = list(title = 'K_age_decay'),
  zaxis = list(title = 'S_age_decay'),
  yaxis = list(title = 'I_age_decay')
))


plot_ly(
  filter(mean_K_I_S_ADCTL, Age_interval10 == "60" | Age_interval10 == "80"
  ),
  x =  ~ mean.K,
  z =  ~ mean.S,
  y =  ~ mean.I,
  type = "scatter3d",
  mode = 'lines+markers+text',
  color =  ~ Diagnostic,
  text = ~ Age_interval10
) %>% layout(scene = list(
  xaxis = list(title = 'K'),
  zaxis = list(title = 'S'),
  yaxis = list(title = 'I')
))

plot_ly(
  filter(mean_K_I_S_ADCTL, Age_interval10 == "60" | Age_interval10 == "80"
  ),
  x = ~ mean.K_age_decay,
  z =  ~ mean.S_age_decay,
  y =  ~ mean.I_age_decay,
  type = "scatter3d",
  mode = 'lines+markers+text',
  color =  ~ Diagnostic,
  text = ~ Age_interval10
) %>% layout(scene = list(
  xaxis = list(title = 'K_age_decay'),
  zaxis = list(title = 'S_age_decay'),
  yaxis = list(title = 'I_age_decay')
))


plot_ly(
  filter(mean_K_I_S_ADCTL, Age_interval10 == "60" | Age_interval10 == "80"
  ),
  x =  ~ mean.K.zscore,
  z =  ~ mean.S.zscore,
  y =  ~ mean.I.zscore,
  type = "scatter3d",
  mode = 'lines+markers+text',
  color =  ~ Diagnostic,
  text = ~ Age_interval10
) %>% layout(scene = list(
  xaxis = list(title = 'K'),
  zaxis = list(title = 'S'),
  yaxis = list(title = 'I')
))

plot_ly(
  filter(mean_K_I_S_ADCTL, Age_interval10 == "60" | Age_interval10 == "80"
  ),
  x = ~ mean.K_age_decay.zscore,
  z =  ~ mean.S_age_decay.zscore,
  y =  ~ mean.I_age_decay.zscore,
  type = "scatter3d",
  mode = 'lines+markers+text',
  color =  ~ Diagnostic,
  text = ~ Age_interval10
) %>% layout(scene = list(
  xaxis = list(title = 'K_age_decay'),
  zaxis = list(title = 'S_age_decay'),
  yaxis = list(title = 'I_age_decay')
))

ggplot(dados_hemi_v1_CH_DACTL, aes(y = S.zscore, x = K.zscore, color = Diagnostic, fill = Diagnostic, label = Age_interval10)) + 
  geom_point()+ geom_line(aes(group = Diagnostic)) +geom_text(nudge_y = 0.08) +
    theme_pubr()

ggplot(dados_hemi_v1_CH_DACTL, aes(y = S_age_decay.zscore, x = K_age_decay.zscore, color = Diagnostic, fill = Diagnostic, label = Age_interval10)) + 
  geom_point()+ geom_line(aes(group = Diagnostic)) + geom_text(nudge_y = 0.08) +
    theme_pubr()

ggplot(dados_hemi_v1_CH_DACTL, aes(y = S, x = K, color = Diagnostic, fill = Diagnostic, label = Age_interval10)) + 
  geom_point() + geom_text() + stat_ellipse() +
    theme_pubr()

ggplot(dados_hemi_v1_CH_DACTL, aes(y = S_age_decay, x = K_age_decay, color = Diagnostic, fill = Diagnostic, label = Age_interval10)) + 
  geom_point() + geom_text() + stat_ellipse() +
    theme_pubr()

ggplot(dados_hemi_v1_CH_DACTL, aes(y = S, x = Diagnostic, color = Diagnostic, fill = Diagnostic)) + 
  geom_boxplot() + stat_compare_means(method="anova") +
    theme_pubr()

ggplot(dados_hemi_v1_CH_DACTL, aes(y = S_age_decay, x = Diagnostic, color = Diagnostic, fill = Diagnostic)) + geom_boxplot() + stat_compare_means(method="anova") +
    theme_pubr()

    ggplot(dados_hemi_v1_CH_DACTL, aes(y = I, x = Diagnostic, color = Diagnostic, fill = Diagnostic)) + 
  geom_boxplot() + stat_compare_means(method="anova") +
    theme_pubr()

ggplot(dados_hemi_v1_CH_DACTL, aes(y = I_age_decay, x = Diagnostic, color = Diagnostic, fill = Diagnostic)) + geom_boxplot() + stat_compare_means(method="anova") +
    theme_pubr()

    
```

## Clinical data

```{r clinical data summary, message=FALSE, warning=FALSE}

#hemisphere
dados_hemi_v1_CH_CD <- dados_hemi_v1_CH %>% 
  pivot_longer(c(COGNITIVE_INDEX, `A7/A5`, `TMT B-A`, MMSE, relogio, `DIGIT SPAN BACK`, `AB1-40`, `AB1-42`, TAU, AB1_ratio, TAU_AB1_42_ratio, TAU_AB1_ratio, Lipoxina), names_to = "clinical_test", values_to = "clinical_test_value")

dados_hemi_v1_CH_CD <- dados_hemi_v1_CH_CD %>% 
  pivot_longer(c(K, K_age_decay, logAvgThickness, logAvgThickness_age_decay, S, S_age_decay, I, I_age_decay), names_to = "morphological_parameter", values_to = "morphological_parameter_value")

dados_hemi_v1_CH_CD_behaviour <- filter(dados_hemi_v1_CH_CD, clinical_test == "A7/A5" | clinical_test == "COGNITIVE_INDEX" | clinical_test == "TMT B-A" | clinical_test == "relogio" | clinical_test == "DIGIT SPAN BACK") 

dados_hemi_v1_CH_CD_biochq <- filter(dados_hemi_v1_CH_CD, clinical_test == "AB1-40" | clinical_test == "AB1-42" | clinical_test == "TAU" | clinical_test == "AB1_ratio" | clinical_test == "TAU_AB1_42_ratio" | clinical_test == "TAU_AB1_ratio"| clinical_test == "Lipoxina")

#frontal lobe
dados_lobos_v1_F_CD <- dados_lobos_v1_F %>% 
  pivot_longer(c(COGNITIVE_INDEX, `A7/A5`, `TMT B-A`, MMSE, relogio, `DIGIT SPAN BACK`, `AB1-40`, `AB1-42`, TAU, AB1_ratio, TAU_AB1_42_ratio, TAU_AB1_ratio, Lipoxina), names_to = "clinical_test", values_to = "clinical_test_value")

dados_lobos_v1_F_CD <- dados_lobos_v1_F_CD %>% 
  pivot_longer(c(K_corrected, K_age_decay, logAvgThickness, logAvgThickness_age_decay, S_corrected, S_age_decay, I_corrected, I_age_decay), names_to = "morphological_parameter", values_to = "morphological_parameter_value")

dados_lobos_v1_F_CD_behaviour <- filter(dados_lobos_v1_F_CD, clinical_test == "A7/A5" | clinical_test == "COGNITIVE_INDEX" | clinical_test == "TMT B-A" | clinical_test == "relogio" | clinical_test == "DIGIT SPAN BACK") 

dados_lobos_v1_F_CD_biochq <- filter(dados_lobos_v1_F_CD, clinical_test == "AB1-40" | clinical_test == "AB1-42" | clinical_test == "TAU" | clinical_test == "AB1_ratio" | clinical_test == "TAU_AB1_42_ratio" | clinical_test == "TAU_AB1_ratio"| clinical_test == "Lipoxina")

#parietal lobe
dados_lobos_v1_P_CD <- dados_lobos_v1_P %>% 
  pivot_longer(c(COGNITIVE_INDEX, `A7/A5`, `TMT B-A`, MMSE, relogio, `DIGIT SPAN BACK`, `AB1-40`, `AB1-42`, TAU, AB1_ratio, TAU_AB1_42_ratio, TAU_AB1_ratio, Lipoxina), names_to = "clinical_test", values_to = "clinical_test_value")

dados_lobos_v1_P_CD <- dados_lobos_v1_P_CD %>% 
  pivot_longer(c(K_corrected, K_age_decay, logAvgThickness, logAvgThickness_age_decay, S_corrected, S_age_decay, I_corrected, I_age_decay), names_to = "morphological_parameter", values_to = "morphological_parameter_value")

dados_lobos_v1_P_CD_behaviour <- filter(dados_lobos_v1_P_CD, clinical_test == "A7/A5" | clinical_test == "COGNITIVE_INDEX" | clinical_test == "TMT B-A" | clinical_test == "relogio" | clinical_test == "DIGIT SPAN BACK") 

dados_lobos_v1_P_CD_biochq <- filter(dados_lobos_v1_P_CD, clinical_test == "AB1-40" | clinical_test == "AB1-42" | clinical_test == "TAU" | clinical_test == "AB1_ratio" | clinical_test == "TAU_AB1_42_ratio" | clinical_test == "TAU_AB1_ratio"| clinical_test == "Lipoxina")

#occipital lobe
dados_lobos_v1_O_CD <- dados_lobos_v1_O %>% 
  pivot_longer(c(COGNITIVE_INDEX, `A7/A5`, `TMT B-A`, MMSE, relogio, `DIGIT SPAN BACK`, `AB1-40`, `AB1-42`, TAU, AB1_ratio, TAU_AB1_42_ratio, TAU_AB1_ratio, Lipoxina), names_to = "clinical_test", values_to = "clinical_test_value")

dados_lobos_v1_O_CD <- dados_lobos_v1_O_CD %>% 
  pivot_longer(c(K_corrected, K_age_decay, logAvgThickness, logAvgThickness_age_decay, S_corrected, S_age_decay, I_corrected, I_age_decay), names_to = "morphological_parameter", values_to = "morphological_parameter_value")

dados_lobos_v1_O_CD_behaviour <- filter(dados_lobos_v1_O_CD, clinical_test == "A7/A5" | clinical_test == "COGNITIVE_INDEX" | clinical_test == "TMT B-A" | clinical_test == "relogio" | clinical_test == "DIGIT SPAN BACK") 

dados_lobos_v1_O_CD_biochq <- filter(dados_lobos_v1_O_CD, clinical_test == "AB1-40" | clinical_test == "AB1-42" | clinical_test == "TAU" | clinical_test == "AB1_ratio" | clinical_test == "TAU_AB1_42_ratio" | clinical_test == "TAU_AB1_ratio"| clinical_test == "Lipoxina")


#temporal lobe
dados_lobos_v1_T_CD <- dados_lobos_v1_T %>% 
  pivot_longer(c(COGNITIVE_INDEX, `A7/A5`, `TMT B-A`, MMSE, relogio, `DIGIT SPAN BACK`, `AB1-40`, `AB1-42`, TAU, AB1_ratio, TAU_AB1_42_ratio, TAU_AB1_ratio, Lipoxina), names_to = "clinical_test", values_to = "clinical_test_value")

dados_lobos_v1_T_CD <- dados_lobos_v1_T_CD %>% 
  pivot_longer(c(K_corrected, K_age_decay, logAvgThickness, logAvgThickness_age_decay, S_corrected, S_age_decay, I_corrected, I_age_decay), names_to = "morphological_parameter", values_to = "morphological_parameter_value")

dados_lobos_v1_T_CD_behaviour <- filter(dados_lobos_v1_T_CD, clinical_test == "A7/A5" | clinical_test == "COGNITIVE_INDEX" | clinical_test == "TMT B-A" | clinical_test == "relogio" | clinical_test == "DIGIT SPAN BACK") 

dados_lobos_v1_T_CD_biochq <- filter(dados_lobos_v1_T_CD, clinical_test == "AB1-40" | clinical_test == "AB1-42" | clinical_test == "TAU" | clinical_test == "AB1_ratio" | clinical_test == "TAU_AB1_42_ratio" | clinical_test == "TAU_AB1_ratio"| clinical_test == "Lipoxina")


sumario_dados_hemi_v1_diag_CD <-
dados_hemi_v1_CH %>%
group_by(Diagnostic) %>%
summarise(
N = n_distinct(SUBJ),
Mean_COGNITIVE_INDEX = mean(COGNITIVE_INDEX,  na.rm = TRUE),
STD_COGNITIVE_INDEX = sd(COGNITIVE_INDEX,  na.rm = TRUE),
Mean_A7_A5 = mean(`A7/A5`,  na.rm = TRUE),
STD__A7_A5 = sd(`A7/A5`,  na.rm = TRUE),
Mean_TMT_B_A = mean(`TMT B-A`,  na.rm = TRUE),
STD_TMT_B_A = sd(`TMT B-A`,  na.rm = TRUE),
Mean_relogio = mean(relogio,  na.rm = TRUE),
STD_relogio = sd(relogio,  na.rm = TRUE),
Mean_DIGIT_SPAN_BACK = mean(`DIGIT SPAN BACK`,  na.rm = TRUE),
STD_DIGIT_SPAN_BACK = sd(`DIGIT SPAN BACK`,  na.rm = TRUE),
Mean_Lipoxina = mean(Lipoxina ,  na.rm = TRUE),
STD_Lipoxina = sd(Lipoxina ,  na.rm = TRUE),
Mean_AB1_40 = mean(`AB1-40`,  na.rm = TRUE),
STD_AB1_40 = sd(`AB1-40`,  na.rm = TRUE),
Mean_AB1_42 = mean(`AB1-42`,  na.rm = TRUE),
STD_AB1_42 = sd(`AB1-42`,  na.rm = TRUE),
Mean_TAU = mean(TAU,  na.rm = TRUE),
STD_TAU = sd(TAU,  na.rm = TRUE),)

sumario_dados_hemi_v1_diag_CD <-
dados_hemi_v1_CH_CD %>%
group_by(clinical_test, Diagnostic) %>%
summarise(
N = n_distinct(SUBJ),
Mean = mean(clinical_test_value,  na.rm = TRUE),
STD = sd(clinical_test_value,  na.rm = TRUE))

#n_NA = summary(clinical_test_value)[7]

sumario_dados_hemi_v1_diag_CD %>% kable(digits = 2) %>% kable_styling() %>%
  column_spec(1, width = "10cm")

ggplot(data = dados_hemi_v1_CH_CD_behaviour, aes(x = Diagnostic, y = clinical_test_value, color = Diagnostic, fill = Diagnostic, alpha = 0.4))+
  geom_boxplot() +
  facet_wrap(clinical_test ~ ., scales = "free", ncol = 2) +
  stat_compare_means(method = "anova") +
  theme_pubr()

ggplot(data = dados_hemi_v1_CH_CD_biochq, aes(x = Diagnostic, y = clinical_test_value, color = Diagnostic, fill = Diagnostic, alpha = 0.4))+
  geom_boxplot()+
  facet_wrap(clinical_test ~ ., scales = "free", ncol = 2) +
  stat_compare_means(method = "anova") +
  theme_pubr()

```

K:
```{r clincal data, eval=FALSE, include=FALSE}

ggplot(data = filter(dados_hemi_v1_CH, Lipoxina != 0 | !is.na(Lipoxina)), aes(K, Lipoxina, color = Diagnostic, fill = Diagnostic)) +
  geom_point() + stat_cor() + 
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + labs(caption = paste("N = ", n_distinct(filter(dados_hemi_v1_CH, Lipoxina != 0 | !is.na(Lipoxina))$SUBJ))) 

ggplot(data = filter(dados_hemi_v1_CH, COGNITIVE_INDEX != 0 | !is.na(COGNITIVE_INDEX)), aes(K, COGNITIVE_INDEX,  color = Diagnostic, fill = Diagnostic)) +
  geom_point() + stat_cor() + 
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + labs(caption = paste("N = ", n_distinct(filter(dados_hemi_v1_CH, COGNITIVE_INDEX != 0 | !is.na(COGNITIVE_INDEX))$SUBJ)))

ggplot(data = filter(dados_hemi_v1_CH, `A7/A5` != 0 | !is.na(`A7/A5`)), aes(K,`A7/A5`, color = Diagnostic, fill = Diagnostic)) +
  geom_point() + stat_cor() + 
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + labs(caption = paste("N = ", n_distinct(filter(dados_hemi_v1_CH, `A7/A5` != 0 | !is.na(`A7/A5`))$SUBJ))) +
  

  ggplot(data = filter(dados_hemi_v1_CH, `TMT B-A` != 0 | !is.na(`TMT B-A`)), aes(K,`TMT B-A`, color = Diagnostic, fill = Diagnostic)) +
  geom_point() + stat_cor() + 
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + labs(caption = paste("N = ", n_distinct(filter(dados_hemi_v1_CH, `TMT B-A` != 0 | !is.na(`TMT B-A`))$SUBJ)))

ggplot(data = filter(dados_hemi_v1_CH, relogio != 0 | !is.na(relogio)), aes(K, relogio, color = Diagnostic, fill = Diagnostic)) +
  geom_point() + stat_cor() + 
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + labs(caption = paste("N = ", n_distinct(filter(dados_hemi_v1_CH, relogio != 0 | !is.na(relogio))$SUBJ)))

ggplot(data = filter(dados_hemi_v1_CH, `DIGIT SPAN BACK` != 0 | !is.na(`DIGIT SPAN BACK`)), aes(K, `DIGIT SPAN BACK`, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_point() + stat_cor() + 
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + labs(caption = paste("N = ", n_distinct(filter(dados_hemi_v1_CH, `DIGIT SPAN BACK` != 0 | !is.na(`DIGIT SPAN BACK`))$SUBJ)))

ggplot(data = filter(dados_hemi_v1_CH, `AB1-40` != 0 | !is.na(`AB1-40`)), aes(`AB1-40`, K, color = Diagnostic, fill = Diagnostic)) +
  geom_point() + stat_cor() + 
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + labs(caption = paste("N = ", n_distinct(filter(dados_hemi_v1_CH, `AB1-40` != 0 | !is.na(`AB1-40`))$SUBJ)))

ggplot(data = filter(dados_hemi_v1_CH, `AB1-42` != 0 | !is.na(`AB1-42`)), aes(K, `AB1-42`, color = Diagnostic, fill = Diagnostic)) +
  geom_point() + stat_cor() + 
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + labs(caption = paste("N = ", n_distinct(filter(dados_hemi_v1_CH, `AB1-42` != 0 | !is.na(`AB1-42`))$SUBJ)))

ggplot(data = filter(dados_hemi_v1_CH, TAU != 0 | !is.na(TAU)), aes(TAU, K, color = Diagnostic, fill = Diagnostic)) +
  geom_point() + stat_cor() + 
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + labs(caption = paste("N = ", n_distinct(filter(dados_hemi_v1_CH, TAU != 0 | !is.na(TAU))$SUBJ)))

ggplot(data = filter(dados_hemi_v1_CH, AB1_ratio != 0 | !is.na(AB1_ratio)), aes(K, AB1_ratio, color = Diagnostic, fill = Diagnostic)) +
  geom_point() + stat_cor() + 
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + labs(caption = paste("N = ", n_distinct(filter(dados_hemi_v1_CH, AB1_ratio != 0 | !is.na(AB1_ratio))$SUBJ)))

ggplot(data = filter(dados_hemi_v1_CH, TAU_AB1_42_ratio != 0 | !is.na(TAU_AB1_42_ratio)), aes(K, TAU_AB1_42_ratio, color = Diagnostic, fill = Diagnostic)) +
  geom_point() + stat_cor() + 
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + labs(caption = paste("N = ", n_distinct(filter(dados_hemi_v1_CH, TAU_AB1_42_ratio != 0 | !is.na(TAU_AB1_42_ratio))$SUBJ)))

ggplot(data = filter(dados_hemi_v1_CH, TAU_AB1_ratio != 0 | !is.na(TAU_AB1_ratio)), aes(K, TAU_AB1_ratio, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_point() + stat_cor() + 
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + labs(caption = paste("N = ", n_distinct(filter(dados_hemi_v1_CH, TAU_AB1_ratio != 0 | !is.na(TAU_AB1_ratio))$SUBJ)))

```

Avg Thickness:
```{r clincal data logAvgThickness, eval=FALSE, include=FALSE}

ggplot(data = filter(dados_hemi_v1_CH, Lipoxina != 0 | !is.na(Lipoxina)), aes(logAvgThickness, Lipoxina, color = Diagnostic, fill = Diagnostic)) +
  geom_point() + stat_cor() + 
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + labs(caption = paste("N = ", n_distinct(filter(dados_hemi_v1_CH, Lipoxina != 0 | !is.na(Lipoxina))$SUBJ))) 

ggplot(data = filter(dados_hemi_v1_CH, COGNlogAvgThicknessTlogAvgThicknessVE_logAvgThicknessNDEX != 0 | !is.na(COGNlogAvgThicknessTlogAvgThicknessVE_logAvgThicknessNDEX)), aes(logAvgThickness, COGNlogAvgThicknessTlogAvgThicknessVE_logAvgThicknessNDEX,  color = Diagnostic, fill = Diagnostic)) +
  geom_point() + stat_cor() + 
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + labs(caption = paste("N = ", n_distinct(filter(dados_hemi_v1_CH, COGNlogAvgThicknessTlogAvgThicknessVE_logAvgThicknessNDEX != 0 | !is.na(COGNlogAvgThicknessTlogAvgThicknessVE_logAvgThicknessNDEX))$SUBJ)))

ggplot(data = filter(dados_hemi_v1_CH, `A7/A5` != 0 | !is.na(`A7/A5`)), aes(logAvgThickness,`A7/A5`, color = Diagnostic, fill = Diagnostic)) +
  geom_point() + stat_cor() + 
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + labs(caption = paste("N = ", n_distinct(filter(dados_hemi_v1_CH, `A7/A5` != 0 | !is.na(`A7/A5`))$SUBJ))) +
  

ggplot(data = filter(dados_hemi_v1_CH, `TMT B-A` != 0 | !is.na(`TMT B-A`)), aes(logAvgThickness,`TMT B-A`, color = Diagnostic, fill = Diagnostic)) +
  geom_point() + stat_cor() + 
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + labs(caption = paste("N = ", n_distinct(filter(dados_hemi_v1_CH, `TMT B-A` != 0 | !is.na(`TMT B-A`))$SUBJ)))

ggplot(data = filter(dados_hemi_v1_CH, relogio != 0 | !is.na(relogio)), aes(logAvgThickness, relogio, color = Diagnostic, fill = Diagnostic)) +
  geom_point() + stat_cor() + 
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + labs(caption = paste("N = ", n_distinct(filter(dados_hemi_v1_CH, relogio != 0 | !is.na(relogio))$SUBJ)))

ggplot(data = filter(dados_hemi_v1_CH, `DlogAvgThicknessGlogAvgThicknessT SPAN BAClogAvgThickness` != 0 | !is.na(`DlogAvgThicknessGlogAvgThicknessT SPAN BAClogAvgThickness`)), aes(logAvgThickness, `DlogAvgThicknessGlogAvgThicknessT SPAN BAClogAvgThickness`, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_point() + stat_cor() + 
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + labs(caption = paste("N = ", n_distinct(filter(dados_hemi_v1_CH, `DlogAvgThicknessGlogAvgThicknessT SPAN BAClogAvgThickness` != 0 | !is.na(`DlogAvgThicknessGlogAvgThicknessT SPAN BAClogAvgThickness`))$SUBJ)))

ggplot(data = filter(dados_hemi_v1_CH, `AB1-40` != 0 | !is.na(`AB1-40`)), aes(`AB1-40`, logAvgThickness, color = Diagnostic, fill = Diagnostic)) +
  geom_point() + stat_cor() + 
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + labs(caption = paste("N = ", n_distinct(filter(dados_hemi_v1_CH, `AB1-40` != 0 | !is.na(`AB1-40`))$SUBJ)))

ggplot(data = filter(dados_hemi_v1_CH, `AB1-42` != 0 | !is.na(`AB1-42`)), aes(logAvgThickness, `AB1-42`, color = Diagnostic, fill = Diagnostic)) +
  geom_point() + stat_cor() + 
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + labs(caption = paste("N = ", n_distinct(filter(dados_hemi_v1_CH, `AB1-42` != 0 | !is.na(`AB1-42`))$SUBJ)))

ggplot(data = filter(dados_hemi_v1_CH, TAU != 0 | !is.na(TAU)), aes(TAU, logAvgThickness, color = Diagnostic, fill = Diagnostic)) +
  geom_point() + stat_cor() + 
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + labs(caption = paste("N = ", n_distinct(filter(dados_hemi_v1_CH, TAU != 0 | !is.na(TAU))$SUBJ)))

ggplot(data = filter(dados_hemi_v1_CH, AB1_ratio != 0 | !is.na(AB1_ratio)), aes(logAvgThickness, AB1_ratio, color = Diagnostic, fill = Diagnostic)) +
  geom_point() + stat_cor() + 
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + labs(caption = paste("N = ", n_distinct(filter(dados_hemi_v1_CH, AB1_ratio != 0 | !is.na(AB1_ratio))$SUBJ)))

ggplot(data = filter(dados_hemi_v1_CH, TAU_AB1_42_ratio != 0 | !is.na(TAU_AB1_42_ratio)), aes(logAvgThickness, TAU_AB1_42_ratio, color = Diagnostic, fill = Diagnostic)) +
  geom_point() + stat_cor() + 
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + labs(caption = paste("N = ", n_distinct(filter(dados_hemi_v1_CH, TAU_AB1_42_ratio != 0 | !is.na(TAU_AB1_42_ratio))$SUBJ)))

ggplot(data = filter(dados_hemi_v1_CH, TAU_AB1_ratio != 0 | !is.na(TAU_AB1_ratio)), aes(logAvgThickness, TAU_AB1_ratio, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_point() + stat_cor() + 
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + labs(caption = paste("N = ", n_distinct(filter(dados_hemi_v1_CH, TAU_AB1_ratio != 0 | !is.na(TAU_AB1_ratio))$SUBJ)))

```

S:

```{r clincal data S, eval=FALSE, include=FALSE}

ggplot(data = filter(dados_hemi_v1_CH, Lipoxina != 0 | !is.na(Lipoxina)), aes(S, Lipoxina, color = Diagnostic, fill = Diagnostic)) +
  geom_point() + stat_cor() + 
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + labs(caption = paste("N = ", n_distinct(filter(dados_hemi_v1_CH, Lipoxina != 0 | !is.na(Lipoxina))$SUBJ))) 

ggplot(data = filter(dados_hemi_v1_CH, COGNSTSVE_SNDEX != 0 | !is.na(COGNSTSVE_SNDEX)), aes(S, COGNSTSVE_SNDEX,  color = Diagnostic, fill = Diagnostic)) +
  geom_point() + stat_cor() + 
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + labs(caption = paste("N = ", n_distinct(filter(dados_hemi_v1_CH, COGNSTSVE_SNDEX != 0 | !is.na(COGNSTSVE_SNDEX))$SUBJ)))

ggplot(data = filter(dados_hemi_v1_CH, `A7/A5` != 0 | !is.na(`A7/A5`)), aes(S,`A7/A5`, color = Diagnostic, fill = Diagnostic)) +
  geom_point() + stat_cor() + 
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + labs(caption = paste("N = ", n_distinct(filter(dados_hemi_v1_CH, `A7/A5` != 0 | !is.na(`A7/A5`))$SUBJ))) +
  

ggplot(data = filter(dados_hemi_v1_CH, `TMT B-A` != 0 | !is.na(`TMT B-A`)), aes(S,`TMT B-A`, color = Diagnostic, fill = Diagnostic)) +
  geom_point() + stat_cor() + 
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + labs(caption = paste("N = ", n_distinct(filter(dados_hemi_v1_CH, `TMT B-A` != 0 | !is.na(`TMT B-A`))$SUBJ)))

ggplot(data = filter(dados_hemi_v1_CH, relogio != 0 | !is.na(relogio)), aes(S, relogio, color = Diagnostic, fill = Diagnostic)) +
  geom_point() + stat_cor() + 
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + labs(caption = paste("N = ", n_distinct(filter(dados_hemi_v1_CH, relogio != 0 | !is.na(relogio))$SUBJ)))

ggplot(data = filter(dados_hemi_v1_CH, `DSGST SPAN BACS` != 0 | !is.na(`DSGST SPAN BACS`)), aes(S, `DSGST SPAN BACS`, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_point() + stat_cor() + 
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + labs(caption = paste("N = ", n_distinct(filter(dados_hemi_v1_CH, `DSGST SPAN BACS` != 0 | !is.na(`DSGST SPAN BACS`))$SUBJ)))

ggplot(data = filter(dados_hemi_v1_CH, `AB1-40` != 0 | !is.na(`AB1-40`)), aes(`AB1-40`, S, color = Diagnostic, fill = Diagnostic)) +
  geom_point() + stat_cor() + 
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + labs(caption = paste("N = ", n_distinct(filter(dados_hemi_v1_CH, `AB1-40` != 0 | !is.na(`AB1-40`))$SUBJ)))

ggplot(data = filter(dados_hemi_v1_CH, `AB1-42` != 0 | !is.na(`AB1-42`)), aes(S, `AB1-42`, color = Diagnostic, fill = Diagnostic)) +
  geom_point() + stat_cor() + 
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + labs(caption = paste("N = ", n_distinct(filter(dados_hemi_v1_CH, `AB1-42` != 0 | !is.na(`AB1-42`))$SUBJ)))

ggplot(data = filter(dados_hemi_v1_CH, TAU != 0 | !is.na(TAU)), aes(TAU, S, color = Diagnostic, fill = Diagnostic)) +
  geom_point() + stat_cor() + 
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + labs(caption = paste("N = ", n_distinct(filter(dados_hemi_v1_CH, TAU != 0 | !is.na(TAU))$SUBJ)))

ggplot(data = filter(dados_hemi_v1_CH, AB1_ratio != 0 | !is.na(AB1_ratio)), aes(S, AB1_ratio, color = Diagnostic, fill = Diagnostic)) +
  geom_point() + stat_cor() + 
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + labs(caption = paste("N = ", n_distinct(filter(dados_hemi_v1_CH, AB1_ratio != 0 | !is.na(AB1_ratio))$SUBJ)))

ggplot(data = filter(dados_hemi_v1_CH, TAU_AB1_42_ratio != 0 | !is.na(TAU_AB1_42_ratio)), aes(S, TAU_AB1_42_ratio, color = Diagnostic, fill = Diagnostic)) +
  geom_point() + stat_cor() + 
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + labs(caption = paste("N = ", n_distinct(filter(dados_hemi_v1_CH, TAU_AB1_42_ratio != 0 | !is.na(TAU_AB1_42_ratio))$SUBJ)))

ggplot(data = filter(dados_hemi_v1_CH, TAU_AB1_ratio != 0 | !is.na(TAU_AB1_ratio)), aes(S, TAU_AB1_ratio, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_point() + stat_cor() + 
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + labs(caption = paste("N = ", n_distinct(filter(dados_hemi_v1_CH, TAU_AB1_ratio != 0 | !is.na(TAU_AB1_ratio))$SUBJ)))

```

I:
```{r clincal data I, eval=FALSE, include=FALSE}

ggplot(data = filter(dados_hemi_v1_CH, Lipoxina != 0 | !is.na(Lipoxina)), aes(I, Lipoxina, color = Diagnostic, fill = Diagnostic)) +
  geom_point() + stat_cor() + 
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + labs(caption = paste("N = ", n_distinct(filter(dados_hemi_v1_CH, Lipoxina != 0 | !is.na(Lipoxina))$SUBJ))) 

ggplot(data = filter(dados_hemi_v1_CH, COGNITIVE_INDEX != 0 | !is.na(COGNITIVE_INDEX)), aes(I, COGNITIVE_INDEX,  color = Diagnostic, fill = Diagnostic)) +
  geom_point() + stat_cor() + 
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + labs(caption = paste("N = ", n_distinct(filter(dados_hemi_v1_CH, COGNITIVE_INDEX != 0 | !is.na(COGNITIVE_INDEX))$SUBJ)))

ggplot(data = filter(dados_hemi_v1_CH, `A7/A5` != 0 | !is.na(`A7/A5`)), aes(I,`A7/A5`, color = Diagnostic, fill = Diagnostic)) +
  geom_point() + stat_cor() + 
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + labs(caption = paste("N = ", n_distinct(filter(dados_hemi_v1_CH, `A7/A5` != 0 | !is.na(`A7/A5`))$SUBJ))) +
  

ggplot(data = filter(dados_hemi_v1_CH, `TMT B-A` != 0 | !is.na(`TMT B-A`)), aes(I,`TMT B-A`, color = Diagnostic, fill = Diagnostic)) +
  geom_point() + stat_cor() + 
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + labs(caption = paste("N = ", n_distinct(filter(dados_hemi_v1_CH, `TMT B-A` != 0 | !is.na(`TMT B-A`))$SUBJ)))

ggplot(data = filter(dados_hemi_v1_CH, relogio != 0 | !is.na(relogio)), aes(I, relogio, color = Diagnostic, fill = Diagnostic)) +
  geom_point() + stat_cor() + 
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + labs(caption = paste("N = ", n_distinct(filter(dados_hemi_v1_CH, relogio != 0 | !is.na(relogio))$SUBJ)))

ggplot(data = filter(dados_hemi_v1_CH, `DIGIT SPAN BACI` != 0 | !is.na(`DIGIT SPAN BACI`)), aes(I, `DIGIT SPAN BACI`, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_point() + stat_cor() + 
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + labs(caption = paste("N = ", n_distinct(filter(dados_hemi_v1_CH, `DIGIT SPAN BACI` != 0 | !is.na(`DIGIT SPAN BACI`))$SUBJ)))

ggplot(data = filter(dados_hemi_v1_CH, `AB1-40` != 0 | !is.na(`AB1-40`)), aes(`AB1-40`, I, color = Diagnostic, fill = Diagnostic)) +
  geom_point() + stat_cor() + 
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + labs(caption = paste("N = ", n_distinct(filter(dados_hemi_v1_CH, `AB1-40` != 0 | !is.na(`AB1-40`))$SUBJ)))

ggplot(data = filter(dados_hemi_v1_CH, `AB1-42` != 0 | !is.na(`AB1-42`)), aes(I, `AB1-42`, color = Diagnostic, fill = Diagnostic)) +
  geom_point() + stat_cor() + 
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + labs(caption = paste("N = ", n_distinct(filter(dados_hemi_v1_CH, `AB1-42` != 0 | !is.na(`AB1-42`))$SUBJ)))

ggplot(data = filter(dados_hemi_v1_CH, TAU != 0 | !is.na(TAU)), aes(TAU, I, color = Diagnostic, fill = Diagnostic)) +
  geom_point() + stat_cor() + 
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + labs(caption = paste("N = ", n_distinct(filter(dados_hemi_v1_CH, TAU != 0 | !is.na(TAU))$SUBJ)))

ggplot(data = filter(dados_hemi_v1_CH, AB1_ratio != 0 | !is.na(AB1_ratio)), aes(I, AB1_ratio, color = Diagnostic, fill = Diagnostic)) +
  geom_point() + stat_cor() + 
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + labs(caption = paste("N = ", n_distinct(filter(dados_hemi_v1_CH, AB1_ratio != 0 | !is.na(AB1_ratio))$SUBJ)))

ggplot(data = filter(dados_hemi_v1_CH, TAU_AB1_42_ratio != 0 | !is.na(TAU_AB1_42_ratio)), aes(I, TAU_AB1_42_ratio, color = Diagnostic, fill = Diagnostic)) +
  geom_point() + stat_cor() + 
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + labs(caption = paste("N = ", n_distinct(filter(dados_hemi_v1_CH, TAU_AB1_42_ratio != 0 | !is.na(TAU_AB1_42_ratio))$SUBJ)))

ggplot(data = filter(dados_hemi_v1_CH, TAU_AB1_ratio != 0 | !is.na(TAU_AB1_ratio)), aes(I, TAU_AB1_ratio, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_point() + stat_cor() + 
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + labs(caption = paste("N = ", n_distinct(filter(dados_hemi_v1_CH, TAU_AB1_ratio != 0 | !is.na(TAU_AB1_ratio))$SUBJ)))

```

### clinical data - CORRELATION AND COVARIATION

```{r corr cov hemi, include=FALSE}

Corr_cov1 <- dados_hemi_v1_CH_CD_behaviour %>%
  group_by(morphological_parameter, clinical_test) %>%
  summarise(
    Correlation = cor.test(morphological_parameter_value, clinical_test_value, use = "pairwise.complete.obs", method = "pearson")$estimate,
    pvalue = cor.test(morphological_parameter_value, clinical_test_value, use = "pairwise.complete.obs", method = "pearson")$p.value,
    Covariance = cov(morphological_parameter_value, clinical_test_value, use = "pairwise.complete.obs", method = "pearson")
  ) %>% mutate(Diagnostic = "All", ROI = "Hemisphere", kind = "behaviour", age_correction = ifelse(str_detect(morphological_parameter, "_age_decay", negate = FALSE),"yes","no"))

Corr_cov2 <- dados_hemi_v1_CH_CD_behaviour %>%
  group_by(Diagnostic, morphological_parameter, clinical_test) %>%
  summarise(
    Correlation = cor.test(morphological_parameter_value, clinical_test_value, use = "pairwise.complete.obs", method = "pearson")$estimate,
    pvalue = cor.test(morphological_parameter_value, clinical_test_value, use = "pairwise.complete.obs", method = "pearson")$p.value,
    Covariance = cov(morphological_parameter_value, clinical_test_value, use = "pairwise.complete.obs", method = "pearson")
  ) %>% mutate(ROI = "Hemisphere", kind = "behaviour", age_correction = ifelse(str_detect(morphological_parameter, "_age_decay", negate = FALSE),"yes","no"))

Corr_cov3 <- dados_hemi_v1_CH_CD_biochq %>%
  group_by(morphological_parameter, clinical_test) %>%
  summarise(
    Correlation = cor.test(morphological_parameter_value, clinical_test_value, use = "pairwise.complete.obs", method = "pearson")$estimate,
    pvalue = cor.test(morphological_parameter_value, clinical_test_value, use = "pairwise.complete.obs", method = "pearson")$p.value,
    Covariance = cov(morphological_parameter_value, clinical_test_value, use = "pairwise.complete.obs", method = "pearson")
  ) %>% mutate(Diagnostic = "All", ROI = "Hemisphere", kind = "behaviour", age_correction = ifelse(str_detect(morphological_parameter, "_age_decay", negate = FALSE),"yes","no"))

Corr_cov4 <- dados_hemi_v1_CH_CD_biochq %>%
  group_by(Diagnostic, morphological_parameter, clinical_test) %>%
  summarise(
    Correlation = cor.test(morphological_parameter_value, clinical_test_value, use = "pairwise.complete.obs", method = "pearson")$estimate,
    pvalue = cor.test(morphological_parameter_value, clinical_test_value, use = "pairwise.complete.obs", method = "pearson")$p.value,
    Covariance = cov(morphological_parameter_value, clinical_test_value, use = "pairwise.complete.obs", method = "pearson")
  ) %>% mutate(ROI = "Hemisphere", kind = "biochemical", age_correction = ifelse(str_detect(morphological_parameter, "_age_decay", negate = FALSE),"yes","no"))

Corr_cov_all <- full_join(Corr_cov1, Corr_cov3)
Corr_cov_diag <- full_join(Corr_cov2, Corr_cov4)

Corr_cov_all %>% kable(digits = 4) %>% kable_styling()
Corr_cov_diag %>% kable(digits = 4) %>% kable_styling()
```

```{r corr cov lobo frontal ,include=FALSE}

Corr_cov5 <- filter(dados_lobos_v1_F_CD_behaviour, clinical_test == "TMT B-A" | clinical_test == "relogio" | clinical_test == "DIGIT SPAN BACK") %>%
  group_by(morphological_parameter, clinical_test) %>%
  summarise(
    Correlation = cor.test(morphological_parameter_value, clinical_test_value, use = "pairwise.complete.obs", method = "pearson")$estimate,
    pvalue = cor.test(morphological_parameter_value, clinical_test_value, use = "pairwise.complete.obs", method = "pearson")$p.value,
    Covariance = cov(morphological_parameter_value, clinical_test_value, use = "pairwise.complete.obs", method = "pearson")
  ) %>% mutate(Diagnostic = "All", ROI = "Frontal lobe", kind = "behaviour", age_correction = ifelse(str_detect(morphological_parameter, "_age_decay", negate = FALSE),"yes","no"))

Corr_cov6 <- filter(dados_lobos_v1_F_CD_behaviour, clinical_test == "TMT B-A" | clinical_test == "relogio" | clinical_test == "DIGIT SPAN BACK") %>%
  group_by(Diagnostic, morphological_parameter, clinical_test) %>%
  summarise(
    Correlation = cor.test(morphological_parameter_value, clinical_test_value, use = "pairwise.complete.obs", method = "pearson")$estimate,
    pvalue = cor.test(morphological_parameter_value, clinical_test_value, use = "pairwise.complete.obs", method = "pearson")$p.value,
    Covariance = cov(morphological_parameter_value, clinical_test_value, use = "pairwise.complete.obs", method = "pearson")
  ) %>% mutate(ROI = "Frontal lobe", kind = "behaviour", age_correction = ifelse(str_detect(morphological_parameter, "_age_decay", negate = FALSE),"yes","no"))

# Corr_cov7 <- dados_lobos_v1_F_CD_biochq %>%
#   group_by(morphological_parameter, clinical_test) %>%
#   summarise(
#     Correlation = cor.test(morphological_parameter_value, clinical_test_value, use = "pairwise.complete.obs", method = "pearson")$estimate,
#     pvalue = cor.test(morphological_parameter_value, clinical_test_value, use = "pairwise.complete.obs", method = "pearson")$p.value,
#     Covariance = cov(morphological_parameter_value, clinical_test_value, use = "pairwise.complete.obs", method = "pearson")
#   ) %>% mutate(Diagnostic = "All", ROI = "Frontal lobe", kind = "behaviour", age_correction = ifelse(str_detect(morphological_parameter, "_age_decay", negate = FALSE),"yes","no"))
# 
# Corr_cov8 <- dados_lobos_v1_F_CD_biochq %>%
#   group_by(Diagnostic, morphological_parameter, clinical_test) %>%
#   summarise(
#     Correlation = cor.test(morphological_parameter_value, clinical_test_value, use = "pairwise.complete.obs", method = "pearson")$estimate,
#     pvalue = cor.test(morphological_parameter_value, clinical_test_value, use = "pairwise.complete.obs", method = "pearson")$p.value,
#     Covariance = cov(morphological_parameter_value, clinical_test_value, use = "pairwise.complete.obs", method = "pearson")
#   ) %>% mutate(ROI = "Frontal lobe", kind = "biochemical", age_correction = ifelse(str_detect(morphological_parameter, "_age_decay", negate = FALSE),"yes","no"))

Corr_cov_all <- full_join(Corr_cov_all, Corr_cov5)
Corr_cov_diag <- full_join(Corr_cov_diag, Corr_cov6)


filter(Corr_cov_all, ROI == "Frontal lobe") %>% kable(digits = 4) %>% kable_styling()
filter(Corr_cov_diag, ROI == "Frontal lobe") %>% kable(digits = 4) %>% kable_styling()
```

```{r corr cov lobo parietal, include=FALSE}

Corr_cov9 <- filter(dados_lobos_v1_P_CD_behaviour, clinical_test == "relogio") %>%
  group_by(morphological_parameter, clinical_test) %>%
  summarise(
    Correlation = cor.test(morphological_parameter_value, clinical_test_value, use = "pairwise.complete.obs", method = "pearson")$estimate,
    pvalue = cor.test(morphological_parameter_value, clinical_test_value, use = "pairwise.complete.obs", method = "pearson")$p.value,
    Covariance = cov(morphological_parameter_value, clinical_test_value, use = "pairwise.complete.obs", method = "pearson")
  ) %>% mutate(Diagnostic = "All", ROI = "Parietal lobe", kind = "behaviour", age_correction = ifelse(str_detect(morphological_parameter, "_age_decay", negate = FALSE),"yes","no"))

Corr_cov10 <- filter(dados_lobos_v1_P_CD_behaviour, clinical_test == "relogio") %>%
  group_by(Diagnostic, morphological_parameter, clinical_test) %>%
  summarise(
    Correlation = cor.test(morphological_parameter_value, clinical_test_value, use = "pairwise.complete.obs", method = "pearson")$estimate,
    pvalue = cor.test(morphological_parameter_value, clinical_test_value, use = "pairwise.complete.obs", method = "pearson")$p.value,
    Covariance = cov(morphological_parameter_value, clinical_test_value, use = "pairwise.complete.obs", method = "pearson")
  ) %>% mutate(ROI = "Parietal lobe", kind = "behaviour", age_correction = ifelse(str_detect(morphological_parameter, "_age_decay", negate = FALSE),"yes","no"))

# Corr_cov11 <- dados_lobos_v1_P_CD_biochq %>%
#   group_by(morphological_parameter, clinical_test) %>%
#   summarise(
#     Correlation = cor.test(morphological_parameter_value, clinical_test_value, use = "pairwise.complete.obs", method = "pearson")$estimate,
#     pvalue = cor.test(morphological_parameter_value, clinical_test_value, use = "pairwise.complete.obs", method = "pearson")$p.value,
#     Covariance = cov(morphological_parameter_value, clinical_test_value, use = "pairwise.complete.obs", method = "pearson")
#   ) %>% mutate(Diagnostic = "All", ROI = "Parietal lobe", kind = "behaviour", age_correction = ifelse(str_detect(morphological_parameter, "_age_decay", negate = FALSE),"yes","no"))
# 
# Corr_cov12 <- dados_lobos_v1_P_CD_biochq %>%
#   group_by(Diagnostic, morphological_parameter, clinical_test) %>%
#   summarise(
#     Correlation = cor.test(morphological_parameter_value, clinical_test_value, use = "pairwise.complete.obs", method = "pearson")$estimate,
#     pvalue = cor.test(morphological_parameter_value, clinical_test_value, use = "pairwise.complete.obs", method = "pearson")$p.value,
#     Covariance = cov(morphological_parameter_value, clinical_test_value, use = "pairwise.complete.obs", method = "pearson")
#   ) %>% mutate(ROI = "Parietal lobe", kind = "biochemical", age_correction = ifelse(str_detect(morphological_parameter, "_age_decay", negate = FALSE),"yes","no"))

Corr_cov_all <- full_join(Corr_cov_all, Corr_cov9)
Corr_cov_diag <- full_join(Corr_cov_diag, Corr_cov10)

filter(Corr_cov_all, ROI == "Parietal lobe") %>% kable(digits = 4) %>% kable_styling()

filter(Corr_cov_diag, ROI == "Parietal lobe") %>% kable(digits = 4) %>% kable_styling()
```

```{r corr cov lobo ocipital ,include=FALSE}

Corr_cov13 <- filter(dados_lobos_v1_O_CD_behaviour, clinical_test == "relogio") %>%
  group_by(morphological_parameter, clinical_test) %>%
  summarise(
    Correlation = cor.test(morphological_parameter_value, clinical_test_value, use = "pairwise.complete.obs", method = "pearson")$estimate,
    pvalue = cor.test(morphological_parameter_value, clinical_test_value, use = "pairwise.complete.obs", method = "pearson")$p.value,
    Covariance = cov(morphological_parameter_value, clinical_test_value, use = "pairwise.complete.obs", method = "pearson")
  ) %>% mutate(Diagnostic = "All", ROI = "Occipital lobe", kind = "behaviour", age_correction = ifelse(str_detect(morphological_parameter, "_age_decay", negate = FALSE),"yes","no"))

Corr_cov14 <- filter(dados_lobos_v1_O_CD_behaviour, clinical_test == "relogio") %>%
  group_by(Diagnostic, morphological_parameter, clinical_test) %>%
  summarise(
    Correlation = cor.test(morphological_parameter_value, clinical_test_value, use = "pairwise.complete.obs", method = "pearson")$estimate,
    pvalue = cor.test(morphological_parameter_value, clinical_test_value, use = "pairwise.complete.obs", method = "pearson")$p.value,
    Covariance = cov(morphological_parameter_value, clinical_test_value, use = "pairwise.complete.obs", method = "pearson")
  ) %>% mutate(ROI = "Occipital lobe", kind = "behaviour", age_correction = ifelse(str_detect(morphological_parameter, "_age_decay", negate = FALSE),"yes","no"))

# Corr_cov15 <- dados_lobos_v1_O_CD_biochq %>%
#   group_by(morphological_parameter, clinical_test) %>%
#   summarise(
#     Correlation = cor.test(morphological_parameter_value, clinical_test_value, use = "pairwise.complete.obs", method = "pearson")$estimate,
#     pvalue = cor.test(morphological_parameter_value, clinical_test_value, use = "pairwise.complete.obs", method = "pearson")$p.value,
#     Covariance = cov(morphological_parameter_value, clinical_test_value, use = "pairwise.complete.obs", method = "pearson")
#   ) %>% mutate(Diagnostic = "All", ROI = "Occipital lobe", kind = "behaviour", age_correction = ifelse(str_detect(morphological_parameter, "_age_decay", negate = FALSE),"yes","no"))
# 
# Corr_cov16 <- dados_lobos_v1_O_CD_biochq %>%
#   group_by(Diagnostic, morphological_parameter, clinical_test) %>%
#   summarise(
#     Correlation = cor.test(morphological_parameter_value, clinical_test_value, use = "pairwise.complete.obs", method = "pearson")$estimate,
#     pvalue = cor.test(morphological_parameter_value, clinical_test_value, use = "pairwise.complete.obs", method = "pearson")$p.value,
#     Covariance = cov(morphological_parameter_value, clinical_test_value, use = "pairwise.complete.obs", method = "pearson")
#   ) %>% mutate(ROI = "Occipital lobe", kind = "biochemical", age_correction = ifelse(str_detect(morphological_parameter, "_age_decay", negate = FALSE),"yes","no"))

Corr_cov_all <- full_join(Corr_cov_all, Corr_cov13)
Corr_cov_diag <- full_join(Corr_cov_diag, Corr_cov14)

filter(Corr_cov_all, ROI == "Occipital lobe") %>% kable(digits = 4) %>% kable_styling()

filter(Corr_cov_diag, ROI == "Occipital lobe") %>% kable(digits = 4) %>% kable_styling()
```

```{r corr cov lobo temporal ,include=FALSE}

Corr_cov17 <- filter(dados_lobos_v1_T_CD_behaviour, clinical_test == "A7/A5") %>%
  group_by(morphological_parameter, clinical_test) %>%
  summarise(
    Correlation = cor.test(morphological_parameter_value, clinical_test_value, use = "pairwise.complete.obs", method = "pearson")$estimate,
    pvalue = cor.test(morphological_parameter_value, clinical_test_value, use = "pairwise.complete.obs", method = "pearson")$p.value,
    Covariance = cov(morphological_parameter_value, clinical_test_value, use = "pairwise.complete.obs", method = "pearson")
  ) %>% mutate(Diagnostic = "All", ROI = "Temporal lobe", kind = "behaviour", age_correction = ifelse(str_detect(morphological_parameter, "_age_decay", negate = FALSE),"yes","no"))

Corr_cov18 <- filter(dados_lobos_v1_T_CD_behaviour, clinical_test == "A7/A5") %>%
  group_by(Diagnostic, morphological_parameter, clinical_test) %>%
  summarise(
    Correlation = cor.test(morphological_parameter_value, clinical_test_value, use = "pairwise.complete.obs", method = "pearson")$estimate,
    pvalue = cor.test(morphological_parameter_value, clinical_test_value, use = "pairwise.complete.obs", method = "pearson")$p.value,
    Covariance = cov(morphological_parameter_value, clinical_test_value, use = "pairwise.complete.obs", method = "pearson")
  ) %>% mutate(ROI = "Temporal lobe", kind = "behaviour", age_correction = ifelse(str_detect(morphological_parameter, "_age_decay", negate = FALSE),"yes","no"))

# Corr_cov19 <- dados_lobos_v1_T_CD_biochq %>%
#   group_by(morphological_parameter, clinical_test) %>%
#   summarise(
#     Correlation = cor.test(morphological_parameter_value, clinical_test_value, use = "pairwise.complete.obs", method = "pearson")$estimate,
#     pvalue = cor.test(morphological_parameter_value, clinical_test_value, use = "pairwise.complete.obs", method = "pearson")$p.value,
#     Covariance = cov(morphological_parameter_value, clinical_test_value, use = "pairwise.complete.obs", method = "pearson")
#   ) %>% mutate(Diagnostic = "All", ROI = "Temporal lobe", kind = "behaviour", age_correction = ifelse(str_detect(morphological_parameter, "_age_decay", negate = FALSE),"yes","no"))
# 
# Corr_cov20 <- dados_lobos_v1_T_CD_biochq %>%
#   group_by(Diagnostic, morphological_parameter, clinical_test) %>%
#   summarise(
#     Correlation = cor.test(morphological_parameter_value, clinical_test_value, use = "pairwise.complete.obs", method = "pearson")$estimate,
#     pvalue = cor.test(morphological_parameter_value, clinical_test_value, use = "pairwise.complete.obs", method = "pearson")$p.value,
#     Covariance = cov(morphological_parameter_value, clinical_test_value, use = "pairwise.complete.obs", method = "pearson")
#   ) %>% mutate(ROI = "Temporal lobe", kind = "biochemical", age_correction = ifelse(str_detect(morphological_parameter, "_age_decay", negate = FALSE),"yes","no"))

Corr_cov_all <- full_join(Corr_cov_all, Corr_cov17)
Corr_cov_diag <- full_join(Corr_cov_diag, Corr_cov18)

filter(Corr_cov_all, ROI == "Temporal lobe") %>% kable(digits = 4) %>% kable_styling()

filter(Corr_cov_diag, ROI == "Temporal lobe") %>% kable(digits = 4) %>% kable_styling()
```

```{r echo=FALSE, warning=TRUE}
Corr_cov_all <- Corr_cov_all %>% group_by(morphological_parameter, clinical_test) %>% mutate(pval.adj = p.adjust (pvalue, method='bonferroni'))
Corr_cov_diag <- Corr_cov_diag %>% group_by(morphological_parameter, clinical_test) %>% mutate(pval.adj = p.adjust (pvalue, method='bonferroni'))

filter(Corr_cov_all, morphological_parameter == "K" | morphological_parameter == "logAvgThickness") %>% kable() %>% kable_styling()
filter(Corr_cov_diag, morphological_parameter == "K" | morphological_parameter == "logAvgThickness") %>% kable() %>% kable_styling()

Corr_cov_all$morphological_parameter[Corr_cov_all$morphological_parameter == "K_corrected"] <- "K"
Corr_cov_all$morphological_parameter[Corr_cov_all$morphological_parameter == "I_corrected"] <- "I"
Corr_cov_all$morphological_parameter[Corr_cov_all$morphological_parameter == "S_corrected"] <- "S"

Corr_cov_all$morphological_parameter[Corr_cov_all$morphological_parameter == "K_age_decay"] <- "K"
Corr_cov_all$morphological_parameter[Corr_cov_all$morphological_parameter == "I_age_decay"] <- "I"
Corr_cov_all$morphological_parameter[Corr_cov_all$morphological_parameter == "S_age_decay"] <- "S"
Corr_cov_all$morphological_parameter[Corr_cov_all$morphological_parameter == "S_age_decay"] <- "S"
Corr_cov_all$morphological_parameter[Corr_cov_all$morphological_parameter == "logAvgThickness_age_decay"] <- "logAvgThickness"

Corr_cov_diag$morphological_parameter[Corr_cov_diag$morphological_parameter == "K_corrected"] <- "K"
Corr_cov_diag$morphological_parameter[Corr_cov_diag$morphological_parameter == "I_corrected"] <- "I"
Corr_cov_diag$morphological_parameter[Corr_cov_diag$morphological_parameter == "S_corrected"] <- "S"

Corr_cov_diag$morphological_parameter[Corr_cov_diag$morphological_parameter == "K_age_decay"] <- "K"
Corr_cov_diag$morphological_parameter[Corr_cov_diag$morphological_parameter == "I_age_decay"] <- "I"
Corr_cov_diag$morphological_parameter[Corr_cov_diag$morphological_parameter == "S_age_decay"] <- "S"
Corr_cov_diag$morphological_parameter[Corr_cov_diag$morphological_parameter == "S_age_decay"] <- "S"
Corr_cov_diag$morphological_parameter[Corr_cov_diag$morphological_parameter == "logAvgThickness_age_decay"] <- "logAvgThickness"

  ggplot(filter(Corr_cov_all, clinical_test == "COGNITIVE_INDEX" | clinical_test == "TMT B-A" | clinical_test == "A7/A5" | clinical_test == "relogio", Diagnostic == "All"), aes(x = clinical_test, y = Correlation, color = morphological_parameter, fill = morphological_parameter, alpha = 0.4)) + geom_col(position = "dodge") + geom_text(aes(label = ifelse(pval.adj < 0.05, "*", "")), color = "black", position = position_dodge(width = 1)) + theme_pubr() + facet_grid(age_correction ~ ROI, labeller = label_both)
 
ggplot(filter(Corr_cov_all, clinical_test == "Lipoxina" | clinical_test == "AB1-40" | clinical_test == "AB1-42" | clinical_test == "TAU" | clinical_test == "AB1_ratio" | clinical_test == "TAU_AB1_42_ratio" | clinical_test == "TAU_AB1_ratio", Diagnostic == "All"), aes(x = clinical_test, y = Correlation, color = morphological_parameter, fill = morphological_parameter, alpha = 0.4)) + geom_col(position = "dodge") + geom_text(aes(label = ifelse(pval.adj < 0.05, "*", "")), color = "black", position = position_dodge(width = 1)) + theme_pubr() + facet_grid(age_correction ~ ROI, labeller = label_both)

  ggplot(filter(Corr_cov_all, clinical_test == "COGNITIVE_INDEX" | clinical_test == "TMT B-A" | clinical_test == "A7/A5" | clinical_test == "relogio", Diagnostic == "All"), aes(x = clinical_test, y = Correlation, color = morphological_parameter, fill = morphological_parameter, alpha = 0.4)) + geom_col(position = "dodge") + geom_text(aes(label = ifelse(pval.adj < 0.05, "*", "")), color = "black", position = position_dodge(width = 1)) + theme_pubr() + facet_grid(age_correction ~ ROI, labeller = label_both)
 
ggplot(filter(Corr_cov_all, clinical_test == "Lipoxina" | clinical_test == "AB1-40" | clinical_test == "AB1-42" | clinical_test == "TAU" | clinical_test == "AB1_ratio" | clinical_test == "TAU_AB1_42_ratio" | clinical_test == "TAU_AB1_ratio", Diagnostic == "All"), aes(x = clinical_test, y = Correlation, color = morphological_parameter, fill = morphological_parameter, alpha = 0.4)) + geom_col(position = "dodge") + geom_text(aes(label = ifelse(pval.adj < 0.05, "*", "")), color = "black", position = position_dodge(width = 1)) + theme_pubr() + facet_grid(age_correction ~ ROI, labeller = label_both)

```

K:
```{r corr cov K, eval=FALSE, include=FALSE}

filter(Corr_cov_filter, morphological_parameter == "K") %>% kable(digits = 4) %>% kable_styling()
filter(Corr_cov_filter, morphological_parameter == "K", pval.adj < 0.05) %>% kable(digits = 4) %>% kable_styling()


ggplot(filter(Corr_cov, clinical_test == "COGNITIVE_INDEX" | clinical_test == "TMT B-A" | clinical_test == "A7/A5" | clinical_test == "relogio", morphological_parameter == "K", Diagnostic == "All"), aes(x = clinical_test, y = Correlation, color = ROI, fill = ROI, alpha = 0.4)) + geom_col(position = "dodge") + geom_text(aes(label = ifelse(pval.adj < 0.05, "*", "")), color = "black", position = position_dodge(width = 1)) + theme_pubr() + facet_grid(age_correction ~ ., labeller = label_both)

ggplot(filter(Corr_cov, clinical_test == "COGNITIVE_INDEX" | clinical_test == "TMT B-A" | clinical_test == "A7/A5" | clinical_test == "relogio", ROI == "Hemisphere", morphological_parameter == "K"), aes(x = clinical_test, y = Correlation, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) + geom_col(position = "dodge") + geom_text(aes(label = ifelse(pval.adj < 0.05, "*", "")), color = "black", position = position_dodge(width = 1)) + theme_pubr() + facet_grid(age_correction ~ ., labeller = label_both)

ggplot(filter(Corr_cov_filter, clinical_test == "COGNITIVE_INDEX" | clinical_test == "TMT B-A" | clinical_test == "A7/A5" | clinical_test == "relogio", morphological_parameter == "K", Diagnostic == "All"), aes(x = clinical_test, y = Correlation, color = ROI, fill = ROI, alpha = 0.4)) + geom_col(position = "dodge") + geom_text(aes(label = ifelse(pval.adj < 0.05, "*", "")), color = "black", position = position_dodge(width = 1)) + theme_pubr() + facet_grid(age_correction ~ ., labeller = label_both)

ggplot(filter(Corr_cov_filter, clinical_test == "COGNITIVE_INDEX" | clinical_test == "TMT B-A" | clinical_test == "A7/A5" | clinical_test == "relogio", ROI == "Hemisphere", morphological_parameter == "K"), aes(x = clinical_test, y = Correlation, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) + geom_col(position = "dodge") + geom_text(aes(label = ifelse(pval.adj < 0.05, "*", "")), color = "black", position = position_dodge(width = 1)) + theme_pubr() + facet_grid(age_correction ~ ., labeller = label_both)

 
ggplot(filter(Corr_cov, clinical_test == "Lipoxina" | clinical_test == "AB1-40" | clinical_test == "AB1-42" | clinical_test == "TAU" | clinical_test == "AB1_ratio" | clinical_test == "TAU_AB1_42_ratio" | clinical_test == "TAU_AB1_ratio", morphological_parameter == "K", Diagnostic == "All"), aes(x = clinical_test, y = Correlation, color = ROI, fill = ROI, alpha = 0.4)) + geom_col(position = "dodge") + geom_text(aes(label = ifelse(pval.adj < 0.05, "*", "")), color = "black", position = position_dodge(width = 1)) + theme_pubr() + facet_grid(age_correction ~ ., labeller = label_both)

ggplot(filter(Corr_cov, clinical_test == "Lipoxina" | clinical_test == "AB1-40" | clinical_test == "AB1-42" | clinical_test == "TAU" | clinical_test == "AB1_ratio" | clinical_test == "TAU_AB1_42_ratio" | clinical_test == "TAU_AB1_ratio", ROI == "Hemisphere", morphological_parameter == "K"), aes(x = clinical_test, y = Correlation, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) + geom_col(position = "dodge") + geom_text(aes(label = ifelse(pval.adj < 0.05, "*", "")), color = "black", position = position_dodge(width = 1)) + theme_pubr() + facet_grid(age_correction ~ ., labeller = label_both)

  
```

Avg Thickness:
```{r corr Covariance AvgThickness, eval=FALSE, include=FALSE}

filter(Corr_cov_filter, morphological_parameter == "logAvgThickness") %>% kable(digits = 4) %>% kable_styling()
filter(Corr_cov_filter , morphological_parameter == "logAvgThickness", pval.adj < 0.05) %>% kable(digits = 4) %>% kable_styling()


ggplot(filter(Corr_cov, clinical_test == "COGNITIVE_INDEX" | clinical_test == "TMT B-A" | clinical_test == "A7/A5" | clinical_test == "relogio", morphological_parameter == "logAvgThickness", Diagnostic == "All"), aes(x = clinical_test, y = Correlation, color = ROI, fill = ROI, alpha = 0.4)) + geom_col(position = "dodge") + geom_text(aes(label = ifelse(pval.adj < 0.05, "*", "")), color = "black", position = position_dodge(width = 1)) + theme_pubr() + facet_grid(age_correction ~ ., labeller = label_both)

ggplot(filter(Corr_cov, clinical_test == "COGNITIVE_INDEX" | clinical_test == "TMT B-A" | clinical_test == "A7/A5" | clinical_test == "relogio", morphological_parameter == "logAvgThickness", ROI == "Hemisphere"), aes(x = clinical_test, y = Correlation, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) + geom_col(position = "dodge") + geom_text(aes(label = ifelse(pval.adj < 0.05, "*", "")), color = "black", position = position_dodge(width = 1)) + theme_pubr() + facet_grid(age_correction ~ ., labeller = label_both)
 
ggplot(filter(Corr_cov_filter, clinical_test == "COGNITIVE_INDEX" | clinical_test == "TMT B-A" | clinical_test == "A7/A5" | clinical_test == "relogio", morphological_parameter == "logAvgThickness", Diagnostic == "All"), aes(x = clinical_test, y = Correlation, color = ROI, fill = ROI, alpha = 0.4)) + geom_col(position = "dodge") + geom_text(aes(label = ifelse(pval.adj < 0.05, "*", "")), color = "black", position = position_dodge(width = 1)) + theme_pubr() + facet_grid(age_correction ~ ., labeller = label_both)

ggplot(filter(Corr_cov_filter, clinical_test == "COGNITIVE_INDEX" | clinical_test == "TMT B-A" | clinical_test == "A7/A5" | clinical_test == "relogio", morphological_parameter == "logAvgThickness", ROI == "Hemisphere"), aes(x = clinical_test, y = Correlation, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) + geom_col(position = "dodge") + geom_text(aes(label = ifelse(pval.adj < 0.05, "*", "")), color = "black", position = position_dodge(width = 1)) + theme_pubr() + facet_grid(age_correction ~ ., labeller = label_both)
 

ggplot(filter(Corr_cov, clinical_test == "Lipoxina" | clinical_test == "AB1-40" | clinical_test == "AB1-42" | clinical_test == "TAU" | clinical_test == "AB1_ratio" | clinical_test == "TAU_AB1_42_ratio" | clinical_test == "TAU_AB1_ratio" , morphological_parameter == "logAvgThickness", Diagnostic == "All"), aes(x = clinical_test, y = Correlation, color = ROI, fill = ROI, alpha = 0.4)) + geom_col(position = "dodge") + geom_text(aes(label = ifelse(pval.adj < 0.05, "*", "")), color = "black", position = position_dodge(width = 1)) + theme_pubr() + facet_grid(age_correction ~ ., labeller = label_both)

ggplot(filter(Corr_cov, clinical_test == "Lipoxina" | clinical_test == "AB1-40" | clinical_test == "AB1-42" | clinical_test == "TAU" | clinical_test == "AB1_ratio" | clinical_test == "TAU_AB1_42_ratio" | clinical_test == "TAU_AB1_ratio" , morphological_parameter == "logAvgThickness", ROI == "Hemisphere"), aes(x = clinical_test, y = Correlation, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) + geom_col(position = "dodge") + geom_text(aes(label = ifelse(pval.adj < 0.05, "*", "")), color = "black", position = position_dodge(width = 1)) + theme_pubr() + facet_grid(age_correction ~ ., labeller = label_both)

```

S: 
```{r corr Covariance S, eval=FALSE, include=FALSE}

filter(Corr_cov, morphological_parameter == "S") %>% kable(digits = 4) %>% kable_styling()
filter(Corr_cov, morphological_parameter == "S", pval.adj < 0.05) %>% kable(digits = 4) %>% kable_styling()


 ggplot(filter(Corr_cov, clinical_test == "COGNITIVE_INDEX" | clinical_test == "TMT B-A" | clinical_test == "A7/A5" | clinical_test == "relogio", morphological_parameter == "S", Diagnostic == "All"), aes(x = clinical_test, y = Correlation, color = ROI, fill = ROI, alpha = 0.4)) + geom_col(position = "dodge") + geom_text(aes(label = ifelse(pval.adj < 0.05, "*", "")), color = "black", position = position_dodge(width = 1)) + theme_pubr() + facet_grid(age_correction ~ ., labeller = label_both)

 ggplot(filter(Corr_cov, clinical_test == "COGNITIVE_INDEX" | clinical_test == "TMT B-A" | clinical_test == "A7/A5" | clinical_test == "relogio", morphological_parameter == "S", ROI == "Hemisphere"), aes(x = clinical_test, y = Correlation, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) + geom_col(position = "dodge") + geom_text(aes(label = ifelse(pval.adj < 0.05, "*", "")), color = "black", position = position_dodge(width = 1)) + theme_pubr() + facet_grid(age_correction ~ ., labeller = label_both) 
  
  ggplot(filter(Corr_cov, clinical_test == "Lipoxina" | clinical_test == "AB1-40" | clinical_test == "AB1-42" | clinical_test == "TAU" | clinical_test == "AB1_ratio" | clinical_test == "TAU_AB1_42_ratio" | clinical_test == "TAU_AB1_ratio" , morphological_parameter == "S", Diagnostic == "All", ROI == "Hemisphere"), aes(x = clinical_test, y = Correlation, color = ROI, fill = ROI, alpha = 0.4)) + geom_col(position = "dodge") + geom_text(aes(label = ifelse(pval.adj < 0.05, "*", "")), color = "black", position = position_dodge(width = 1)) + theme_pubr() + facet_grid(age_correction ~ ., labeller = label_both)
  
ggplot(filter(Corr_cov, clinical_test == "Lipoxina" | clinical_test == "AB1-40" | clinical_test == "AB1-42" | clinical_test == "TAU" | clinical_test == "AB1_ratio" | clinical_test == "TAU_AB1_42_ratio" | clinical_test == "TAU_AB1_ratio" , morphological_parameter == "S", ROI == "Hemisphere"), aes(x = clinical_test, y = Correlation, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) + geom_col(position = "dodge") + geom_text(aes(label = ifelse(pval.adj < 0.05, "*", "")), color = "black", position = position_dodge(width = 1)) + theme_pubr() + facet_grid(age_correction ~ ., labeller = label_both)
```

I: 
```{r corr Covariance I, eval=FALSE, include=FALSE}

filter(Corr_cov, morphological_parameter == "I") %>% kable(digits = 4) %>% kable_styling()
filter(Corr_cov, morphological_parameter == "I", pval.adj < 0.05) %>% kable(digits = 4) %>% kable_styling()


 ggplot(filter(Corr_cov, clinical_test == "COGNITIVE_INDEX" | clinical_test == "TMT B-A" | clinical_test == "A7/A5" | clinical_test == "relogio", morphological_parameter == "I", Diagnostic == "All"), aes(x = clinical_test, y = Correlation, color = ROI, fill = ROI, alpha = 0.4)) + geom_col(position = "dodge") + geom_text(aes(label = ifelse(pval.adj < 0.05, "*", "")), color = "black", position = position_dodge(width = 1)) + theme_pubr() + facet_grid(age_correction ~ ., labeller = label_both)

 ggplot(filter(Corr_cov, clinical_test == "COGNITIVE_INDEX" | clinical_test == "TMT B-A" | clinical_test == "A7/A5" | clinical_test == "relogio", morphological_parameter == "I", ROI == "Hemisphere"), aes(x = clinical_test, y = Correlation, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) + geom_col(position = "dodge") + geom_text(aes(label = ifelse(pval.adj < 0.05, "*", "")), color = "black", position = position_dodge(width = 1)) + theme_pubr() + facet_grid(age_correction ~ ., labeller = label_both) 
  
  ggplot(filter(Corr_cov, clinical_test == "Lipoxina" | clinical_test == "AB1-40" | clinical_test == "AB1-42" | clinical_test == "TAU" | clinical_test == "AB1_ratio" | clinical_test == "TAU_AB1_42_ratio" | clinical_test == "TAU_AB1_ratio", morphological_parameter == "I" , Diagnostic == "All"), aes(x = clinical_test, y = Correlation, color = ROI, fill = ROI, alpha = 0.4)) + geom_col(position = "dodge") + geom_text(aes(label = ifelse(pval.adj < 0.05, "*", "")), color = "black", position = position_dodge(width = 1)) + theme_pubr() + facet_grid(age_correction ~ ., labeller = label_both)
  
  ggplot(filter(Corr_cov, clinical_test == "Lipoxina" | clinical_test == "AB1-40" | clinical_test == "AB1-42" | clinical_test == "TAU" | clinical_test == "AB1_ratio" | clinical_test == "TAU_AB1_42_ratio" | clinical_test == "TAU_AB1_ratio", morphological_parameter == "I", ROI == "Hemisphere"), aes(x = clinical_test, y = Correlation, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) + geom_col(position = "dodge") + geom_text(aes(label = ifelse(pval.adj < 0.05, "*", "")), color = "black", position = position_dodge(width = 1)) + theme_pubr() + facet_grid(age_correction ~ ., labeller = label_both)
  
```


### clinical data - ancova

```{r clinical data - ancova, echo=TRUE, message=FALSE, warning=FALSE, paged.print=TRUE}

ggplot(data = dados_hemi_v1_CH, aes(K, COGNITIVE_INDEX, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_point() + stat_cor() + 
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + labs(caption = paste("Global, N = ", n_distinct(filter(dados_hemi_v1_CH, !is.na(COGNITIVE_INDEX))$SUBJ)))

model1.0 <- lm(COGNITIVE_INDEX ~ K, data = dados_hemi_v1_CH)
summary(model1.0)

model1.1 <- lm(COGNITIVE_INDEX ~ K*Diagnostic*Age*ESC, data = dados_hemi_v1_CH)
Anova(model1.1, type="II") %>% kable(digits = 4) %>% kable_styling()
model1.2 <- lm(COGNITIVE_INDEX ~ K + Diagnostic + Age + ESC, data = dados_hemi_v1_CH)
Anova(model1.2, type="II") %>% kable(digits = 4) %>% kable_styling()
summary(model1.2)


hist(residuals(model1.2),
     col="darkgray")
plot(fitted(model1.2),
     residuals(model1.2))

anova(model1.1,model1.2) %>% kable(digits = 4) %>% kable_styling()
etaSquared(model1.2) %>% kable(digits = 4) %>% kable_styling()


ggplot(data = dados_lobos_v1_F, aes(K_corrected, `TMT B-A`, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_point() + stat_cor() + 
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + labs(caption = paste("Lobo frontal, N = ", n_distinct(filter(dados_lobos_v1_F, !is.na(`TMT B-A`))$SUBJ)))

model2.0 <- lm(`TMT B-A` ~ K_corrected, data = dados_lobos_v1_F)
summary(model2.0)


model2.1 <- lm(`TMT B-A` ~ K_corrected*Diagnostic*Age*ESC, data = dados_lobos_v1_F)
Anova(model2.1, type="II") %>% kable(digits = 4) %>% kable_styling()
model2.2 <- lm(`TMT B-A` ~ K_corrected + Diagnostic + Age + ESC, data = dados_lobos_v1_F)
Anova(model2.2, type="II") %>% kable(digits = 4) %>% kable_styling()
summary(model2.2)

hist(residuals(model2.2),
     col="darkgray")
plot(fitted(model2.2),
     residuals(model2.2))


anova(model2.1,model2.2) %>% kable(digits = 4) %>% kable_styling()
etaSquared(model2.2) %>% kable(digits = 4) %>% kable_styling()

ggplot(data = dados_lobos_v1_T, aes(K_corrected, `A7/A5`, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_point() + stat_cor() + 
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + labs(caption = paste("Lobo temporal, N = ", n_distinct(filter(dados_lobos_v1_T, !is.na(`A7/A5`))$SUBJ)))

model3.0 <- lm(`A7/A5` ~ K_corrected, data = dados_lobos_v1_T)
summary(model3.0)

model3.1 <- lm(`A7/A5` ~ K_corrected*Diagnostic*Age*ESC, data = dados_lobos_v1_T)
Anova(model3.1, type="II") %>% kable(digits = 4) %>% kable_styling()

model3.2 <- lm(`A7/A5` ~ K_corrected + Diagnostic + Age + ESC, data = dados_lobos_v1_T)
Anova(model3.2, type="II") %>% kable(digits = 4) %>% kable_styling()
summary(model3.2)


hist(residuals(model3.2),
     col="darkgray")
plot(fitted(model3.2),
     residuals(model3.2))


anova(model3.1,model3.2) %>% kable(digits = 4) %>% kable_styling()
etaSquared(model3.2) %>% kable(digits = 4) %>% kable_styling()


ggplot(data = dados_lobos_v1_F, aes(K_corrected, relogio, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_point() + stat_cor() + 
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + labs(caption = paste("Lobo frontal, N = ", n_distinct(filter(dados_lobos_v1_F, !is.na(relogio))$SUBJ)))

model4.0 <- lm(relogio ~ K_corrected, data = dados_lobos_v1_F)
summary(model4.0)

model4.1<- lm(relogio ~ K_corrected*Diagnostic*Age*ESC, data = dados_lobos_v1_F)
Anova(model4.1, type="II") %>% kable(digits = 4) %>% kable_styling()

model4.2 <- lm(relogio ~ K_corrected + Diagnostic + Age + ESC, data = dados_lobos_v1_F)
Anova(model4.2, type="II") %>% kable(digits = 4) %>% kable_styling()
summary(model4.2)


hist(residuals(model4.2),
     col="darkgray")
plot(fitted(model4.2),
     residuals(model4.2))

anova(model4.1,model4.2) %>% kable(digits = 4) %>% kable_styling()
etaSquared(model4.2) %>% kable(digits = 4) %>% kable_styling()

ggplot(data = dados_lobos_v1_O, aes(K_corrected, relogio, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_point() + stat_cor() + 
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + labs(caption = paste("Lobo ocipital, N = ", n_distinct(filter(dados_lobos_v1_O, !is.na(relogio))$SUBJ)))

model4.0.1 <- lm(relogio ~ K_corrected, data = dados_lobos_v1_O)
summary(model4.0.1)
cor.test(y = dados_lobos_v1_O$relogio, x = dados_lobos_v1_O$K_corrected, use = "pairwise.complete.obs", method = "pearson")
cov(y = dados_lobos_v1_O$relogio, x = dados_lobos_v1_O$K_corrected, use = "pairwise.complete.obs", method = "pearson")

model4.3 <- lm(relogio ~ K_corrected *Diagnostic*Age*ESC, data = dados_lobos_v1_O)
Anova(model4.3, type="II") %>% kable(digits = 4) %>% kable_styling()

model4.4 <- lm(relogio ~ K_corrected  + Diagnostic + Age + ESC, data = dados_lobos_v1_O)
Anova(model4.4, type="II") %>% kable(digits = 4) %>% kable_styling()
summary(model4.4)

hist(residuals(model4.4),
     col="darkgray")
plot(fitted(model4.4),
     residuals(model4.4))

anova(model4.3,model4.4) %>% kable(digits = 4) %>% kable_styling()
etaSquared(model4.4) %>% kable(digits = 4) %>% kable_styling()

ggplot(data = dados_lobos_v1_P, aes(K_corrected, relogio, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_point() + stat_cor() + 
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + labs(caption = paste("Lobo parietal, N = ", n_distinct(filter(dados_lobos_v1_P, !is.na(relogio))$SUBJ)))

model4.0.2 <- lm(relogio ~ K_corrected, data = dados_lobos_v1_P)
summary(model4.0.2)
cor.test(y = dados_lobos_v1_P$relogio, x = dados_lobos_v1_P$K_corrected, use = "pairwise.complete.obs", method = "pearson")
cov(y = dados_lobos_v1_P$relogio, x = dados_lobos_v1_P$K_corrected, use = "pairwise.complete.obs", method = "pearson")

model4.5 <- lm(relogio ~ K_corrected*Diagnostic*Age*ESC, data = dados_lobos_v1_P)
Anova(model4.5, type="II") %>% kable(digits = 4) %>% kable_styling()

model4.6 <- lm(relogio ~ K_corrected + Diagnostic + Age + ESC, data = dados_lobos_v1_P)
Anova(model4.6, type="II") %>% kable(digits = 4) %>% kable_styling()
summary(model4.6) 

hist(residuals(model4.6),
     col="darkgray")
plot(fitted(model4.6),
     residuals(model4.6))

anova(model4.5,model4.6) %>% kable(digits = 4) %>% kable_styling()
etaSquared(model4.6) %>% kable(digits = 4) %>% kable_styling()

ggplot(data = dados_lobos_v1_F, aes(K_corrected, `DIGIT SPAN BACK`, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_point() + stat_cor() + 
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + labs(caption = paste("Lobo frontal, N = ", n_distinct(filter(dados_lobos_v1_F, !is.na(`DIGIT SPAN BACK`))$SUBJ)))

model5.0 <- lm(`DIGIT SPAN BACK` ~ K_corrected, data = dados_lobos_v1_F)
summary(model5.0)
cor.test(y = dados_lobos_v1_F$`DIGIT SPAN BACK`, x = dados_lobos_v1_F$K_corrected, use = "pairwise.complete.obs", method = "pearson")
cov(y = dados_lobos_v1_F$`DIGIT SPAN BACK`, x = dados_lobos_v1_F$K_corrected, use = "pairwise.complete.obs", method = "pearson")

model5.1 <- lm(`DIGIT SPAN BACK` ~ K_corrected *Diagnostic*Age*ESC, data = dados_lobos_v1_F)
Anova(model5.1, type="II") %>% kable(digits = 4) %>% kable_styling()

model5.2 <- lm(`DIGIT SPAN BACK` ~ K_corrected + Diagnostic + Age + ESC, data = dados_lobos_v1_F)
Anova(model5.2, type="II") %>% kable(digits = 4) %>% kable_styling()
summary(model5.2)


hist(residuals(model5.2),
     col="darkgray")
plot(fitted(model5.2),
     residuals(model5.2))

anova(model5.1,model5.2) %>% kable(digits = 4) %>% kable_styling()
etaSquared(model5.2) %>% kable(digits = 4) %>% kable_styling()


ggplot(data = dados_hemi_v1_CH, aes(K, Lipoxina, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_point() + stat_cor() + 
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + labs(caption = paste("N = ", n_distinct(filter(dados_hemi_v1_CH,  !is.na(Lipoxina))$SUBJ)))

model6.0 <- lm(Lipoxina ~ K, data = dados_hemi_v1_CH)
summary(model6.0)

model6.1 <- lm(Lipoxina ~ K*Diagnostic*Age*ESC, data = dados_hemi_v1_CH)
Anova(model6.1, type="II") %>% kable(digits = 4) %>% kable_styling()

model6.2 <- lm(Lipoxina ~ K+ Diagnostic + Age + ESC, data = dados_hemi_v1_CH)
Anova(model6.2, type="II") %>% kable(digits = 4) %>% kable_styling()
summary(model6.2)

hist(residuals(model6.2),
     col="darkgray")
plot(fitted(model6.2),
     residuals(model6.2))

anova(model6.1,model6.2) %>% kable(digits = 4) %>% kable_styling()
etaSquared(model6.2) %>% kable(digits = 4) %>% kable_styling()


ggplot(data = dados_hemi_v1_CH, aes(K, `AB1-40`, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_point() + stat_cor() + 
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + labs(caption = paste("N = ", n_distinct(filter(dados_hemi_v1_CH,  !is.na(`AB1-40`))$SUBJ)))

model7.0 <- lm(`AB1-40` ~ K, data = dados_hemi_v1_CH)
summary(model7.0)


model7.1 <- lm(K ~ `AB1-40`*Diagnostic*Age*ESC, data = dados_hemi_v1_CH)
Anova(model7.1, type="II") %>% kable(digits = 4) %>% kable_styling()

model7.2 <- lm(K ~ `AB1-40` + Diagnostic + Age + ESC, data = dados_hemi_v1_CH)
Anova(model7.2, type="II") %>% kable(digits = 4) %>% kable_styling()
summary(model7.2) 

hist(residuals(model7.2),
     col="darkgray")
plot(fitted(model7.2),
     residuals(model7.2))

anova(model7.1,model7.2) %>% kable(digits = 4) %>% kable_styling()
etaSquared(model7.2) %>% kable(digits = 4) %>% kable_styling()


ggplot(data = dados_hemi_v1_CH, aes(K, `AB1-42`, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_point() + stat_cor() + 
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + labs(caption = paste("N = ", n_distinct(filter(dados_hemi_v1_CH,  !is.na(`AB1-42`))$SUBJ)))

model8.0 <- lm(`AB1-42` ~ K, data = dados_hemi_v1_CH)
summary(model8.0)


model8.1 <- lm(`AB1-42` ~ K*Diagnostic*Age*ESC, data = dados_hemi_v1_CH)
Anova(model8.1, type="II") %>% kable(digits = 4) %>% kable_styling()

model8.2 <- lm(`AB1-42` ~ K + Diagnostic + Age + ESC, data = dados_hemi_v1_CH)
Anova(model8.2, type="II") %>% kable(digits = 4) %>% kable_styling()
summary(model8.2)

hist(residuals(model8.2),
     col="darkgray")
plot(fitted(model8.2),
     residuals(model8.2))

anova(model8.1,model8.2) %>% kable(digits = 4) %>% kable_styling()
etaSquared(model8.2) %>% kable(digits = 4) %>% kable_styling()

ggplot(data = dados_hemi_v1_CH, aes(K, TAU, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_point() + stat_cor() + 
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + labs(caption = paste("N = ", n_distinct(filter(dados_hemi_v1_CH,  !is.na(TAU))$SUBJ)))

model9.0 <- lm(TAU ~ K, data = dados_hemi_v1_CH)
summary(model9.0)


model9.1 <- lm(TAU ~ K*Diagnostic*Age*ESC, data = dados_hemi_v1_CH)
Anova(model9.1, type="II") %>% kable(digits = 4) %>% kable_styling()

model9.2 <- lm(TAU ~ K+ Diagnostic + Age + ESC, data = dados_hemi_v1_CH)
Anova(model9.2, type="II") %>% kable(digits = 4) %>% kable_styling()
summary(model9.2)


hist(residuals(model9.2),
     col="darkgray")
plot(fitted(model9.2),
     residuals(model9.2))

anova(model9.1,model9.2) %>% kable(digits = 4) %>% kable_styling()
etaSquared(model9.2) %>% kable(digits = 4) %>% kable_styling()


ggplot(data = dados_hemi_v1_CH, aes(K_corrected, AB1_ratio, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_point() + stat_cor() + 
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + labs(caption = paste("N = ", n_distinct(filter(dados_hemi_v1_CH,  !is.na(AB1_ratio))$SUBJ)))

model10.0 <- lm(AB1_ratio ~ K, data = dados_hemi_v1_CH)
summary(model10.0)


model10.1 <- lm(AB1_ratio ~ K_corrected*Diagnostic*Age*ESC, data = dados_hemi_v1_CH)
Anova(model10.1, type="II") %>% kable(digits = 4) %>% kable_styling()

model10.2 <- lm(AB1_ratio ~ K_corrected + Diagnostic + Age + ESC, data = dados_hemi_v1_CH)
Anova(model10.2, type="II") %>% kable(digits = 4) %>% kable_styling()
summary(model10.2)


hist(residuals(model10.2),
     col="darkgray")
plot(fitted(model10.2),
     residuals(model10.2))

anova(model10.1,model10.2) %>% kable(digits = 4) %>% kable_styling()
etaSquared(model10.2) %>% kable(digits = 4) %>% kable_styling()


ggplot(data = dados_hemi_v1_CH, aes(K, TAU_AB1_42_ratio, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_point() + stat_cor() + 
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + labs(caption = paste("N = ", n_distinct(filter(dados_hemi_v1_CH,  !is.na(TAU_AB1_42_ratio))$SUBJ)))

model11.0 <- lm(TAU_AB1_42_ratio ~ K, data = dados_hemi_v1_CH)
summary(model11.0)


model11.1 <- lm(TAU_AB1_42_ratio ~ K*Diagnostic*Age*ESC, data = dados_hemi_v1_CH)
Anova(model11.1, type="II") %>% kable(digits = 4) %>% kable_styling()

model11.2 <- lm(TAU_AB1_42_ratio ~ K + Diagnostic + Age + ESC, data = dados_hemi_v1_CH)
Anova(model11.1, type="II") %>% kable(digits = 4) %>% kable_styling()
summary(model11.2)

hist(residuals(model11.2),
     col="darkgray")
plot(fitted(model11.2),
     residuals(model11.2))

anova(model11.1,model11.2) %>% kable(digits = 4) %>% kable_styling()
etaSquared(model11.2) %>% kable(digits = 4) %>% kable_styling()


ggplot(data = dados_hemi_v1_CH, aes(K, TAU_AB1_ratio, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_point() + stat_cor() + 
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + labs(caption = paste("N = ", n_distinct(filter(dados_hemi_v1_CH,  !is.na(TAU_AB1_ratio))$SUBJ)))

model11.0 <- lm(TAU_AB1_ratio ~ K, data = dados_hemi_v1_CH)
summary(model11.0)

model12.1 <- lm(TAU_AB1_ratio ~ K*Diagnostic*Age*ESC, data = dados_hemi_v1_CH)
Anova(model12.1, type="II") %>% kable(digits = 4) %>% kable_styling()

model12.2 <- lm(TAU_AB1_ratio ~ K + Diagnostic + Age + ESC, data = dados_hemi_v1_CH)
Anova(model12.2, type="II") %>% kable(digits = 4) %>% kable_styling()
summary(model12.2)


hist(residuals(model12.2),
     col="darkgray")
plot(fitted(model12.2),
     residuals(model12.2))


anova(model12.1,model12.2) %>% kable(digits = 4) %>% kable_styling()
etaSquared(model12.2) %>% kable(digits = 4) %>% kable_styling()


```

### clinical data -focused analysis ----

```{r clinical data -focused analysis, eval=FALSE, message=FALSE, warning=FALSE, include=FALSE, paged.print=FALSE}

lm1 <- lm(K_corrected ~ COGNITIVE_INDEX, data = filter(dados_lobos_v1, ROI == "F"), na.action = na.omit)
augment <- augment(lm1)
summary(lm1)

ggplot(data = filter(dados_lobos_v1, ROI == "F"), aes(K_corrected, COGNITIVE_INDEX, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_point() + stat_cor() + 
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + labs(caption = paste("N = ", n_distinct(filter(dados_hemi_v1_CH, TAU_AB1_ratio != 0 | !is.na(TAU_AB1_ratio))$SUBJ)))


# dados_lobos_v1$COGNITIVE_INDEX <- as.factor(dados_lobos_v1$COGNITIVE_INDEX)
# dados_lobos_v1$ESC <- as.factor(dados_lobos_v1$ESC)
# dados_lobos_v1$Age <- as.factor(dados_lobos_v1$Age)

lmm1 <- lmer(K_corrected ~ COGNITIVE_INDEX + ESC + Age + Diagnostic + (1 | Diagnostic), data = filter(dados_lobos_v1, ROI == "F"),
    REML = FALSE)
summary(lmm1)
Anova(lmm1) %>% kable(digits = 4) %>% kable_styling()

# dados_lobos_v1$COGNITIVE_INDEX <- as.factor(dados_lobos_v1$COGNITIVE_INDEX)
# dados_lobos_v1$ESC <- as.factor(dados_lobos_v1$ESC)
# dados_lobos_v1$Age <- as.factor(dados_lobos_v1$Age)

lm2 <- lm(K_corrected ~ `TMT B-A`, data = filter(dados_lobos_v1, ROI == "F"), na.action = na.omit)
augment <- augment(lm2)
summary(lm2)

ggplot(data = filter(dados_lobos_v1, ROI == "F"), aes(K_corrected, `TMT B-A`, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_point() + stat_cor() + 
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + labs(caption = paste("N = ", n_distinct(filter(dados_hemi_v1_CH, TAU_AB1_ratio != 0 | !is.na(TAU_AB1_ratio))$SUBJ)))

lmm2 <- lmer(K_corrected ~ `TMT B-A` + ESC + Age + Diagnostic + (1 | Diagnostic), data = filter(dados_lobos_v1, ROI == "F"),
    REML = FALSE)
summary(lmm2)
Anova(lmm2) %>% kable(digits = 4) %>% kable_styling()

lm3 <- lm(K_corrected ~ `A7/A5`, data = filter(dados_lobos_v1, ROI == "T"), na.action = na.omit)
augment <- augment(lm3)
summary(lm3)

ggplot(data = filter(dados_lobos_v1, ROI == "T"), aes(K_corrected, `A7/A5`, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_point() + stat_cor() + 
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + labs(caption = paste("N = ", n_distinct(filter(dados_hemi_v1_CH, TAU_AB1_ratio != 0 | !is.na(TAU_AB1_ratio))$SUBJ)))

lmm3 <- lmer(K_corrected ~ `A7/A5` + ESC + Age + Diagnostic + (1 | Diagnostic), data = filter(dados_lobos_v1, ROI == "T"),
    REML = FALSE)
summary(lmm3)
Anova(lmm3) %>% kable(digits = 4) %>% kable_styling()


lm4 <- lm(K_corrected ~ relogio, data = filter(dados_lobos_v1, ROI == "T"), na.action = na.omit)
augment <- augment(lm4)
summary(lm4)

ggplot(data = filter(dados_lobos_v1, ROI == "T"), aes(K_corrected, relogio, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_point() + stat_cor() + 
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + labs(caption = paste("N = ", n_distinct(filter(dados_hemi_v1_CH, TAU_AB1_ratio != 0 | !is.na(TAU_AB1_ratio))$SUBJ)))

lmm4 <- lmer(K_corrected ~ relogio + ESC + Age + Diagnostic + (1 | Diagnostic), data = filter(dados_lobos_v1, ROI == "T"),
    REML = FALSE)
summary(lmm4)
Anova(lmm4) %>% kable(digits = 4) %>% kable_styling()

lm5 <- lm(K_corrected ~ `DIGIT SPAN BACK`, data = filter(dados_lobos_v1, ROI == "T"), na.action = na.omit)
augment <- augment(lm5)
summary(lm5)

ggplot(data = filter(dados_lobos_v1, ROI == "T"), aes(K_corrected, `DIGIT SPAN BACK`, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_point() + stat_cor() + 
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + labs(caption = paste("N = ", n_distinct(filter(dados_hemi_v1_CH, TAU_AB1_ratio != 0 | !is.na(TAU_AB1_ratio))$SUBJ)))

lmm5 <- lmer(K_corrected ~ `DIGIT SPAN BACK` + ESC + Age + Diagnostic +  (1 | Diagnostic), data = filter(dados_lobos_v1, ROI == "T"),
    REML = FALSE)
summary(lmm5)
Anova(lmm5) %>% kable(digits = 4) %>% kable_styling()
```


### and age

```{r clincal data and age, echo=FALSE}

ggplot(data = filter(dados_hemi_v1_CH, Lipoxina != 0 | !is.na(Lipoxina), Diagnostic == "CTL"), aes(Age, log10(Lipoxina), color = Diagnostic, fill = Diagnostic)) +
  geom_point() + stat_cor() + 
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + labs(caption = paste("N = ", n_distinct(filter(dados_hemi_v1_CH, Lipoxina != 0 | !is.na(Lipoxina))$SUBJ))) 

ggplot(data = filter(dados_hemi_v1_CH, MMSE != 0 | !is.na(MMSE), Diagnostic == "CTL"), aes(Age, log10(MMSE), color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_point() + stat_cor() + 
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + labs(caption = paste("N = ", n_distinct(filter(dados_hemi_v1_CH, MMSE != 0 | !is.na(MMSE))$SUBJ)))

ggplot(data = filter(dados_hemi_v1_CH, `A7/A5` != 0 | !is.na(`A7/A5`), Diagnostic == "CTL"), aes(Age, log10(`A7/A5`),color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_point() + stat_cor() + 
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + labs(caption = paste("N = ", n_distinct(filter(dados_hemi_v1_CH, `A7/A5` != 0 | !is.na(`A7/A5`))$SUBJ)))

ggplot(data = filter(dados_hemi_v1_CH, `TMT B-A` != 0 | !is.na(`TMT B-A`), Diagnostic == "CTL"), aes(Age, log10(`TMT B-A`), color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_point() + stat_cor() + 
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + labs(caption = paste("N = ", n_distinct(filter(dados_hemi_v1_CH, `TMT B-A` != 0 | !is.na(`TMT B-A`))$SUBJ)))

ggplot(data = filter(dados_hemi_v1_CH, relogio != 0 | !is.na(relogio), Diagnostic == "CTL"), aes(Age, log10(relogio), color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_point() + stat_cor() + 
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + labs(caption = paste("N = ", n_distinct(filter(dados_hemi_v1_CH, relogio != 0 | !is.na(relogio))$SUBJ)))

ggplot(data = filter(dados_hemi_v1_CH, `DIGIT SPAN BACK` != 0 | !is.na(`DIGIT SPAN BACK`), Diagnostic == "CTL"), aes(Age, log10(`DIGIT SPAN BACK`), color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_point() + stat_cor() + 
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + labs(caption = paste("N = ", n_distinct(filter(dados_hemi_v1_CH, `DIGIT SPAN BACK` != 0 | !is.na(`DIGIT SPAN BACK`))$SUBJ)))

ggplot(data = filter(dados_hemi_v1_CH, `AB1-40` != 0 | !is.na(`AB1-40`), Diagnostic == "CTL"), aes(Age, log10(`AB1-40`), color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_point() + stat_cor() + 
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + labs(caption = paste("N = ", n_distinct(filter(dados_hemi_v1_CH, `AB1-40` != 0 | !is.na(`AB1-40`))$SUBJ)))

ggplot(data = filter(dados_hemi_v1_CH, `AB1-42` != 0 | !is.na(`AB1-42`), Diagnostic == "CTL"), aes(Age, log10(`AB1-42`), color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_point() + stat_cor() + 
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + labs(caption = paste("N = ", n_distinct(filter(dados_hemi_v1_CH, `AB1-42` != 0 | !is.na(`AB1-42`))$SUBJ)))

ggplot(data = filter(dados_hemi_v1_CH, TAU != 0 | !is.na(TAU), Diagnostic == "CTL"), aes(Age, log10(TAU), Age, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_point() + stat_cor() + 
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + labs(caption = paste("N = ", n_distinct(filter(dados_hemi_v1_CH, TAU != 0 | !is.na(TAU))$SUBJ)))

ggplot(data = filter(dados_hemi_v1_CH, AB1_ratio != 0 | !is.na(AB1_ratio), Diagnostic == "CTL"), aes(Age, log10(AB1_ratio), color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_point() + stat_cor() + 
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + labs(caption = paste("N = ", n_distinct(filter(dados_hemi_v1_CH, AB1_ratio != 0 | !is.na(AB1_ratio))$SUBJ)))

ggplot(data = filter(dados_hemi_v1_CH, TAU_AB1_42_ratio != 0 | !is.na(TAU_AB1_42_ratio), Diagnostic == "CTL"), aes(Age, log10(TAU_AB1_42_ratio), color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_point() + stat_cor() + 
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + labs(caption = paste("N = ", n_distinct(filter(dados_hemi_v1_CH, TAU_AB1_42_ratio != 0 | !is.na(TAU_AB1_42_ratio))$SUBJ)))

ggplot(data = filter(dados_hemi_v1_CH, TAU_AB1_ratio != 0 | !is.na(TAU_AB1_ratio), Diagnostic == "CTL"), aes(Age, log10(TAU_AB1_ratio), color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_point() + stat_cor() + 
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + labs(caption = paste("N = ", n_distinct(filter(dados_hemi_v1_CH, TAU_AB1_ratio != 0 | !is.na(TAU_AB1_ratio))$SUBJ)))
```

### deaging

```{r clincal data - deaging, eval=FALSE, include=FALSE}

ggplot(data = filter(dados_hemi_v1_CH, Lipoxina != 0 | !is.na(Lipoxina)), aes(logLipoxina_age_decay, K_age_decay, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_point() + stat_cor() + 
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + labs(caption = paste("N = ", n_distinct(filter(dados_hemi_v1_CH, Lipoxina != 0 | !is.na(Lipoxina))$SUBJ))) 

ggplot(data = filter(dados_hemi_v1_CH, MMSE != 0 | !is.na(MMSE)), aes(logMMSE_age_decay, K_age_decay, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_point() + stat_cor() + 
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + labs(caption = paste("N = ", n_distinct(filter(dados_hemi_v1_CH, MMSE != 0 | !is.na(MMSE))$SUBJ)))

```

### normalizado

```{r clinical data - normalizado, eval=FALSE, message=FALSE, warning=FALSE, include=FALSE}
ggplot(data = filter(dados_hemi_v1_CH, MMSE != 0 | !is.na(MMSE)), aes(logMMSE_age_decay, K_age_decay, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_point() + stat_cor() + 
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() + labs(caption = paste("N = ", n_distinct(filter(dados_hemi_v1_CH, MMSE != 0 | !is.na(MMSE))$SUBJ)))
```

## Escolaridade

```{r escolaridade}

dados_hemi_v1_CH_ESC <- dados_hemi_v1_CH %>% 
  pivot_longer(c(K, K_age_decay, logAvgThickness, logAvgThickness_age_decay, S, S_age_decay, I, I_age_decay), names_to = "morphological_parameter", values_to = "morphological_parameter_value")

ggplot(data = dados_hemi_v1_CH, aes(x = ESC, y = K, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) + 
  geom_point() + geom_smooth(method = "lm") + theme_pubr()

ggplot(data = dados_hemi_v1_CH, aes(x = ESC, y = K_age_decay, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) + 
  geom_point() + geom_smooth(method = "lm") + theme_pubr()

ggplot(data = dados_hemi_v1_CH, aes(x = ESC, y = logAvgThickness, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) + 
  geom_point() + geom_smooth(method = "lm") + theme_pubr()

ggplot(data = dados_hemi_v1_CH, aes(x = ESC, y = logAvgThickness_age_decay, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) + 
  geom_point() + geom_smooth(method = "lm") + theme_pubr()

corr_cov_esc <- dados_hemi_v1_CH_ESC %>%
  group_by(morphological_parameter) %>%
  summarise(
    Correlation = cor.test(morphological_parameter_value, ESC, use = "pairwise.complete.obs", method = "pearson")$estimate,
    pvalue = cor.test(morphological_parameter_value, ESC, use = "pairwise.complete.obs", method = "pearson")$p.value,
    Covariance = cov(morphological_parameter_value, ESC, use = "pairwise.complete.obs", method = "pearson")
  ) %>% mutate(Diagnostic = "All", ROI = "Hemisphere", age_correction = ifelse(str_detect(morphological_parameter, "_age_decay", negate = FALSE),"yes","no"))

corr_cov_esc %>% group_by(morphological_parameter) %>% mutate(pval.adj = p.adjust (pvalue, method='bonferroni')) %>% kable(digits = 4) %>% kable_styling()


corr_cov_esc$morphological_parameter[corr_cov_esc$morphological_parameter == "K_age_decay"] <- "K"
corr_cov_esc$morphological_parameter[corr_cov_esc$morphological_parameter == "I_age_decay"] <- "I"
corr_cov_esc$morphological_parameter[corr_cov_esc$morphological_parameter == "S_age_decay"] <- "S"
corr_cov_esc$morphological_parameter[corr_cov_esc$morphological_parameter == "S_age_decay"] <- "S"
corr_cov_esc$morphological_parameter[corr_cov_esc$morphological_parameter == "logAvgThickness_age_decay"] <- "logAvgThickness"

corr_cov_esc_diag <- dados_hemi_v1_CH_ESC %>%
  group_by(morphological_parameter, Diagnostic) %>%
  summarise(
    Correlation = cor.test(morphological_parameter_value, ESC, use = "pairwise.complete.obs", method = "pearson")$estimate,
    pvalue = cor.test(morphological_parameter_value, ESC, use = "pairwise.complete.obs", method = "pearson")$p.value,
    Covariance = cov(morphological_parameter_value, ESC, use = "pairwise.complete.obs", method = "pearson")
  ) %>% mutate(ROI = "Hemisphere", age_correction = ifelse(str_detect(morphological_parameter, "_age_decay", negate = FALSE),"yes","no"))  


corr_cov_esc_diag$morphological_parameter[corr_cov_esc_diag$morphological_parameter == "K_age_decay"] <- "K"
corr_cov_esc_diag$morphological_parameter[corr_cov_esc_diag$morphological_parameter == "I_age_decay"] <- "I"
corr_cov_esc_diag$morphological_parameter[corr_cov_esc_diag$morphological_parameter == "S_age_decay"] <- "S"
corr_cov_esc_diag$morphological_parameter[corr_cov_esc_diag$morphological_parameter == "S_age_decay"] <- "S"
corr_cov_esc_diag$morphological_parameter[corr_cov_esc_diag$morphological_parameter == "logAvgThickness_age_decay"] <- "logAvgThickness"

corr_cov_esc_diag %>% group_by(morphological_parameter) %>% mutate(pval.adj = p.adjust (pvalue, method='bonferroni')) %>% kable(digits = 4) %>% kable_styling()

```



# ESTATISTICA ----

## verificacao da normalidade ----

```{r eval=FALSE, include=FALSE}
lm <- lm(1/2 * logAvgThickness + logTotalArea ~ logExposedArea, data = dados_hemi_v1_CH, na.action = na.omit)
augment <- augment(lm)

shapiro.test(augment$.resid)

ggplot(data = augment, aes(.resid, alpha = 0.4)) +
geom_density() +
  theme_pubr()

```

## modelo multinomial

```{r glm, echo=TRUE, message=FALSE, warning=FALSE}
require(foreign)
require(nnet)
require(ggplot2)
require(reshape2)
library(stargazer)
require(betareg)

dados_hemi_v1_CH$Diagnostic <- factor(dados_hemi_v1_CH$Diagnostic, levels = c("AD", "MCI","CTL"))
#dados_hemi_v1_CH$Diagnostic <- relevel(dados_hemi_v1_CH$Diagnostic, "CTL")

set.seed(0)

N_diag <- dados_hemi_v1_CH %>% dplyr::select(SUBJ, Diagnostic) %>% unique() %>% group_by(Diagnostic) %>% summarise(n_DIAG = n_distinct(SUBJ))

dados_hemi_v1_CH_filter <- dados_hemi_v1_CH %>% dplyr::select(SUBJ, Diagnostic) %>% unique()

N_CTL <- as.double(floor(N_diag[3,2]*0.8))
N_CCL <- as.double(round(N_diag[2,2]*0.8))
N_ALZ <- as.double(round(N_diag[1,2]*0.8))

test.samples <- c(sample(which(dados_hemi_v1_CH_filter$Diagnostic == "AD"), N_ALZ), sample(which(dados_hemi_v1_CH_filter$Diagnostic == "CTL"), N_CTL), sample(which(dados_hemi_v1_CH_filter$Diagnostic == "MCI"), N_CCL))
subj.training <- as_tibble(dados_hemi_v1_CH_filter[-test.samples, ]$SUBJ)

colnames(subj.training) <- c("SUBJ")

# filter(dados_hemi_v1_CH, SUBJ == subj.training)

train.data <- anti_join(dados_hemi_v1_CH, subj.training)
test.data <- semi_join(dados_hemi_v1_CH, subj.training)

#train.data  <- dados_hemi_v1_CH[-test.samples, ]
#test.data <- dados_hemi_v1_CH[test.samples, ]

caret::featurePlot(x = dados_hemi_v1_CH[, c("K", "logAvgThickness", "K_age_decay", "logAvgThickness_age_decay")], y = dados_hemi_v1_CH$Diagnostic, plot = "box", scales = list(y = list(relation = "free"), x = list(rot = 90)), layout = c(4, 1))

caret::featurePlot(x = dados_hemi_v1_CH[, c("K", "I", "S")], y = dados_hemi_v1_CH$Diagnostic, plot = "box", scales = list(y = list(relation = "free"), x = list(rot = 90)), layout = c(3,1))
caret::featurePlot(x = dados_hemi_v1_CH[, c("K_age_decay", "I_age_decay", "S_age_decay")], y = dados_hemi_v1_CH$Diagnostic, plot = "box", scales = list(y = list(relation = "free"), x = list(rot = 90)), layout = c(3,1))

print(n_distinct(dados_hemi_v1_CH$SUBJ))
print(n_distinct(train.data$SUBJ))
print(n_distinct(test.data$SUBJ))


ggplot(dados_hemi_v1_CH, aes(x = Diagnostic, y = K, color = Diagnostic, fill = Diagnostic)) +
geom_violin(trim = FALSE, alpha = 0.4) + geom_jitter() + 
theme_pubr() + stat_compare_means(method = "anova") + labs(caption = paste("N = ", n_distinct(filter(dados_hemi_v1_CH, !is.na(K))$SUBJ))) 

#aov1 <- aov(K ~ Diagnostic, dados_hemi_v1_CH)
#TukeyHSD(aov1)

ggplot(dados_hemi_v1_CH, aes(x = Diagnostic, y = K_age_decay, color = Diagnostic, fill = Diagnostic)) +
geom_violin(trim = FALSE, alpha = 0.4) + geom_jitter() + 
theme_pubr() + stat_compare_means(method = "anova")  + labs(caption = paste("N = ", n_distinct(filter(dados_hemi_v1_CH, !is.na(K_age_decay))$SUBJ))) 

#aov2 <- aov(K_age_decay ~ Diagnostic, dados_hemi_v1_CH)
#TukeyHSD(aov2)

ggplot(dados_hemi_v1_CH, aes(x = Diagnostic, y = logAvgThickness, color = Diagnostic, fill = Diagnostic)) +
geom_violin(trim = FALSE, alpha = 0.4) + geom_jitter() + 
theme_pubr() + stat_compare_means(method = "anova") + labs(caption = paste("N = ", n_distinct(filter(dados_hemi_v1_CH, !is.na(logAvgThickness))$SUBJ))) 

#aov3 <- aov(logAvgThickness ~ Diagnostic, dados_hemi_v1_CH)
#TukeyHSD(aov3)

ggplot(dados_hemi_v1_CH, aes(x = Diagnostic, y = logAvgThickness_age_decay, color = Diagnostic, fill = Diagnostic)) +
geom_violin(trim = FALSE, alpha = 0.4) + geom_jitter() + 
theme_pubr() + stat_compare_means(method = "anova") + labs(caption = paste("N = ", n_distinct(filter(dados_hemi_v1_CH, !is.na(logAvgThickness_age_decay))$SUBJ))) 


#aov4 <- aov(logAvgThickness_age_decay ~ Diagnostic, dados_hemi_v1_CH)
#TukeyHSD(aov4)

ggplot(dados_hemi_v1_CH, aes(x = Diagnostic, y = I, color = Diagnostic, fill = Diagnostic)) +
geom_violin(trim = FALSE, alpha = 0.4) + geom_jitter() + 
theme_pubr() + stat_compare_means(method = "anova") + labs(caption = paste("N = ", n_distinct(filter(dados_hemi_v1_CH, !is.na(logAvgThickness_age_decay))$SUBJ))) 

ggplot(dados_hemi_v1_CH, aes(x = Diagnostic, y = I_age_decay, color = Diagnostic, fill = Diagnostic)) +
geom_violin(trim = FALSE, alpha = 0.4) + geom_jitter() + 
theme_pubr() + stat_compare_means(method = "anova") + labs(caption = paste("N = ", n_distinct(filter(dados_hemi_v1_CH, !is.na(logAvgThickness_age_decay))$SUBJ))) 

ggplot(dados_hemi_v1_CH, aes(x = Diagnostic, y = S, color = Diagnostic, fill = Diagnostic)) +
geom_violin(trim = FALSE, alpha = 0.4) + geom_jitter() + 
theme_pubr() + stat_compare_means(method = "anova") + labs(caption = paste("N = ", n_distinct(filter(dados_hemi_v1_CH, !is.na(logAvgThickness_age_decay))$SUBJ))) 

ggplot(dados_hemi_v1_CH, aes(x = Diagnostic, y = S_age_decay, color = Diagnostic, fill = Diagnostic)) +
geom_violin(trim = FALSE, alpha = 0.4) + geom_jitter() + 
theme_pubr() + stat_compare_means(method = "anova") + labs(caption = paste("N = ", n_distinct(filter(dados_hemi_v1_CH, !is.na(logAvgThickness_age_decay))$SUBJ))) 


caret::featurePlot(x = train.data[, c("K", "logAvgThickness", "K_age_decay", "logAvgThickness_age_decay")], y = train.data$Diagnostic, plot = "box", scales = list(y = list(relation = "free"), x = list(rot = 90)), layout = c(4, 1))

caret::featurePlot(x = train.data[, c("K", "K_age_decay", "I", "I_age_decay", "S", "S_age_decay")], y = train.data$Diagnostic, plot = "box", scales = list(y = list(relation = "free"), x = list(rot = 90)), layout = c(3,2))

multinom1 <- multinom(Diagnostic ~ K + Age, data = train.data)
multinom2 <- multinom(Diagnostic ~ logAvgThickness + Age, data = train.data)
multinom3 <- multinom(Diagnostic ~ K + logAvgThickness + Age, data = train.data)

multinom10 <- multinom(Diagnostic ~ S + Age, data = train.data)
multinom11 <- multinom(Diagnostic ~ I + Age, data = train.data)

multinom0 <- multinom(Diagnostic ~ K + Age + ESC, data = train.data)
multinom0_2 <- multinom(Diagnostic ~ logAvgThickness + Age + ESC, data = train.data)

multinom_sex1 <- multinom(Diagnostic ~ K + Age + sex , data = train.data)
multinom_sex2 <- multinom(Diagnostic ~ logAvgThickness + Age + sex , data = train.data)

multinom0_0 <- multinom(Diagnostic ~ K + S + I + Age, data = train.data)


anova(multinom2, multinom1, test = "Chisq")
anova(multinom0, multinom1, test = "Chisq")

anova(multinom0_0, multinom1, test = "Chisq")

## da estatistica ##
 
m.multi.nova1 <-
  multinom(Diagnostic ~ K + Age, data = train.data)
  stargazer(m.multi.nova1, type = "text")

  z1 <-
    summary(m.multi.nova1)$coefficients / summary(m.multi.nova1)$standard.errors
    p1 <- (1 - pnorm(abs(z1), 0, 1)) * 2
    t(p1)

#Para facilitar a interpreta??o:
coef.multi1 = exp(coef(m.multi.nova1))
t(coef.multi1)
#Previsoes
predicted.classes.multi.nova1 <- m.multi.nova1 %>% predict(test.data, type = "class")

#Model accuracy
mean(predicted.classes.multi.nova1 == test.data$Diagnostic)

# Summary
confusionMatrix(predicted.classes.multi.nova1, test.data$Diagnostic)

#ROC
multiclass.roc(
  as.numeric(test.data$Diagnostic),
  as.numeric(predicted.classes.multi.nova1),
  percent = F,
  ci.alpha = 0.9,
  stratified = FALSE,
  plot = TRUE,
  grid = FALSE,
  legacy.axes = TRUE,
  reuse.auc = TRUE,
  print.auc = TRUE,
  print.thres.col = "blue",
  ci.type = "bars",
  print.thres.cex = 0.7,
  main = "ROC curve",
  ylab = "Sensitivity (true positive rate)",
  xlab = "1-Specificity (false positive rate)"
  )



m.multi.nova2 <-
  multinom(Diagnostic ~ logAvgThickness + Age, data = train.data)
  stargazer(m.multi.nova2, type = "text")

  z2 <-
    summary(m.multi.nova2)$coefficients / summary(m.multi.nova2)$standard.errors
    p2 <- (1 - pnorm(abs(z2), 0, 1)) * 2
    t(p2)

#Para facilitar a interpreta??o:
coef.multi2 = exp(coef(m.multi.nova2))
t(coef.multi2)
#Previsoes
predicted.classes.multi.nova2 <- m.multi.nova2 %>% predict(test.data, type = "class")

#Model accuracy
mean(predicted.classes.multi.nova2 == test.data$Diagnostic)


# Summary
confusionMatrix(predicted.classes.multi.nova2, test.data$Diagnostic)

#ROC
multiclass.roc(
  as.numeric(test.data$Diagnostic),
  as.numeric(predicted.classes.multi.nova2),
  percent = F,
  ci.alpha = 0.9,
  stratified = FALSE,
  plot = TRUE,
  grid = TRUE,
  legacy.axes = TRUE,
  reuse.auc = TRUE,
  print.auc = TRUE,
  print.thres.col = "blue",
  ci.type = "bars",
  print.thres.cex = 0.7,
  main = "ROC curve",
  ylab = "Sensitivity (true positive rate)",
  xlab = "1-Specificity (false positive rate)"
  )


m.multi.nova3 <-
  multinom(Diagnostic ~ K + logAvgThickness + Age, data = train.data)
  stargazer(m.multi.nova3, type = "text")

  z3 <-
    summary(m.multi.nova3)$coefficients / summary(m.multi.nova3)$standard.errors
    p3 <- (1 - pnorm(abs(z3), 0, 1)) * 2
    t(p3)

#Para facilitar a interpreta??o:
coef.multi3 = exp(coef(m.multi.nova3))
t(coef.multi3)
#Previsoes
predicted.classes.multi.nova3 <- m.multi.nova3 %>% predict(test.data, type = "class")

#Model accuracy
mean(predicted.classes.multi.nova3 == test.data$Diagnostic)


# Summary
confusionMatrix(predicted.classes.multi.nova3, test.data$Diagnostic)

#ROC
multiclass.roc(
  as.numeric(test.data$Diagnostic),
  as.numeric(predicted.classes.multi.nova3),
  percent = F,
  ci.alpha = 0.9,
  stratified = FALSE,
  plot = TRUE,
  grid = TRUE,
  legacy.axes = TRUE,
  reuse.auc = TRUE,
  print.auc = TRUE,
  print.thres.col = "blue",
  ci.type = "bars",
  print.thres.cex = 0.7,
  main = "ROC curve",
  ylab = "Sensitivity (true positive rate)",
  xlab = "1-Specificity (false positive rate)"
  )

m.multi.nova10 <-
  multinom(Diagnostic ~ I + Age, data = train.data)
  stargazer(m.multi.nova10, type = "text")

  z10 <-
    summary(m.multi.nova10)$coefficients / summary(m.multi.nova10)$standard.errors
    p10 <- (1 - pnorm(abs(z10), 0, 1)) * 2
    t(p10)

#Para facilitar a interpreta??o:
coef.multi10 = exp(coef(m.multi.nova10))
t(coef.multi10)
#Previsoes
predicted.classes.multi.nova10 <- m.multi.nova10 %>% predict(test.data, type = "class")

#Model accuracy
mean(predicted.classes.multi.nova10 == test.data$Diagnostic)


# Summary
confusionMatrix(predicted.classes.multi.nova10, test.data$Diagnostic)

#ROC
multiclass.roc(
  as.numeric(test.data$Diagnostic),
  as.numeric(predicted.classes.multi.nova10),
  percent = F,
  ci.alpha = 0.9,
  stratified = FALSE,
  plot = TRUE,
  grid = TRUE,
  legacy.axes = TRUE,
  reuse.auc = TRUE,
  print.auc = TRUE,
  print.thres.col = "blue",
  ci.type = "bars",
  print.thres.cex = 0.7,
  main = "ROC curve",
  ylab = "Sensitivity (true positive rate)",
  xlab = "1-Specificity (false positive rate)"
  )


m.multi.nova11 <-
  multinom(Diagnostic ~ S + Age, data = train.data)
  stargazer(m.multi.nova10, type = "text")

  z11 <-
    summary(m.multi.nova11)$coefficients / summary(m.multi.nova11)$standard.errors
    p11 <- (1 - pnorm(abs(z11), 0, 1)) * 2
    t(p11)

#Para facilitar a interpreta??o:
coef.multi11 = exp(coef(m.multi.nova11))
t(coef.multi11)
#Previsoes
predicted.classes.multi.nova11 <- m.multi.nova11 %>% predict(test.data, type = "class")

#Model accuracy
mean(predicted.classes.multi.nova11 == test.data$Diagnostic)


# Summary
confusionMatrix(predicted.classes.multi.nova11, test.data$Diagnostic)

#ROC
multiclass.roc(
  as.numeric(test.data$Diagnostic),
  as.numeric(predicted.classes.multi.nova11),
  percent = F,
  ci.alpha = 0.9,
  stratified = FALSE,
  plot = TRUE,
  grid = TRUE,
  legacy.axes = TRUE,
  reuse.auc = TRUE,
  print.auc = TRUE,
  print.thres.col = "blue",
  ci.type = "bars",
  print.thres.cex = 0.7,
  main = "ROC curve",
  ylab = "Sensitivity (true positive rate)",
  xlab = "1-Specificity (false positive rate)"
  )

m.multi.nova0 <-
  multinom(Diagnostic ~ K + Age + ESC, data = train.data)
  stargazer(m.multi.nova0, type = "text")
  
  z0 <-
    summary(m.multi.nova0)$coefficients / summary(m.multi.nova0)$standard.errors
    p0 <- (1 - pnorm(abs(z0), 0, 1)) * 2
    t(p0)

#Para facilitar a interpreta??o:
coef.multi0 = exp(coef(m.multi.nova0))
t(coef.multi0)
#Previsoes
predicted.classes.multi.nova0 <- m.multi.nova0 %>% predict(test.data, type = "class")

#Model accuracy
mean(predicted.classes.multi.nova0 == test.data$Diagnostic)


# Summary
confusionMatrix(predicted.classes.multi.nova0, test.data$Diagnostic)

#ROC
multiclass.roc(
  as.numeric(test.data$Diagnostic),
  as.numeric(predicted.classes.multi.nova0),
  percent = F,
  ci.alpha = 0.9,
  stratified = FALSE,
  plot = TRUE,
  grid = TRUE,
  legacy.axes = TRUE,
  reuse.auc = TRUE,
  print.auc = TRUE,
  print.thres.col = "blue",
  ci.type = "bars",
  print.thres.cex = 0.7,
  main = "ROC curve",
  ylab = "Sensitivity (true positive rate)",
  xlab = "1-Specificity (false positive rate)"
  )

m.multi.nova0_2 <-
  multinom(Diagnostic ~ logAvgThickness + Age + ESC, data = train.data)
  stargazer(m.multi.nova0_2, type = "text")

  z0_2 <-
    summary(m.multi.nova0_2)$coefficients / summary(m.multi.nova0_2)$standard.errors
    p0_2 <- (1 - pnorm(abs(z0_2), 0, 1)) * 2
    t(p0_2)

#Para facilitar a interpreta??o:
coef.multi0_2 = exp(coef(m.multi.nova0_2))
t(coef.multi0_2)
#Previsoes
predicted.classes.multi.nova0_2 <- m.multi.nova0_2 %>% predict(test.data, type = "class")

#Model accuracy
mean(predicted.classes.multi.nova0_2 == test.data$Diagnostic)


# Summary
confusionMatrix(predicted.classes.multi.nova0_2, test.data$Diagnostic)

#ROC
multiclass.roc(
  as.numeric(test.data$Diagnostic),
  as.numeric(predicted.classes.multi.nova0_2),
  percent = F,
  ci.alpha = 0.9,
  stratified = FALSE,
  plot = TRUE,
  grid = TRUE,
  legacy.axes = TRUE,
  reuse.auc = TRUE,
  print.auc = TRUE,
  print.thres.col = "blue",
  ci.type = "bars",
  print.thres.cex = 0.7,
  main = "ROC curve",
  ylab = "Sensitivity (true positive rate)",
  xlab = "1-Specificity (false positive rate)"
  )

m.multi.nova0_0 <-
  multinom(Diagnostic ~ K + I + S + Age, data = train.data)
  stargazer(m.multi.nova0_0, type = "text")

  z0_0 <-
    (summary(m.multi.nova0_0)$coefficients)/(summary(m.multi.nova0_0)$standard.errors)
    p0_0 <- (1 - pnorm(abs(z0_0), 0, 1)) * 2
    t(p0_0)

#Para facilitar a interpreta??o:
coef.multi0_0 = exp(coef(m.multi.nova0_0))
t(coef.multi0_0)
#Previsoes
predicted.classes.multi.nova0_0 <- m.multi.nova0_0 %>% predict(test.data, type = "class")

#Model accuracy
mean(predicted.classes.multi.nova0_0 == test.data$Diagnostic)

# Summary
confusionMatrix(predicted.classes.multi.nova0_0, test.data$Diagnostic)

#ROC
multiclass.roc(
  as.numeric(test.data$Diagnostic),
  as.numeric(predicted.classes.multi.nova0_0),
  percent = F,
  ci.alpha = 0.9,
  stratified = FALSE,
  plot = TRUE,
  grid = FALSE,
  legacy.axes = TRUE,
  reuse.auc = TRUE,
  print.auc = TRUE,
  print.thres.col = "blue",
  ci.type = "bars",
  print.thres.cex = 0.7,
  main = "ROC curve",
  ylab = "Sensitivity (true positive rate)",
  xlab = "0_0-Specificity (false positive rate)"
  )


m.multi.nova.sex1 <-
  multinom(Diagnostic ~ K + Age + sex, data = train.data)
  stargazer(m.multi.nova.sex1, type = "text")

  z.sex1 <-
    summary(m.multi.nova.sex1)$coefficients / summary(m.multi.nova.sex1)$standard.errors
    p.sex1 <- (1 - pnorm(abs(z.sex1), 0, 1)) * 2
    t(p.sex1)

#Para facilitar a interpreta??o:
coef.multi.sex1 = exp(coef(m.multi.nova.sex1))
t(coef.multi.sex1)
#Previsoes
predicted.classes.multi.nova.sex1 <- m.multi.nova.sex1 %>% predict(test.data, type = "class")

#Model accuracy
mean(predicted.classes.multi.nova.sex1 == test.data$Diagnostic)

# Summary
confusionMatrix(predicted.classes.multi.nova.sex1, test.data$Diagnostic)

#ROC
multiclass.roc(
  as.numeric(test.data$Diagnostic),
  as.numeric(predicted.classes.multi.nova.sex1),
  percent = F,
  ci.alpha = 0.9,
  stratified = FALSE,
  plot = TRUE,
  grid = FALSE,
  legacy.axes = TRUE,
  reuse.auc = TRUE,
  print.auc = TRUE,
  print.thres.col = "blue",
  ci.type = "bars",
  print.thres.cex = 0.7,
  main = "ROC curve",
  ylab = "Sensitivity (true positive rate)",
  xlab = "1-Specificity (false positive rate)"
  )

m.multi.nova.sex2 <-
  multinom(Diagnostic ~ logAvgThickness_age_decay + Age + sex, data = train.data)
  stargazer(m.multi.nova.sex2, type = "text")

  z.sex2 <-
    summary(m.multi.nova.sex2)$coefficients / summary(m.multi.nova.sex2)$standard.errors
    p.sex2 <- (1 - pnorm(abs(z.sex2), 0, 1)) * 2
    t(p.sex2)

#Para facilitar a interpreta??o:
coef.multi.sex2 = exp(coef(m.multi.nova.sex2))
t(coef.multi.sex2)
#Previsoes
predicted.classes.multi.nova.sex2 <- m.multi.nova.sex2 %>% predict(test.data, type = "class")

#Model accuracy
mean(predicted.classes.multi.nova.sex2 == test.data$Diagnostic)

# Summary
confusionMatrix(predicted.classes.multi.nova.sex2, test.data$Diagnostic)

#ROC
multiclass.roc(
  as.numeric(test.data$Diagnostic),
  as.numeric(predicted.classes.multi.nova.sex2),
  percent = F,
  ci.alpha = 0.9,
  stratified = FALSE,
  plot = TRUE,
  grid = FALSE,
  legacy.axes = TRUE,
  reuse.auc = TRUE,
  print.auc = TRUE,
  print.thres.col = "blue",
  ci.type = "bars",
  print.thres.cex = 0.7,
  main = "ROC curve",
  ylab = "Sensitivity (true positive rate)",
  xlab = "1-Specificity (false positive rate)"
  )

```

## modelo multinomial - deaged

```{r glm deaged, echo=TRUE, message=FALSE, warning=FALSE}

caret::featurePlot(x = train.data[, c("K", "logAvgThickness", "K_age_decay", "logAvgThickness_age_decay")], y = train.data$Diagnostic, plot = "box", scales = list(y = list(relation = "free"), x = list(rot = 90)), layout = c(4, 1))


multinom4 <- multinom(Diagnostic ~ K_age_decay, data = train.data)
multinom5 <- multinom(Diagnostic ~ logAvgThickness_age_decay, data = train.data)
multinom6 <- multinom(Diagnostic ~ K_age_decay + logAvgThickness_age_decay, data = train.data)

multinom12 <- multinom(Diagnostic ~ I_age_decay + logAvgThickness_age_decay, data = train.data)
multinom13 <- multinom(Diagnostic ~ S_age_decay + logAvgThickness_age_decay, data = train.data)

multinom0_0_0 <- multinom(Diagnostic ~ K_age_decay + I_age_decay + S_age_decay, data = train.data)


summary(multinom4)
summary(multinom5)
summary(multinom6)

summary(multinom12)
summary(multinom13)

summary(multinom0_0_0)


anova(multinom5, multinom4, test = "Chisq")

anova(multinom0_0_0, multinom4, test = "Chisq")


## da estatistica ##
 
m.multi.nova4 <-
  multinom(Diagnostic ~ K_age_decay, data = train.data)
  stargazer(m.multi.nova4, type = "text")

  z4 <-
    summary(m.multi.nova4)$coefficients / summary(m.multi.nova4)$standard.errors
    p4 <- (1 - pnorm(abs(z4), 0, 1)) * 2
    t(p4)

#Para facilitar a interpreta??o:
coef.multi4 = exp(coef(m.multi.nova4))
t(coef.multi4)
#Previsoes
predicted.classes.multi.nova4 <- m.multi.nova4 %>% predict(test.data, type = "class")

#Model accuracy
mean(predicted.classes.multi.nova4 == test.data$Diagnostic)


# Summary
confusionMatrix(predicted.classes.multi.nova4, test.data$Diagnostic)

#ROC
multiclass.roc(
  as.numeric(test.data$Diagnostic),
  as.numeric(predicted.classes.multi.nova4),
  percent = F,
  ci.alpha = 0.9,
  stratified = FALSE,
  plot = TRUE,
  grid = TRUE,
  legacy.axes = TRUE,
  reuse.auc = TRUE,
  print.auc = TRUE,
  print.thres.col = "blue",
  ci.type = "bars",
  print.thres.cex = 0.7,
  main = "ROC curve",
  ylab = "Sensitivity (true positive rate)",
  xlab = "1-Specificity (false positive rate)"
  )

m.multi.nova5 <-
  multinom(Diagnostic ~ logAvgThickness_age_decay, data = train.data)
  stargazer(m.multi.nova5, type = "text")

  z5 <-
    summary(m.multi.nova5)$coefficients / summary(m.multi.nova5)$standard.errors
    p5 <- (1 - pnorm(abs(z5), 0, 1)) * 2
    t(p5)

#Para facilitar a interpreta??o:
coef.multi5 = exp(coef(m.multi.nova5))
t(coef.multi5)
#Previsoes
predicted.classes.multi.nova5 <- m.multi.nova5 %>% predict(test.data, type = "class")

#Model accuracy
mean(predicted.classes.multi.nova5 == test.data$Diagnostic)


# Summary
confusionMatrix(predicted.classes.multi.nova5, test.data$Diagnostic)

#ROC
multiclass.roc(
  as.numeric(test.data$Diagnostic),
  as.numeric(predicted.classes.multi.nova5),
  percent = F,
  ci.alpha = 0.9,
  stratified = FALSE,
  plot = TRUE,
  grid = TRUE,
  legacy.axes = TRUE,
  reuse.auc = TRUE,
  print.auc = TRUE,
  print.thres.col = "blue",
  ci.type = "bars",
  print.thres.cex = 0.7,
  main = "ROC curve",
  ylab = "Sensitivity (true positive rate)",
  xlab = "1-Specificity (false positive rate)"
  )

m.multi.nova6 <-
  multinom(Diagnostic ~ K_age_decay + logAvgThickness_age_decay, data = train.data)
  stargazer(m.multi.nova6, type = "text")

  z6 <-
    summary(m.multi.nova6)$coefficients / summary(m.multi.nova6)$standard.errors
    p6 <- (1 - pnorm(abs(z6), 0, 1)) * 2
    t(p6)

#Para facilitar a interpreta??o:
coef.multi6 = exp(coef(m.multi.nova6))
t(coef.multi6)
#Previsoes
predicted.classes.multi.nova6 <- m.multi.nova6 %>% predict(test.data, type = "class")

#Model accuracy
mean(predicted.classes.multi.nova6 == test.data$Diagnostic)


# Summary
confusionMatrix(predicted.classes.multi.nova6, test.data$Diagnostic)

#ROC
multiclass.roc(
  as.numeric(test.data$Diagnostic),
  as.numeric(predicted.classes.multi.nova6),
  percent = F,
  ci.alpha = 0.9,
  stratified = FALSE,
  plot = TRUE,
  grid = TRUE,
  legacy.axes = TRUE,
  reuse.auc = TRUE,
  print.auc = TRUE,
  print.thres.col = "blue",
  ci.type = "bars",
  print.thres.cex = 0.7,
  main = "ROC curve",
  ylab = "Sensitivity (true positive rate)",
  xlab = "1-Specificity (false positive rate)"
  )

m.multi.nova12 <-
  multinom(Diagnostic ~ I_age_decay, data = train.data)
  stargazer(m.multi.nova12, type = "text")

  z12 <-
    summary(m.multi.nova12)$coefficients / summary(m.multi.nova12)$standard.errors
    p12 <- (1 - pnorm(abs(z12), 0, 1)) * 2
    t(p12)

#Para facilitar a interpreta??o:
coef.multi12 = exp(coef(m.multi.nova12))
t(coef.multi12)
#Previsoes
predicted.classes.multi.nova12 <- m.multi.nova12 %>% predict(test.data, type = "class")

#Model accuracy
mean(predicted.classes.multi.nova12 == test.data$Diagnostic)


# Summary
confusionMatrix(predicted.classes.multi.nova12, test.data$Diagnostic)

#ROC
multiclass.roc(
  as.numeric(test.data$Diagnostic),
  as.numeric(predicted.classes.multi.nova12),
  percent = F,
  ci.alpha = 0.9,
  stratified = FALSE,
  plot = TRUE,
  grid = TRUE,
  legacy.axes = TRUE,
  reuse.auc = TRUE,
  print.auc = TRUE,
  print.thres.col = "blue",
  ci.type = "bars",
  print.thres.cex = 0.7,
  main = "ROC curve",
  ylab = "Sensitivity (true positive rate)",
  xlab = "1-Specificity (false positive rate)"
  )


m.multi.nova13 <-
  multinom(Diagnostic ~ S_age_decay, data = train.data)
  stargazer(m.multi.nova12, type = "text")

  z13 <-
    summary(m.multi.nova13)$coefficients / summary(m.multi.nova13)$standard.errors
    p13 <- (1 - pnorm(abs(z13), 0, 1)) * 2
    t(p13)

#Para facilitar a interpreta??o:
coef.multi13 = exp(coef(m.multi.nova13))
t(coef.multi13)
#Previsoes
predicted.classes.multi.nova13 <- m.multi.nova13 %>% predict(test.data, type = "class")

#Model accuracy
mean(predicted.classes.multi.nova13 == test.data$Diagnostic)


# Summary
confusionMatrix(predicted.classes.multi.nova13, test.data$Diagnostic)

#ROC
multiclass.roc(
  as.numeric(test.data$Diagnostic),
  as.numeric(predicted.classes.multi.nova13),
  percent = F,
  ci.alpha = 0.9,
  stratified = FALSE,
  plot = TRUE,
  grid = TRUE,
  legacy.axes = TRUE,
  reuse.auc = TRUE,
  print.auc = TRUE,
  print.thres.col = "blue",
  ci.type = "bars",
  print.thres.cex = 0.7,
  main = "ROC curve",
  ylab = "Sensitivity (true positive rate)",
  xlab = "1-Specificity (false positive rate)"
  )
  

m.multi.nova0_0_0 <-
  multinom(Diagnostic ~ K_age_decay + I_age_decay + S_age_decay, data = train.data)
  stargazer(m.multi.nova0_0_0, type = "text")

  z0_0_0 <-
    summary(m.multi.nova0_0_0)$coefficients / summary(m.multi.nova0_0_0)$standard.errors
    p0_0_0 <- (1 - pnorm(abs(z0_0_0), 0, 1)) * 2
    t(p0_0_0)

#Para facilitar a interpreta??o:
coef.multi0_0_0 = exp(coef(m.multi.nova0_0_0))
t(coef.multi0_0_0)
#Previsoes
predicted.classes.multi.nova0_0_0 <- m.multi.nova0_0_0 %>% predict(test.data, type = "class")

#Model accuracy
mean(predicted.classes.multi.nova0_0_0 == test.data$Diagnostic)


# Summary
confusionMatrix(predicted.classes.multi.nova0_0_0, test.data$Diagnostic)

#ROC
multiclass.roc(
  as.numeric(test.data$Diagnostic),
  as.numeric(predicted.classes.multi.nova0_0_0),
  percent = F,
  ci.alpha = 0.9,
  stratified = FALSE,
  plot = TRUE,
  grid = TRUE,
  legacy.axes = TRUE,
  reuse.auc = TRUE,
  print.auc = TRUE,
  print.thres.col = "blue",
  ci.type = "bars",
  print.thres.cex = 0.7,
  main = "ROC curve",
  ylab = "Sensitivity (true positive rate)",
  xlab = "1-Specificity (false positive rate)"
  )  
  

m.multi.nova.sex3 <-
  multinom(Diagnostic ~ K_age_decay + sex, data = train.data)
  stargazer(m.multi.nova.sex3, type = "text")

  z.sex3 <-
    summary(m.multi.nova.sex3)$coefficients / summary(m.multi.nova.sex3)$standard.errors
    p.sex3 <- (1 - pnorm(abs(z.sex3), 0, 1)) * 2
    t(p.sex3)

#Para facilitar a interpreta??o:
coef.multi.sex3 = exp(coef(m.multi.nova.sex3))
t(coef.multi.sex3)
#Previsoes
predicted.classes.multi.nova.sex3 <- m.multi.nova.sex3 %>% predict(test.data, type = "class")

#Model accuracy
mean(predicted.classes.multi.nova.sex3 == test.data$Diagnostic)

# Summary
confusionMatrix(predicted.classes.multi.nova.sex3, test.data$Diagnostic)

#ROC
multiclass.roc(
  as.numeric(test.data$Diagnostic),
  as.numeric(predicted.classes.multi.nova.sex3),
  percent = F,
  ci.alpha = 0.9,
  stratified = FALSE,
  plot = TRUE,
  grid = FALSE,
  legacy.axes = TRUE,
  reuse.auc = TRUE,
  print.auc = TRUE,
  print.thres.col = "blue",
  ci.type = "bars",
  print.thres.cex = 0.7,
  main = "ROC curve",
  ylab = "Sensitivity (true positive rate)",
  xlab = "1-Specificity (false positive rate)"
  )

m.multi.nova.sex4 <-
  multinom(Diagnostic ~ logAvgThickness + Age + sex, data = train.data)
  stargazer(m.multi.nova.sex4, type = "text")

  z.sex4 <-
    summary(m.multi.nova.sex4)$coefficients / summary(m.multi.nova.sex4)$standard.errors
    p.sex4 <- (1 - pnorm(abs(z.sex4), 0, 1)) * 2
    t(p.sex4)

#Para facilitar a interpreta??o:
coef.multi.sex4 = exp(coef(m.multi.nova.sex4))
t(coef.multi.sex4)
#Previsoes
predicted.classes.multi.nova.sex4 <- m.multi.nova.sex4 %>% predict(test.data, type = "class")

#Model accuracy
mean(predicted.classes.multi.nova.sex4 == test.data$Diagnostic)

# Summary
confusionMatrix(predicted.classes.multi.nova.sex4, test.data$Diagnostic)

#ROC
multiclass.roc(
  as.numeric(test.data$Diagnostic),
  as.numeric(predicted.classes.multi.nova.sex4),
  percent = F,
  ci.alpha = 0.9,
  stratified = FALSE,
  plot = TRUE,
  grid = FALSE,
  legacy.axes = TRUE,
  reuse.auc = TRUE,
  print.auc = TRUE,
  print.thres.col = "blue",
  ci.type = "bars",
  print.thres.cex = 0.7,
  main = "ROC curve",
  ylab = "Sensitivity (true positive rate)",
  xlab = "1-Specificity (false positive rate)"
  )

```

## modelo multinomial - lobes

### Lobo temporal

```{r glm temporal lobe, echo=TRUE, message=FALSE, warning=FALSE}

dados_lobos_v1_T$Diagnostic <- factor(dados_lobos_v1_T$Diagnostic, levels = c("AD", "MCI","CTL"))
#dados_lobos_v1_T$Diagnostic <- relevel(dados_lobos_v1_T$Diagnostic, "CTL")

# test.samples <- c(sample(which(dados_hemi_v1_CH_filter$Diagnostic == "AD"), N_ALZ), sample(which(dados_hemi_v1_CH_filter$Diagnostic == "CTL"), N_CTL), sample(which(dados_hemi_v1_CH_filter$Diagnostic == "MCI"), N_CCL))
# subj.training <- as_tibble(dados_hemi_v1_CH_filter[-test.samples, ]$SUBJ)

# colnames(subj.training) <- c("SUBJ")

# filter(dados_lobos_v1_T, SUBJ == subj.training)

train.data_lobes <- anti_join(dados_lobos_v1_T, subj.training)
test.data_lobes <- semi_join(dados_lobos_v1_T, subj.training)

#train.data_lobes  <- dados_lobos_v1_T[-test.samples, ]
#test.data_lobes <- dados_lobos_v1_T[test.samples, ]

caret::featurePlot(x = dados_lobos_v1_T[, c("K", "logAvgThickness", "K_age_decay", "logAvgThickness_age_decay")], y = dados_lobos_v1_T$Diagnostic, plot = "box", scales = list(y = list(relation = "free"), x = list(rot = 90)), layout = c(4, 1))

print(n_distinct(dados_lobos_v1_T$SUBJ))
print(n_distinct(train.data_lobes$SUBJ))
print(n_distinct(test.data_lobes$SUBJ))


ggplot(dados_lobos_v1_T, aes(x = Diagnostic, y = K_corrected, color = Diagnostic, fill = Diagnostic)) +
geom_violin(trim = FALSE, alpha = 0.4) + geom_jitter() + 
theme_pubr() + stat_compare_means(method = "anova") + labs(caption = paste("N = ", n_distinct(filter(dados_lobos_v1_T, !is.na(K))$SUBJ))) 

#aov1.l <- aov(K ~ Diagnostic, dados_lobos_v1_T)
#aov1.l_TK <-TukeyHSD(aov1.l)
#aov1.l_TK
#plot(aov1.l_TK , las=1 , col="brown")

ggplot(dados_lobos_v1_T, aes(x = Diagnostic, y = K_age_decay, color = Diagnostic, fill = Diagnostic)) +
geom_violin(trim = FALSE, alpha = 0.4) + geom_jitter() + 
theme_pubr() + stat_compare_means(method = "anova")  + labs(caption = paste("N = ", n_distinct(filter(dados_lobos_v1_T, !is.na(K_age_decay))$SUBJ))) 

#aov2.l <- aov(K_age_decay ~ Diagnostic, dados_lobos_v1_T)
#aov2.l_TK <-TukeyHSD(aov2.l)
#aov2.l_TK
#plot(aov2.l_TK , las=1 , col="brown")

ggplot(dados_lobos_v1_T, aes(x = Diagnostic, y = logAvgThickness, color = Diagnostic, fill = Diagnostic)) +
geom_violin(trim = FALSE, alpha = 0.4) + geom_jitter() + 
theme_pubr() + stat_compare_means(method = "anova") + labs(caption = paste("N = ", n_distinct(filter(dados_lobos_v1_T, !is.na(logAvgThickness))$SUBJ))) 

#aov3.l <- aov(logAvgThickness ~ Diagnostic, dados_lobos_v1_T)
#TukeyHSD(aov3.l)
#aov3.l_TK <-TukeyHSD(aov3.l)
#aov3.l_TK
#plot(aov3.l_TK , las=1 , col="brown")

ggplot(dados_lobos_v1_T, aes(x = Diagnostic, y = logAvgThickness_age_decay, color = Diagnostic, fill = Diagnostic)) +
geom_violin(trim = FALSE, alpha = 0.4) + geom_jitter() + 
theme_pubr() + stat_compare_means(method = "anova") + labs(caption = paste("N = ", n_distinct(filter(dados_lobos_v1_T, !is.na(logAvgThickness_age_decay))$SUBJ))) 

#aov4.l <- aov(logAvgThickness_age_decay ~ Diagnostic, dados_lobos_v1_T)
#aov4.l_TK <-TukeyHSD(aov4.l)
#aov4.l_TK
#plot(aov4.l_TK , las=1 , col="brown")

caret::featurePlot(x = train.data_lobes[, c("K", "logAvgThickness", "K_age_decay", "logAvgThickness_age_decay")], y = train.data_lobes$Diagnostic, plot = "box", scales = list(y = list(relation = "free"), x = list(rot = 90)), layout = c(4, 1))

multinom1.l <- multinom(Diagnostic ~ K_corrected + Age, data = train.data_lobes)
multinom2.l <- multinom(Diagnostic ~ logAvgThickness + Age, data = train.data_lobes)

multinom4.l <- multinom(Diagnostic ~ K_age_decay, data = train.data_lobes)
multinom5.l <- multinom(Diagnostic ~ logAvgThickness_age_decay, data = train.data_lobes)

multinom0.l <- multinom(Diagnostic ~ K_corrected + Age + ESC, data = train.data_lobes)
multinom0_2.l <- multinom(Diagnostic ~ logAvgThickness + Age + ESC, data = train.data_lobes)

## da estatistica ##
 
summary(multinom1.l)
summary(multinom2.l)
summary(multinom4.l)
summary(multinom5.l)
summary(multinom0.l)
summary(multinom0_2.l)

# anova(multinom5, multinom4, test = "Chisq")

## da estatistica ##

m.multi.nova1.l <-
  multinom(Diagnostic ~ K_corrected + Age, data = train.data_lobes)
  stargazer(m.multi.nova1.l, type = "text")

  z1.l <-
    summary(m.multi.nova1.l)$coefficients / summary(m.multi.nova1.l)$standard.errors
    p1.l <- (1 - pnorm(abs(z1.l), 0, 1)) * 2
    t(p1.l)

#Para facilitar a interpreta??o:
coef.multi1.l = exp(coef(m.multi.nova1.l))
t(coef.multi1.l)

#Previsoes
predicted.classes.multi.nova1.l <- m.multi.nova1.l %>% predict(test.data_lobes, type = "class")

#Model accuracy
mean(predicted.classes.multi.nova1.l == test.data_lobes$Diagnostic)

# Summary
cM1.l <- confusionMatrix(predicted.classes.multi.nova1.l, test.data_lobes$Diagnostic)
cM1.l
#cM1.l.t.score <- mutate(cM1.l, Diagnostic = c("AD", "MCI", "CTL"),sensitivity = as.data.frame(cM1.l$byClass[,1]), specificity = as.data.frame(cM1.l$byClass[,2]))

#ROC
multiclass.roc(
  as.numeric(test.data_lobes$Diagnostic),
  as.numeric(predicted.classes.multi.nova1.l),
  percent = F,
  ci.alpha = 0.9,
  stratified = FALSE,
  plot = TRUE,
  grid = TRUE,
  legacy.axes = TRUE,
  reuse.auc = TRUE,
  print.auc = TRUE,
  print.thres.col = "blue",
  ci.type = "bars",
  print.thres.cex = 0.7,
  main = "ROC curve",
  ylab = "Sensitivity (true positive rate)",
  xlab = "1-Specificity (false positive rate)"
  )

m.multi.nova2.l <-
  multinom(Diagnostic ~ logAvgThickness + Age, data = train.data_lobes)
  stargazer(m.multi.nova2.l, type = "text")

  z2.l <-
    summary(m.multi.nova2.l)$coefficients / summary(m.multi.nova2.l)$standard.errors
    p2.l <- (1 - pnorm(abs(z2.l), 0, 1)) * 2
    t(p2.l)

#Para facilitar a interpreta??o:
coef.multi2.l = exp(coef(m.multi.nova2.l))
t(coef.multi2.l)

#Previsoes
predicted.classes.multi.nova2.l <- m.multi.nova2.l %>% predict(test.data_lobes, type = "class")

#Model accuracy
mean(predicted.classes.multi.nova2.l == test.data_lobes$Diagnostic)

# Summary
confusionMatrix(predicted.classes.multi.nova2.l, test.data_lobes$Diagnostic)

#ROC
multiclass.roc(
  as.numeric(test.data_lobes$Diagnostic),
  as.numeric(predicted.classes.multi.nova2.l),
  percent = F,
  ci.alpha = 0.9,
  stratified = FALSE,
  plot = TRUE,
  grid = TRUE,
  legacy.axes = TRUE,
  reuse.auc = TRUE,
  print.auc = TRUE,
  print.thres.col = "blue",
  ci.type = "bars",
  print.thres.cex = 0.7,
  main = "ROC curve",
  ylab = "Sensitivity (true positive rate)",
  xlab = "1-Specificity (false positive rate)"
  )
 
m.multi.nova4.l <-
  multinom(Diagnostic ~ K_age_decay, data = train.data_lobes)
  stargazer(m.multi.nova4.l, type = "text")

  z4.l <-
    summary(m.multi.nova4.l)$coefficients / summary(m.multi.nova4.l)$standard.errors
    p4.l <- (1 - pnorm(abs(z4.l), 0, 1)) * 2
    t(p4.l)

#Para facilitar a interpreta??o:
coef.multi4.l = exp(coef(m.multi.nova4.l))
t(coef.multi4.l)

#Previsoes
predicted.classes.multi.nova4.l <- m.multi.nova4.l %>% predict(test.data_lobes, type = "class")

#Model accuracy
mean(predicted.classes.multi.nova4.l == test.data_lobes$Diagnostic)

# Summary
confusionMatrix(predicted.classes.multi.nova4.l, test.data_lobes$Diagnostic)

#ROC
multiclass.roc(
  as.numeric(test.data_lobes$Diagnostic),
  as.numeric(predicted.classes.multi.nova4.l),
  percent = F,
  ci.alpha = 0.9,
  stratified = FALSE,
  plot = TRUE,
  grid = TRUE,
  legacy.axes = TRUE,
  reuse.auc = TRUE,
  print.auc = TRUE,
  print.thres.col = "blue",
  ci.type = "bars",
  print.thres.cex = 0.7,
  main = "ROC curve",
  ylab = "Sensitivity (true positive rate)",
  xlab = "1-Specificity (false positive rate)"
  )

m.multi.nova5.l <-
  multinom(Diagnostic ~ logAvgThickness_age_decay, data = train.data_lobes)
  stargazer(m.multi.nova5.l, type = "text")

  z5.l <-
    summary(m.multi.nova5.l)$coefficients / summary(m.multi.nova5.l)$standard.errors
    p5.l <- (1 - pnorm(abs(z5.l), 0, 1)) * 2
    t(p5.l)

#Para facilitar a interpreta??o:
coef.multi5.l = exp(coef(m.multi.nova5.l))
t(coef.multi5.l)

#Previsoes
predicted.classes.multi.nova5.l <- m.multi.nova5.l %>% predict(test.data_lobes, type = "class")

#Model accuracy
mean(predicted.classes.multi.nova5.l == test.data_lobes$Diagnostic)

# Summary
confusionMatrix(predicted.classes.multi.nova5.l, test.data_lobes$Diagnostic)

#ROC
multiclass.roc(
  as.numeric(test.data_lobes$Diagnostic),
  as.numeric(predicted.classes.multi.nova5.l),
  percent = F,
  ci.alpha = 0.9,
  stratified = FALSE,
  plot = TRUE,
  grid = TRUE,
  legacy.axes = TRUE,
  reuse.auc = TRUE,
  print.auc = TRUE,
  print.thres.col = "blue",
  ci.type = "bars",
  print.thres.cex = 0.7,
  main = "ROC curve",
  ylab = "Sensitivity (true positive rate)",
  xlab = "1-Specificity (false positive rate)"
  )


m.multi.nova0.l <-
  multinom(Diagnostic ~ K_corrected + Age + ESC, data = train.data_lobes)
  stargazer(m.multi.nova0.l, type = "text")

  z0.l <-
    summary(m.multi.nova0.l)$coefficients / summary(m.multi.nova0.l)$standard.errors
    p0.l <- (1 - pnorm(abs(z0.l), 0, 1)) * 2
    t(p0.l)

#Para facilitar a interpreta??o:
coef.multi0.l = exp(coef(m.multi.nova0.l))
t(coef.multi0.l)

#Previsoes
predicted.classes.multi.nova0.l <- m.multi.nova0.l %>% predict(test.data_lobes, type = "class")

#Model accuracy
mean(predicted.classes.multi.nova0.l == test.data_lobes$Diagnostic)

# Summary
confusionMatrix(predicted.classes.multi.nova0.l, test.data_lobes$Diagnostic)

#ROC
multiclass.roc(
  as.numeric(test.data_lobes$Diagnostic),
  as.numeric(predicted.classes.multi.nova0.l),
  percent = F,
  ci.alpha = 0.9,
  stratified = FALSE,
  plot = TRUE,
  grid = TRUE,
  legacy.axes = TRUE,
  reuse.auc = TRUE,
  print.auc = TRUE,
  print.thres.col = "blue",
  ci.type = "bars",
  print.thres.cex = 0.7,
  main = "ROC curve",
  ylab = "Sensitivity (true positive rate)",
  xlab = "1-Specificity (false positive rate)"
  )

m.multi.nova0_2.l <-
  multinom(Diagnostic ~ logAvgThickness + Age + ESC, data = train.data_lobes)
  stargazer(m.multi.nova0_2.l, type = "text")

  z0_2.l <-
    summary(m.multi.nova0_2.l)$coefficients / summary(m.multi.nova0_2.l)$standard.errors
    p0_2.l <- (1 - pnorm(abs(z0_2.l), 0, 1)) * 2
    t(p0_2.l)

#Para facilitar a interpreta??o:
coef.multi0_2.l = exp(coef(m.multi.nova0_2.l))
t(coef.multi0_2.l)

#Previsoes
predicted.classes.multi.nova0_2.l <- m.multi.nova0_2.l %>% predict(test.data_lobes, type = "class")

#Model accuracy
mean(predicted.classes.multi.nova0_2.l == test.data_lobes$Diagnostic)

# Summary
confusionMatrix(predicted.classes.multi.nova0_2.l, test.data_lobes$Diagnostic)

#ROC
multiclass.roc(
  as.numeric(test.data_lobes$Diagnostic),
  as.numeric(predicted.classes.multi.nova0_2.l),
  percent = F,
  ci.alpha = 0.9,
  stratified = FALSE,
  plot = TRUE,
  grid = TRUE,
  legacy.axes = TRUE,
  reuse.auc = TRUE,
  print.auc = TRUE,
  print.thres.col = "blue",
  ci.type = "bars",
  print.thres.cex = 0.7,
  main = "ROC curve",
  ylab = "Sensitivity (true positive rate)",
  xlab = "1-Specificity (false positive rate)"
  )

```

### Lobo parietal

```{r glm parietal lobe, echo=TRUE, message=FALSE, warning=FALSE}

dados_lobos_v1_P$Diagnostic <- factor(dados_lobos_v1_P$Diagnostic, levels = c("AD", "MCI","CTL"))
#dados_lobos_v1_P$Diagnostic <- relevel(dados_lobos_v1_P$Diagnostic, "CTL")

# test.samples <- c(sample(which(dados_hemi_v1_CH_filter$Diagnostic == "AD"), N_ALZ), sample(which(dados_hemi_v1_CH_filter$Diagnostic == "CTL"), N_CTL), sample(which(dados_hemi_v1_CH_filter$Diagnostic == "MCI"), N_CCL))
# subj.training <- as_tibble(dados_hemi_v1_CH_filter[-test.samples, ]$SUBJ)

# colnames(subj.training) <- c("SUBJ")

# filter(dados_lobos_v1_P, SUBJ == subj.training)

train.data_lobes <- anti_join(dados_lobos_v1_P, subj.training)
test.data_lobes <- semi_join(dados_lobos_v1_P, subj.training)

#train.data_lobes  <- dados_lobos_v1_P[-test.samples, ]
#test.data_lobes <- dados_lobos_v1_P[test.samples, ]

caret::featurePlot(x = dados_lobos_v1_P[, c("K", "logAvgThickness", "K_age_decay", "logAvgThickness_age_decay")], y = dados_lobos_v1_P$Diagnostic, plot = "box", scales = list(y = list(relation = "free"), x = list(rot = 90)), layout = c(4, 1))

print(n_distinct(dados_lobos_v1_P$SUBJ))
print(n_distinct(train.data_lobes$SUBJ))
print(n_distinct(test.data_lobes$SUBJ))


ggplot(dados_lobos_v1_P, aes(x = Diagnostic, y = K_corrected, color = Diagnostic, fill = Diagnostic)) +
geom_violin(trim = FALSE, alpha = 0.4) + geom_jitter() + 
theme_pubr() + stat_compare_means(method = "anova") + labs(caption = paste("N = ", n_distinct(filter(dados_lobos_v1_P, !is.na(K))$SUBJ))) 

ggplot(dados_lobos_v1_P, aes(x = Diagnostic, y = K_age_decay, color = Diagnostic, fill = Diagnostic)) +
geom_violin(trim = FALSE, alpha = 0.4) + geom_jitter() + 
theme_pubr() + stat_compare_means(method = "anova")  + labs(caption = paste("N = ", n_distinct(filter(dados_lobos_v1_P, !is.na(K_age_decay))$SUBJ))) 

ggplot(dados_lobos_v1_P, aes(x = Diagnostic, y = logAvgThickness, color = Diagnostic, fill = Diagnostic)) +
geom_violin(trim = FALSE, alpha = 0.4) + geom_jitter() + 
theme_pubr() +stat_compare_means(method = "anova") + labs(caption = paste("N = ", n_distinct(filter(dados_lobos_v1_P, !is.na(logAvgThickness))$SUBJ))) 

ggplot(dados_lobos_v1_P, aes(x = Diagnostic, y = logAvgThickness_age_decay, color = Diagnostic, fill = Diagnostic)) +
geom_violin(trim = FALSE, alpha = 0.4) + geom_jitter() + 
theme_pubr() + stat_compare_means(method = "anova") + labs(caption = paste("N = ", n_distinct(filter(dados_lobos_v1_P, !is.na(logAvgThickness_age_decay))$SUBJ))) 

caret::featurePlot(x = train.data_lobes[, c("K", "logAvgThickness", "K_age_decay", "logAvgThickness_age_decay")], y = train.data_lobes$Diagnostic, plot = "box", scales = list(y = list(relation = "free"), x = list(rot = 90)), layout = c(4, 1))

multinom1.l <- multinom(Diagnostic ~ K_corrected + Age, data = train.data_lobes)
multinom2.l <- multinom(Diagnostic ~ logAvgThickness + Age, data = train.data_lobes)

multinom4.l <- multinom(Diagnostic ~ K_age_decay, data = train.data_lobes)
multinom5.l <- multinom(Diagnostic ~ logAvgThickness_age_decay, data = train.data_lobes)

multinom0.l <- multinom(Diagnostic ~ K_corrected + Age + ESC, data = train.data_lobes)
multinom0_2.l <- multinom(Diagnostic ~ logAvgThickness + Age + ESC, data = train.data_lobes)

## da estatistica ##
 
summary(multinom1.l)
summary(multinom2.l)
summary(multinom4.l)
summary(multinom5.l)
summary(multinom0.l)
summary(multinom0_2.l)

# anova(multinom5, multinom4, test = "Chisq")

## da estatistica ##

m.multi.nova1.l <-
  multinom(Diagnostic ~ K_corrected + Age, data = train.data_lobes)
  stargazer(m.multi.nova1.l, type = "text")

  z1.l <-
    summary(m.multi.nova1.l)$coefficients / summary(m.multi.nova1.l)$standard.errors
    p1.l <- (1 - pnorm(abs(z1.l), 0, 1)) * 2
    t(p1.l)

#Para facilitar a interpreta??o:
coef.multi1.l = exp(coef(m.multi.nova1.l))
t(coef.multi1.l)

#Previsoes
predicted.classes.multi.nova1.l <- m.multi.nova1.l %>% predict(test.data_lobes, type = "class")

#Model accuracy
mean(predicted.classes.multi.nova1.l == test.data_lobes$Diagnostic)

# Summary
confusionMatrix(predicted.classes.multi.nova1.l, test.data_lobes$Diagnostic)

#ROC
multiclass.roc(
  as.numeric(test.data_lobes$Diagnostic),
  as.numeric(predicted.classes.multi.nova1.l),
  percent = F,
  ci.alpha = 0.9,
  stratified = FALSE,
  plot = TRUE,
  grid = TRUE,
  legacy.axes = TRUE,
  reuse.auc = TRUE,
  print.auc = TRUE,
  print.thres.col = "blue",
  ci.type = "bars",
  print.thres.cex = 0.7,
  main = "ROC curve",
  ylab = "Sensitivity (true positive rate)",
  xlab = "1-Specificity (false positive rate)"
  )

m.multi.nova2.l <-
  multinom(Diagnostic ~ logAvgThickness + Age, data = train.data_lobes)
  stargazer(m.multi.nova2.l, type = "text")

  z2.l <-
    summary(m.multi.nova2.l)$coefficients / summary(m.multi.nova2.l)$standard.errors
    p2.l <- (1 - pnorm(abs(z2.l), 0, 1)) * 2
    t(p2.l)

#Para facilitar a interpreta??o:
coef.multi2.l = exp(coef(m.multi.nova2.l))
t(coef.multi2.l)

#Previsoes
predicted.classes.multi.nova2.l <- m.multi.nova2.l %>% predict(test.data_lobes, type = "class")

#Model accuracy
mean(predicted.classes.multi.nova2.l == test.data_lobes$Diagnostic)

# Summary
confusionMatrix(predicted.classes.multi.nova2.l, test.data_lobes$Diagnostic)

#ROC
multiclass.roc(
  as.numeric(test.data_lobes$Diagnostic),
  as.numeric(predicted.classes.multi.nova2.l),
  percent = F,
  ci.alpha = 0.9,
  stratified = FALSE,
  plot = TRUE,
  grid = TRUE,
  legacy.axes = TRUE,
  reuse.auc = TRUE,
  print.auc = TRUE,
  print.thres.col = "blue",
  ci.type = "bars",
  print.thres.cex = 0.7,
  main = "ROC curve",
  ylab = "Sensitivity (true positive rate)",
  xlab = "1-Specificity (false positive rate)"
  )
 
m.multi.nova4.l <-
  multinom(Diagnostic ~ K_age_decay, data = train.data_lobes)
  stargazer(m.multi.nova4.l, type = "text")

  z4.l <-
    summary(m.multi.nova4.l)$coefficients / summary(m.multi.nova4.l)$standard.errors
    p4.l <- (1 - pnorm(abs(z4.l), 0, 1)) * 2
    t(p4.l)

#Para facilitar a interpreta??o:
coef.multi4.l = exp(coef(m.multi.nova4.l))
t(coef.multi4.l)

#Previsoes
predicted.classes.multi.nova4.l <- m.multi.nova4.l %>% predict(test.data_lobes, type = "class")

#Model accuracy
mean(predicted.classes.multi.nova4.l == test.data_lobes$Diagnostic)

# Summary
confusionMatrix(predicted.classes.multi.nova4.l, test.data_lobes$Diagnostic)

#ROC
multiclass.roc(
  as.numeric(test.data_lobes$Diagnostic),
  as.numeric(predicted.classes.multi.nova4.l),
  percent = F,
  ci.alpha = 0.9,
  stratified = FALSE,
  plot = TRUE,
  grid = TRUE,
  legacy.axes = TRUE,
  reuse.auc = TRUE,
  print.auc = TRUE,
  print.thres.col = "blue",
  ci.type = "bars",
  print.thres.cex = 0.7,
  main = "ROC curve",
  ylab = "Sensitivity (true positive rate)",
  xlab = "1-Specificity (false positive rate)"
  )

m.multi.nova5.l <-
  multinom(Diagnostic ~ logAvgThickness_age_decay, data = train.data_lobes)
  stargazer(m.multi.nova5.l, type = "text")

  z5.l <-
    summary(m.multi.nova5.l)$coefficients / summary(m.multi.nova5.l)$standard.errors
    p5.l <- (1 - pnorm(abs(z5.l), 0, 1)) * 2
    t(p5.l)

#Para facilitar a interpreta??o:
coef.multi5.l = exp(coef(m.multi.nova5.l))
t(coef.multi5.l)

#Previsoes
predicted.classes.multi.nova5.l <- m.multi.nova5.l %>% predict(test.data_lobes, type = "class")

#Model accuracy
mean(predicted.classes.multi.nova5.l == test.data_lobes$Diagnostic)

# Summary
confusionMatrix(predicted.classes.multi.nova5.l, test.data_lobes$Diagnostic)

#ROC
multiclass.roc(
  as.numeric(test.data_lobes$Diagnostic),
  as.numeric(predicted.classes.multi.nova5.l),
  percent = F,
  ci.alpha = 0.9,
  stratified = FALSE,
  plot = TRUE,
  grid = TRUE,
  legacy.axes = TRUE,
  reuse.auc = TRUE,
  print.auc = TRUE,
  print.thres.col = "blue",
  ci.type = "bars",
  print.thres.cex = 0.7,
  main = "ROC curve",
  ylab = "Sensitivity (true positive rate)",
  xlab = "1-Specificity (false positive rate)"
  )


m.multi.nova0.l <-
  multinom(Diagnostic ~ K_corrected + Age + ESC, data = train.data_lobes)
  stargazer(m.multi.nova0.l, type = "text")

  z0.l <-
    summary(m.multi.nova0.l)$coefficients / summary(m.multi.nova0.l)$standard.errors
    p0.l <- (1 - pnorm(abs(z0.l), 0, 1)) * 2
    t(p0.l)

#Para facilitar a interpreta??o:
coef.multi0.l = exp(coef(m.multi.nova0.l))
t(coef.multi0.l)

#Previsoes
predicted.classes.multi.nova0.l <- m.multi.nova0.l %>% predict(test.data_lobes, type = "class")

#Model accuracy
mean(predicted.classes.multi.nova0.l == test.data_lobes$Diagnostic)

# Summary
confusionMatrix(predicted.classes.multi.nova0.l, test.data_lobes$Diagnostic)

#ROC
multiclass.roc(
  as.numeric(test.data_lobes$Diagnostic),
  as.numeric(predicted.classes.multi.nova0.l),
  percent = F,
  ci.alpha = 0.9,
  stratified = FALSE,
  plot = TRUE,
  grid = TRUE,
  legacy.axes = TRUE,
  reuse.auc = TRUE,
  print.auc = TRUE,
  print.thres.col = "blue",
  ci.type = "bars",
  print.thres.cex = 0.7,
  main = "ROC curve",
  ylab = "Sensitivity (true positive rate)",
  xlab = "1-Specificity (false positive rate)"
  )

m.multi.nova0_2.l <-
  multinom(Diagnostic ~ logAvgThickness + Age + ESC, data = train.data_lobes)
  stargazer(m.multi.nova0_2.l, type = "text")

  z0_2.l <-
    summary(m.multi.nova0_2.l)$coefficients / summary(m.multi.nova0_2.l)$standard.errors
    p0_2.l <- (1 - pnorm(abs(z0_2.l), 0, 1)) * 2
    t(p0_2.l)

#Para facilitar a interpreta??o:
coef.multi0_2.l = exp(coef(m.multi.nova0_2.l))
t(coef.multi0_2.l)

#Previsoes
predicted.classes.multi.nova0_2.l <- m.multi.nova0_2.l %>% predict(test.data_lobes, type = "class")

#Model accuracy
mean(predicted.classes.multi.nova0_2.l == test.data_lobes$Diagnostic)

# Summary
confusionMatrix(predicted.classes.multi.nova0_2.l, test.data_lobes$Diagnostic)

#ROC
multiclass.roc(
  as.numeric(test.data_lobes$Diagnostic),
  as.numeric(predicted.classes.multi.nova0_2.l),
  percent = F,
  ci.alpha = 0.9,
  stratified = FALSE,
  plot = TRUE,
  grid = TRUE,
  legacy.axes = TRUE,
  reuse.auc = TRUE,
  print.auc = TRUE,
  print.thres.col = "blue",
  ci.type = "bars",
  print.thres.cex = 0.7,
  main = "ROC curve",
  ylab = "Sensitivity (true positive rate)",
  xlab = "1-Specificity (false positive rate)"
  )

```



## dados clinicos lasso - deaged

```{r glm lasso, echo=TRUE, message=FALSE, warning=FALSE, eval = FALSE}

train.data2 <- filter(dplyr::select(test.data, Age, Diagnostic, ESC, K, `A7/A5`, `TMT B-A`, relogio, `DIGIT SPAN BACK`, COGNITIVE_INDEX), !is.na(ESC), !is.na(COGNITIVE_INDEX))

#, TAU, Lipoxina, `AB1-40` , !is.na(TAU), !is.na(Lipoxina)

test.data2 <- filter(dplyr::select(test.data, Age, Diagnostic, ESC, K, `A7/A5`, `TMT B-A`, relogio, `DIGIT SPAN BACK`,  COGNITIVE_INDEX), !is.na(ESC), !is.na(COGNITIVE_INDEX))


train.data3 <- filter(dplyr::select(test.data, Age, Diagnostic, ESC, logAvgThickness, `A7/A5`, `TMT B-A`, relogio, `DIGIT SPAN BACK`, COGNITIVE_INDEX), !is.na(ESC), !is.na(COGNITIVE_INDEX))

#, TAU, Lipoxina, `AB1-40` , !is.na(TAU), !is.na(Lipoxina)

test.data3 <- filter(dplyr::select(test.data, Age, Diagnostic, ESC, logAvgThickness, `A7/A5`, `TMT B-A`, relogio, `DIGIT SPAN BACK`,  COGNITIVE_INDEX), !is.na(ESC), !is.na(COGNITIVE_INDEX))


#test.data2 <- filter(dplyr::select(test.data, Age, Diagnostic, ESC, K, `A7/A5`, `TMT B-A`, relogio, `DIGIT SPAN BACK`, A5, A7, TMTA, TMTB, COGNITIVE_INDEX), !is.na(ESC), !is.na(COGNITIVE_INDEX), !is.na(TMTB))

#train.data3 <- filter(dplyr::select(train.data, Age, Diagnostic, ESC, Lipoxina, logAvgThickness, K, logAvgThickness_age_decay, K_age_decay, MMSE, `A7/A5`, `TMT B-A`, relogio, `DIGIT SPAN BACK`, A5, A7, TMTA, TMTB, ZA5, ZA7, ZTMTA, ZTMTB, COGNITIVE_INDEX, `AB1-40`, `AB1-42`, TAU, AB1_ratio, TAU_AB1_42_ratio, TAU_AB1_ratio ), !is.na(ESC), !is.na(MMSE), !is.na(TAU), !is.na(COGNITIVE_INDEX), !is.na(TMTB) ,!is.na(Lipoxina))

#test.data3 <- filter(dplyr::select(test.data, Age, Diagnostic, ESC, Lipoxina, logAvgThickness, K, logAvgThickness_age_decay, K_age_decay, MMSE, `A7/A5`, `TMT B-A`, relogio, `DIGIT SPAN BACK`, A5, A7, TMTA, TMTB, ZA5, ZA7, ZTMTA, ZTMTB, COGNITIVE_INDEX, `AB1-40`, `AB1-42`, TAU, AB1_ratio, TAU_AB1_42_ratio, TAU_AB1_ratio), !is.na(ESC), !is.na(MMSE), !is.na(TAU), !is.na(COGNITIVE_INDEX), !is.na(TMTB) ,!is.na(Lipoxina))


print(nrow(train.data2))
print(nrow(test.data2))

#---- Regress?o multinomial com LASSO ---- 


#matriz com as covariaveis
x <- model.matrix(Diagnostic~., train.data2)[,-1] 
dim(x)

y <- train.data2$Diagnostic

#Encontrar o melhor lambda usando a fun cross-validation
cv.lasso <- cv.glmnet(x, y, alpha = 1, family = "multinomial")
#plot(cv.lasso)

#Ajustar o modelo final para os dados de treinamento
multi.lasso <- glmnet(x, y, alpha = 1, family = "multinomial",
                      lambda = cv.lasso$lambda.min)

#Coeficientes da regress?o
coef.l <- coef(multi.lasso)

#quais variaveis ficam
fica <- which(coef.l$CONTROLE != 0 | coef.l$CCL != 0 | coef.l$ALZ != 0)-1 
fica <- fica[-1] #tirando o intercepto e incluindo DX

#novo banco so com as variaveis selecionados pelo lasso
train.data.lasso <- train.data2[, fica]
test.data.lasso <- test.data2[, fica]

#novo modelo proposto pelo lasso
multi.lasso2 <- multinom(Diagnostic ~ ., data = train.data.lasso)

#summary(multi.lasso2)
stargazer(multi.lasso2, type="text", out="multi1.htm")

z <- summary(multi.lasso2)$coefficients/summary(multi.lasso2)$standard.errors
p <- (1 - pnorm(abs(z), 0, 1)) * 2
t(p)

#Para facilitar a interpreta??o:
coef.multi.l = exp(coef(multi.lasso2))

# Summary
confusionMatrix(predicted.classes.multi.l, test.data.lasso$Diagnostic)

#ROC
multiclass.roc(as.numeric(test.data.lasso$Diagnostic), as.numeric(predicted.classes.multi.l), percent=F, ci.alpha=0.9, stratified=FALSE, plot=F, grid=TRUE, legacy.axes = TRUE, reuse.auc = TRUE,
               print.auc = F, print.thres.col = "blue", ci.type="bars", print.thres.cex = 0.7, main ="ROC curve",
               ylab="Sensitivity (true positive rate)", xlab="1-Specificity (false positive rate)")

## Avg thickness ----

#matriz com as covariaveis
x <- model.matrix(Diagnostic ~ ., train.data3)[,-1] 
dim(x)

y <- train.data3$Diagnostic

#Encontrar o melhor lambda usando a fun cross-validation
cv.lasso <- cv.glmnet(x, y, alpha = 1, family = "multinomial")
#plot(cv.lasso)

#Ajustar o modelo final para os dados de treinamento
multi.lasso <- glmnet(x, y, alpha = 1, family = "multinomial",
                      lambda = cv.lasso$lambda.min)

#Coeficientes da regress?o
coef.l <- coef(multi.lasso)

#quais variaveis ficam
fica <- which(coef.l$CONTROLE != 0 | coef.l$CCL != 0 | coef.l$ALZ != 0)-1 
fica <- fica[-1] #tirando o intercepto e incluindo DX

#novo banco so com as variaveis selecionados pelo lasso
train.data.lasso <- train.data3[, fica]
test.data.lasso <- test.data3[, fica]

#novo modelo proposto pelo lasso
multi.lasso3 <- multinom(Diagnostic ~ ., data = train.data.lasso)

#summary(multi.lasso2)
stargazer(multi.lasso3, type="text", out="multi1.htm")

z <- summary(multi.lasso3)$coefficients/summary(multi.lasso3)$standard.errors
p <- (1 - pnorm(abs(z), 0, 1)) * 2
t(p)

#Para facilitar a interpreta??o:
coef.multi.l = exp(coef(multi.lasso3))

# Summary
confusionMatrix(predicted.classes.multi.l, test.data.lasso$Diagnostic)

#ROC
multiclass.roc(as.numeric(test.data.lasso$Diagnostic), as.numeric(predicted.classes.multi.l), percent=F, ci.alpha=0.9, stratified=FALSE, plot=F, grid=TRUE, legacy.axes = TRUE, reuse.auc = TRUE,
               print.auc = F, print.thres.col = "blue", ci.type="bars", print.thres.cex = 0.7, main ="ROC curve",
               ylab="Sensitivity (true positive rate)", xlab="1-Specificity (false positive rate)")
```

# Comparando outras amostras

## SLOPE?

```{r slope, echo=FALSE, message=FALSE, warning=FALSE}
ggplot(dados_datasetscomp, aes(logExposedArea, 1/2*logAvgThickness + logTotalArea)) +
  geom_point(aes(color = Sample)) +
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr()

ggplot(data = filter(dados_datasetscomp, Sample != "Mota&Houzel2015"), aes(log(ExposedArea), 1/2*logAvgThickness + logTotalArea, color = Sample, fill = Sample)) +
  geom_point() +
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr()

lm_amostras <- dados_datasetscomp %>%
  group_by(Sample) %>%
  do(fit_amostras = lm(1/2 * logAvgThickness + logTotalArea ~ logExposedArea, data = ., na.action = na.omit))

amostras_Coef = tidy(lm_amostras,
                    fit_amostras,
                    conf.int = TRUE,
                    conf.level = 0.95)

 amostras_Coef %>% kable(digits = 4) %>% kable_styling()

ggplot(
  data = filter(amostras_Coef, term == "logExposedArea"),
  aes(
  x = reorder(Sample, estimate),
  y = estimate,
  color = Sample
  )
  ) +
  geom_point() + geom_errorbar(aes(ymin = estimate - std.error, ymax = estimate + std.error)) + geom_hline(yintercept = 1.25, linetype = "dashed")  + stat_compare_means(method = "kruskal.test") + theme_pubr() + labs(y = "slope")

# Separa o grupo IDOR por diagnosticos

dados_datasetscomp$Sample[dados_datasetscomp$Sample == "IDOR" &
                                  dados_datasetscomp$Diagnostic == "Control"] <- "IDORControl"
dados_datasetscomp$Sample[dados_datasetscomp$Sample == "IDOR" &
                                  dados_datasetscomp$Diagnostic == "AD"] <- "IDORAD"
dados_datasetscomp$Sample[dados_datasetscomp$Sample == "IDOR" &
                                  dados_datasetscomp$Diagnostic == "MCI"] <- "IDORMCI"


ggplot(data = filter(dados_datasetscomp, Sample != "Mota&Houzel2015"), aes(log(ExposedArea), 1/2*logAvgThickness + logTotalArea, color = Sample, fill = Sample, alpha)) +
  geom_point() +
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr()

lm_amostras <- dados_datasetscomp %>%
  group_by(Sample) %>%
  do(fit_amostras = lm(1/2 * logAvgThickness + logTotalArea ~ logExposedArea, data = ., na.action = na.omit))

amostras_Coef = tidy(lm_amostras,
                    fit_amostras,
                    conf.int = TRUE,
                    conf.level = 0.95)

# amostras_Coef %>% kable(digits = 4) %>% kable_styling()

ggplot(
  data = filter(amostras_Coef, term == "logExposedArea"),
  aes(
  x = reorder(Sample, estimate),
  y = estimate,
  color = Sample
  )
  ) +
  geom_point() + geom_errorbar(aes(ymin = estimate - std.error, ymax = estimate + std.error)) + geom_hline(yintercept = 1.25, linetype = "dashed")  + stat_compare_means(method = "kruskal.test") + theme_pubr() + labs(y = "slope")

kruskal_amostras <- kruskal.test(estimate ~ Sample,
  data = filter(amostras_Coef, term == "logExposedArea"))

# tidy(kruskal_amostras) %>% kable(digits = 4) %>% kable_styling()

lm_amostras_age <-
  filter(
  dados_datasetscomp,
  Sample == "HCP500r" |
  Sample == "NKI" |
  Sample == "OASIS_healthy" |
  Sample == "IDORControl" |
  Sample == "IDORMCI" | Sample == "IDORAD"
  ) %>%
  group_by(Sample, Age_interval) %>%
  do(
  fit_amostras_age = lm(
  1 / 2 * logAvgThickness + logTotalArea ~ logExposedArea,
  data = .,
  na.action = na.omit
  )
  )
  
amostras_age_Coef = tidy(lm_amostras_age,
  fit_amostras_age)

# amostras_age_Coef %>% kable(digits = 4) %>% kable_styling()

ggplot(
  data = filter(amostras_age_Coef, term == "logExposedArea"),
  aes(x = Age_interval,
  y = estimate,
  color = Sample)
  ) +
  geom_point() + geom_errorbar(aes(ymin = estimate - std.error, ymax = estimate + std.error)) + geom_hline(yintercept = 1.25, linetype = "dashed") + theme_pubr() + labs(y = "slope") + geom_line((aes(group = Sample, linetype = Sample)))

```




### Qual a diferenca entre essas populacoes?

```{r populacoes, echo=FALSE, message=FALSE, warning=FALSE}

dados_datasetscomp$Age <- as.numeric(dados_datasetscomp$Age)

res.aov.age <- aov(Age ~ Sample, data = filter(dados_datasetscomp, Sample != "Mota&Houzel2015"))
res.aov.age
summary(res.aov.age)
#TukeyHSD(res.aov.age)

ggplot(data = filter(dados_datasetscomp, Sample != "Mota&Houzel2015"), aes(x = Age, color = Sample, fill = Sample, alpha = 0.4)) + geom_density() + theme_pubr()

ggplot(data = filter(dados_datasetscomp, Sample != "Mota&Houzel2015"), aes(x = Sample, y = Age, color = Sample, fill = Sample, alpha = 0.4)) + 
  geom_boxplot() + theme_pubr() +
  stat_compare_means(label = "p.signif", method = "t.test", ref.group = "IDORControl", hide.ns = TRUE, label.y = 98) + 
  stat_compare_means(method = "anova", label.y = 105) + ylim(0, 110)

res.aov.thick <- aov(logAvgThickness ~ Sample, data = filter(dados_datasetscomp, Sample != "Mota&Houzel2015"))
res.aov.thick
summary(res.aov.thick)
#TukeyHSD(res.aov.thick)

ggplot(
  filter(dados_datasetscomp, Age_interval > 51 &
           Age_interval < 91),
  aes(
    x = Sample,
    y = logAvgThickness,
    fill = Sample,
    color = Sample
  )
) +
  geom_boxplot(aes(alpha = 0.5)) + 
  stat_compare_means(label = "p.signif", method = "t.test", ref.group = "IDORControl", hide.ns = TRUE, label.y = 0.45, method.args = list(alternative = "greater")) + 
  stat_compare_means(method = "anova", label.y = 0.50) +
  facet_wrap(vars(Age_interval)) +
  theme_pubr() +
  theme(axis.ticks = element_blank(), axis.text.x = element_blank()) + ylim(0.25, 0.53)

res.aov.at <- aov(logTotalArea ~ Sample, filter(dados_datasetscomp, Sample != "Mota&Houzel2015"))
res.aov.at
summary(res.aov.at)
#TukeyHSD(res.aov.at)

ggplot(
  filter(dados_datasetscomp, Age_interval > 51 &
           Age_interval < 91),
  aes(
    x = Sample,
    y = logTotalArea,
    fill = Sample,
    color = Sample
  )
)  +
  geom_boxplot(aes(alpha = 0.5)) +
  stat_compare_means(label = "p.signif", method = "t.test", ref.group = "IDORControl" , hide.ns = TRUE, label.y = 5.2, method.args = list(alternative = "greater")) + 
  stat_compare_means(method = "anova", label.y = 5.5) +
  facet_wrap(vars(Age_interval)) +
  theme_pubr() +
  theme(axis.ticks = element_blank(), axis.text.x = element_blank()) + ylim(4.7, 5.8)

res.aov.ae <- aov(logExposedArea ~ Sample, filter(dados_datasetscomp, Sample != "Mota&Houzel2015"))
res.aov.ae
summary(res.aov.ae)
#TukeyHSD(res.aov.ae)

ggplot(
  filter(dados_datasetscomp, Age_interval > 51 &
           Age_interval < 91),
  aes(
    x = Sample,
    y = logExposedArea,
    fill = Sample,
    color = Sample
  )
)  +
  geom_boxplot(aes(alpha = 0.48)) +
  stat_compare_means(label = "p.signif", method = "t.test", ref.group = "IDORControl" , hide.ns = TRUE, label.y = 4.75, method.args = list(alternative = "smaller")) + 
  stat_compare_means(method = "anova", label.y = 5.2) +
  facet_wrap(vars(Age_interval)) +
  theme_pubr() +
  theme(axis.ticks = element_blank(), axis.text.x = element_blank())

```

### SLOPE? - age decay

```{r slope age decay, echo=FALSE, message=FALSE, warning=FALSE}

ggplot(data = filter(dados_datasetscomp, Sample != "Mota&Houzel2015"), aes(logExposedArea_age_decay, 1/2*logAvgThickness_age_decay + logTotalArea_age_decay, color = Sample, fill = Sample)) +
  geom_point() +
  geom_smooth(method = "lm", se = TRUE) +
  theme_pubr() 

lm_amostras_agedecay <- filter(dados_datasetscomp, Sample != "Mota&Houzel2015") %>%
  group_by(Sample) %>%
  do(fit_amostras_agedecay = lm(1/2 * logAvgThickness_age_decay + logTotalArea_age_decay ~ logExposedArea_age_decay, data = ., na.action = na.omit))

amostras_Coef_agedecay = tidy(lm_amostras_agedecay,
                    fit_amostras_agedecay,
                    conf.int = TRUE,
                    conf.level = 0.95)

#amostras_Coef_agedecay %>% kable(digits = 4) %>% kable_styling()

ggplot(
  data = filter(amostras_Coef_agedecay, term == "logExposedArea_age_decay"),
  aes(
  x = reorder(Sample, estimate),
  y = estimate,
  color = Sample
  )
  ) +
  geom_point() + geom_errorbar(aes(ymin = estimate - std.error, ymax = estimate + std.error)) + geom_hline(yintercept = 1.25, linetype = "dashed")  + stat_compare_means(method = "kruskal.test") + theme_pubr() + labs(y = "slope")

# kruskal_amostras <-  kruskal.test(estimate ~ Sample,   data = filter(amostras_Coef, term == "logExposedArea"))
# tidy(kruskal_amostras) %>% kable(digits = 4) %>% kable_styling()

```

### Qual a diferenca entre essas populacoes? - age decay

```{r populacoes age decay, echo=FALSE, message=FALSE, warning=FALSE}
# 
res.aov.thick <- aov(logExposedArea_age_decay ~ Sample, data = filter(dados_datasetscomp, Sample != "Mota&Houzel2015"))
res.aov.thick
summary(res.aov.thick)
#TukeyHSD(res.aov.thick)

ggplot(
  filter(dados_datasetscomp, Age_interval > 51 &
           Age_interval < 91),
  aes(
    x = Sample,
    y = logAvgThickness_age_decay,
    fill = Sample,
    color = Sample
  )
) +
  geom_boxplot(aes(alpha = 0.5)) +
  stat_compare_means(label = "p.signif", method = "t.test", ref.group = "IDOR" , hide.ns = TRUE, method.args = list(alternative = "greater")) + 
  stat_compare_means(method = "anova") +
  facet_wrap(vars(Age_interval)) +
  theme_pubr() +
  theme(axis.ticks = element_blank(), axis.text.x = element_blank())

res.aov.at <- aov(logTotalArea_age_decay ~ Sample, filter(dados_datasetscomp, Sample != "Mota&Houzel2015"))
res.aov.at
summary(res.aov.at)
#TukeyHSD(res.aov.at)

ggplot(
  filter(dados_datasetscomp, Age_interval > 51 &
           Age_interval < 91),
  aes(
    x = Sample,
    y = logTotalArea_age_decay,
    fill = Sample,
    color = Sample
  )
) +
  geom_boxplot(aes(alpha = 0.5)) +
  stat_compare_means(label = "p.signif", method = "t.test", ref.group = "IDOR" , hide.ns = TRUE, method.args = list(alternative = "greater")) + 
  stat_compare_means(method = "anova") +
  facet_wrap(vars(Age_interval)) +
  theme_pubr() +
  theme(axis.ticks = element_blank(), axis.text.x = element_blank())

res.aov.ae <- aov(logExposedArea_age_decay ~ Sample, filter(dados_datasetscomp, Sample != "Mota&Houzel2015"))
res.aov.ae
summary(res.aov.ae)
#TukeyHSD(res.aov.ae)

ggplot(
  filter(dados_datasetscomp, Age_interval > 51 &
           Age_interval < 91),
  aes(
    x = Sample,
    y = logExposedArea_age_decay,
    fill = Sample,
    color = Sample
  )
) +
  geom_boxplot(aes(alpha = 0.5)) +
  stat_compare_means(label = "p.signif", method = "t.test", ref.group = "IDOR" , hide.ns = TRUE, method.args = list(alternative = "smaller")) + 
  stat_compare_means(method = "anova") +
  facet_wrap(vars(Age_interval)) +
  theme_pubr() +
  theme(axis.ticks = element_blank(), axis.text.x = element_blank())

```

## K, S e I para outras amostras

```{r}

dados_datasetscomp_ADNI_IDOR <- filter(dados_datasetscomp, Sample == "ADNIAD" | Sample == "ADNIControl" | Sample == "IDOR" )

dados_datasetscomp_ADNI_IDOR$Sample[dados_datasetscomp_ADNI_IDOR$Sample == "ADNIAD" | dados_datasetscomp_ADNI_IDOR$Sample == "ADNIControl" ] <- "ADNI"

ggplot(
  filter(dados_datasetscomp_ADNI_IDOR, Age_interval > 51 &
           Age_interval < 91),
  aes(
    x = Sample,
    y = K.zscore,
    fill = Diagnostic,
    color = Diagnostic
  )
) +
  geom_boxplot(aes(alpha = 0.5)) +
  stat_compare_means(method = "anova") +
  theme_pubr()

aov.K.Sample <- aov(K.zscore ~ Sample, dados_datasetscomp_ADNI_IDOR)
aov.K.Sample
summary(aov.K.Sample)
TukeyHSD(aov.K.Sample)

ggplot(
  filter(dados_datasetscomp_ADNI_IDOR, Age_interval > 51 &
           Age_interval < 91),
  aes(
    x = Sample,
    y = K_age_decay.zscore,
    fill = Diagnostic,
    color = Diagnostic
  )
) +
  geom_boxplot(aes(alpha = 0.5)) +
  stat_compare_means(method = "anova") +
  theme_pubr()

aov.K_age_decay.Sample <- aov(K_age_decay.zscore ~ Sample, dados_datasetscomp_ADNI_IDOR)
aov.K_age_decay.Sample
summary(aov.K_age_decay.Sample)
TukeyHSD(aov.K_age_decay.Sample)

ggplot(
  filter(dados_datasetscomp_ADNI_IDOR, Age_interval > 51 &
           Age_interval < 91),
  aes(
    x = Sample,
    y = logAvgThickness.zscore,
    fill = Diagnostic,
    color = Diagnostic
  )
) +
  geom_boxplot(aes(alpha = 0.5)) +
  stat_compare_means(method = "anova") +
  theme_pubr() 

aov.AvgThick.Sample <- aov(logAvgThickness.zscore ~ Sample, dados_datasetscomp_ADNI_IDOR)
aov.AvgThick.Sample
summary(aov.AvgThick.Sample)
TukeyHSD(aov.AvgThick.Sample)

ggplot(
  filter(dados_datasetscomp_ADNI_IDOR, Age_interval > 51 &
           Age_interval < 91),
  aes(
    x = Sample,
    y = logAvgThickness_age_decay.zscore,
    fill = Diagnostic,
    color = Diagnostic
  )
) +
  geom_boxplot(aes(alpha = 0.5)) +
  stat_compare_means(method = "anova") +
  theme_pubr() 

aov.AvgThick_age_decay.Sample <- aov(logAvgThickness_age_decay.zscore ~ Sample, dados_datasetscomp_ADNI_IDOR)
aov.AvgThick_age_decay.Sample
summary(aov.AvgThick_age_decay.Sample)
TukeyHSD(aov.AvgThick_age_decay.Sample)

ggplot(
  filter(dados_datasetscomp_ADNI_IDOR, Age_interval > 51 &
           Age_interval < 91),
  aes(
    x = Sample,
    y = I.zscore,
    fill = Diagnostic,
    color = Diagnostic
  )
) +
  geom_boxplot(aes(alpha = 0.5)) +
  stat_compare_means(method = "anova") +
  theme_pubr() 

aov.I.Sample <- aov(I.zscore ~ Sample, dados_datasetscomp_ADNI_IDOR)
aov.I.Sample
summary(aov.I.Sample)
TukeyHSD(aov.I.Sample)

ggplot(
  filter(dados_datasetscomp_ADNI_IDOR, Age_interval > 51 &
           Age_interval < 91),
  aes(
    x = Sample,
    y = I_age_decay.zscore,
    fill = Diagnostic,
    color = Diagnostic
  )
) +
  geom_boxplot(aes(alpha = 0.5)) +
  stat_compare_means(method = "anova") +
  theme_pubr() 

aov.I_age_decay.Sample <- aov(I_age_decay.zscore ~ Sample, dados_datasetscomp_ADNI_IDOR)
aov.I_age_decay.Sample
summary(aov.I_age_decay.Sample)
TukeyHSD(aov.I_age_decay.Sample)

ggplot(
  filter(dados_datasetscomp_ADNI_IDOR, Age_interval > 51 &
           Age_interval < 91),
  aes(
    x = Sample,
    y = S.zscore,
    fill = Diagnostic,
    color = Diagnostic
  )
) +
  geom_boxplot(aes(alpha = 0.5)) +
  stat_compare_means(method = "anova") +
  theme_pubr()

aov.S.Sample <- aov(S.zscore ~ Sample, dados_datasetscomp_ADNI_IDOR)
aov.S.Sample
summary(aov.S.Sample)
TukeyHSD(aov.S.Sample)

ggplot(
  filter(dados_datasetscomp_ADNI_IDOR, Age_interval > 51 &
           Age_interval < 91),
  aes(
    x = Sample,
    y = S_age_decay.zscore,
    fill = Diagnostic,
    color = Diagnostic
  )
) +
  geom_boxplot(aes(alpha = 0.5)) +
  stat_compare_means(method = "anova") +
  theme_pubr() 

aov.S_age_decay.Sample <- aov(S_age_decay.zscore ~ Sample, dados_datasetscomp_ADNI_IDOR)
aov.S_age_decay.Sample
summary(aov.S_age_decay.Sample)
TukeyHSD(aov.S_age_decay.Sample)
```

#### Sem MCI

```{r}

dados_datasetscomp_ADNI_IDOR <- filter(dados_datasetscomp, Sample == "ADNIAD" | Sample == "ADNIControl" | Sample == "IDOR", Diagnostic != "MCI")

dados_datasetscomp_ADNI_IDOR$Sample[dados_datasetscomp_ADNI_IDOR$Sample == "ADNIAD" | dados_datasetscomp_ADNI_IDOR$Sample == "ADNIControl" ] <- "ADNI"


ggplot(
  filter(dados_datasetscomp_ADNI_IDOR, Age_interval > 51 &
           Age_interval < 91),
  aes(
    x = Sample,
    y = K,
    fill = Diagnostic,
    color = Diagnostic
  )
) +
  geom_boxplot(aes(alpha = 0.5)) +
  stat_compare_means(method = "anova") +
  theme_pubr()

aov.K.Sample <- aov(K ~ Sample*Diagnostic, dados_datasetscomp_ADNI_IDOR)
aov.K.Sample
summary(aov.K.Sample)
TukeyHSD(aov.K.Sample)

ggplot(
  filter(dados_datasetscomp_ADNI_IDOR, Age_interval > 51 &
           Age_interval < 91),
  aes(
    x = Sample,
    y = K_age_decay,
    fill = Diagnostic,
    color = Diagnostic
  )
) +
  geom_boxplot(aes(alpha = 0.5)) +
  stat_compare_means(method = "anova") +
  theme_pubr()

aov.K_age_decay.Sample <- aov(K_age_decay ~ Sample*Diagnostic, dados_datasetscomp_ADNI_IDOR)
aov.K_age_decay.Sample
summary(aov.K_age_decay.Sample)
TukeyHSD(aov.K_age_decay.Sample)

ggplot(
  filter(dados_datasetscomp_ADNI_IDOR, Age_interval > 51 &
           Age_interval < 91),
  aes(
    x = Sample,
    y = logAvgThickness,
    fill = Diagnostic,
    color = Diagnostic
  )
) +
  geom_boxplot(aes(alpha = 0.5)) +
  stat_compare_means(method = "anova") +
  theme_pubr() 

aov.AvgThick.Sample <- aov(logAvgThickness ~ Sample*Diagnostic, dados_datasetscomp_ADNI_IDOR)
aov.AvgThick.Sample
summary(aov.AvgThick.Sample)
TukeyHSD(aov.AvgThick.Sample)

ggplot(
  filter(dados_datasetscomp_ADNI_IDOR, Age_interval > 51 &
           Age_interval < 91),
  aes(
    x = Sample,
    y = logAvgThickness_age_decay,
    fill = Diagnostic,
    color = Diagnostic
  )
) +
  geom_boxplot(aes(alpha = 0.5)) +
  stat_compare_means(method = "anova") +
  theme_pubr() 

aov.AvgThick_age_decay.Sample <- aov(logAvgThickness_age_decay ~ Sample*Diagnostic, dados_datasetscomp_ADNI_IDOR)
aov.AvgThick_age_decay.Sample
summary(aov.AvgThick_age_decay.Sample)
TukeyHSD(aov.AvgThick_age_decay.Sample)

ggplot(
  filter(dados_datasetscomp_ADNI_IDOR, Age_interval > 51 &
           Age_interval < 91),
  aes(
    x = Sample,
    y = I,
    fill = Diagnostic,
    color = Diagnostic
  )
) +
  geom_boxplot(aes(alpha = 0.5)) +
  stat_compare_means(method = "anova") +
  theme_pubr() 

aov.I.Sample <- aov(I ~ Sample, dados_datasetscomp_ADNI_IDOR)
aov.I.Sample
summary(aov.I.Sample)
TukeyHSD(aov.I.Sample)

ggplot(
  filter(dados_datasetscomp_ADNI_IDOR, Age_interval > 51 &
           Age_interval < 91),
  aes(
    x = Sample,
    y = I_age_decay,
    fill = Diagnostic,
    color = Diagnostic
  )
) +
  geom_boxplot(aes(alpha = 0.5)) +
  stat_compare_means(method = "anova") +
  theme_pubr() 

aov.I_age_decay.Sample <- aov(I_age_decay ~ Sample, dados_datasetscomp_ADNI_IDOR)
aov.I_age_decay.Sample
summary(aov.I_age_decay.Sample)
TukeyHSD(aov.I_age_decay.Sample)

ggplot(
  filter(dados_datasetscomp_ADNI_IDOR, Age_interval > 51 &
           Age_interval < 91),
  aes(
    x = Sample,
    y = S,
    fill = Diagnostic,
    color = Diagnostic
  )
) +
  geom_boxplot(aes(alpha = 0.5)) +
  stat_compare_means(method = "anova") +
  theme_pubr()

aov.S.Sample <- aov(S ~ Sample, dados_datasetscomp_ADNI_IDOR)
aov.S.Sample
summary(aov.S.Sample)
TukeyHSD(aov.S.Sample)

ggplot(
  filter(dados_datasetscomp_ADNI_IDOR, Age_interval > 51 &
           Age_interval < 91),
  aes(
    x = Sample,
    y = S_age_decay,
    fill = Diagnostic,
    color = Diagnostic
  )
) +
  geom_boxplot(aes(alpha = 0.5)) +
  stat_compare_means(method = "anova") +
  theme_pubr() 

aov.S_age_decay.Sample <- aov(S_age_decay ~ Sample, dados_datasetscomp_ADNI_IDOR)
aov.S_age_decay.Sample
summary(aov.S_age_decay.Sample)
TukeyHSD(aov.S_age_decay.Sample)


mean_K_I_S_ADNI_IDOR <-
  dados_datasetscomp_ADNI_IDOR %>% group_by(Sample, Diagnostic, Age_interval10) %>% summarise(
    mean.K = mean(K, na.rm = TRUE),
    SD_K = sd(K, na.rm = TRUE),
    mean.I = mean(I, na.rm = TRUE),
    SD_I = sd(I, na.rm = TRUE),
    mean.S = mean(S, na.rm = TRUE),
    SD_S = sd(S, na.rm = TRUE),
    mean.K_age_decay = mean(K_age_decay, na.rm = TRUE),
    SD_K_age_decay = sd(K_age_decay, na.rm = TRUE),
    mean.I_age_decay = mean(I_age_decay, na.rm = TRUE),
    SD_I_age_decay = sd(I_age_decay, na.rm = TRUE),
    mean.S_age_decay = mean(S_age_decay, na.rm = TRUE),
    SD_S_age_decay = sd(S_age_decay, na.rm = TRUE),
    mean.K.zscore = mean(K.zscore, na.rm = TRUE),
    SD_K.zscore = sd(K.zscore, na.rm = TRUE),
    mean.I.zscore = mean(I.zscore, na.rm = TRUE),
    SD_I.zscore = sd(I.zscore, na.rm = TRUE),
    mean.S.zscore = mean(S.zscore, na.rm = TRUE),
    SD_S.zscore = sd(S.zscore, na.rm = TRUE),
    mean.K_age_decay.zscore = mean(K_age_decay.zscore, na.rm = TRUE),
    SD_K_age_decay.zscore = sd(K_age_decay.zscore, na.rm = TRUE),
    mean.I_age_decay.zscore = mean(I_age_decay.zscore, na.rm = TRUE),
    SD_I_age_decay.zscore = sd(I_age_decay.zscore, na.rm = TRUE),
    mean.S_age_decay.zscore = mean(S_age_decay.zscore, na.rm = TRUE),
    SD_S_age_decay.zscore = sd(S_age_decay.zscore, na.rm = TRUE)
  )



ggplot( filter(mean_K_I_S_ADNI_IDOR), aes(y = mean.S, x = mean.K, color = Diagnostic, fill = Diagnostic, label = Sample)) + 
geom_point()+ geom_line(aes(group = Diagnostic)) +geom_text(nudge_y = 0.08) +
 theme_pubr()


ggplot( filter(mean_K_I_S_ADNI_IDOR
               , Diagnostic == "Control"), aes(y = mean.S, x = mean.K, color = Diagnostic, fill = Diagnostic, label = Sample)) + 
geom_point()+ geom_line(aes(group = Sample)) +geom_text(nudge_y = 0.08) +
 theme_pubr()

ggplot( filter(mean_K_I_S_ADNI_IDOR
               , Diagnostic == "Control", Age_interval10 == "70"| Age_interval10 == "80"), aes(y = mean.S, x = mean.K, color = Age_interval10, fill = Age_interval10, label = Sample)) + 
geom_point()+ geom_line(aes(group = Sample)) +geom_text(nudge_y = 0.08) +
 theme_pubr()

ggplot( filter(mean_K_I_S_ADNI_IDOR
               , Diagnostic == "Control", Age_interval10 == "70"| Age_interval10 == "80"), aes(y = mean.I, x = mean.K, color = Age_interval10, fill = Age_interval10, label = Sample)) + 
geom_point()+ geom_line(aes(group = Sample)) +geom_text(nudge_y = 0.08) +
 theme_pubr()




plot_ly(
  filter(mean_K_I_S_ADNI_IDOR, Age_interval10 == "70"
  ),
  x =  ~ mean.K,
  z =  ~ mean.S,
  y =  ~ mean.I,
  type = "scatter3d",
  mode = 'lines+markers+text',
  color =  ~ Diagnostic,
  text = ~ Sample
) %>% layout(scene = list(
  xaxis = list(title = 'K'),
  zaxis = list(title = 'S'),
  yaxis = list(title = 'I')
))

plot_ly(
  filter(mean_K_I_S_ADNI_IDOR, Age_interval10 == "70"
  ),
  x = ~ mean.K_age_decay,
  z =  ~ mean.S_age_decay,
  y =  ~ mean.I_age_decay,
  type = "scatter3d",
  mode = 'lines+markers+text',
  color =  ~ Diagnostic,
  text = ~ Sample
) %>% layout(scene = list(
  xaxis = list(title = 'K_age_decay'),
  zaxis = list(title = 'S_age_decay'),
  yaxis = list(title = 'I_age_decay')
))

```

### ADNI

```{r eval=FALSE, include=FALSE}

dados_datasetscomp_ADNI <- filter(dados_datasetscomp, Sample == "ADNIAD" | Sample == "ADNIControl")


ggplot(dados_datasetscomp_ADNI, aes(x = Diagnostic, y = I, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_boxplot() +
 stat_compare_means(method = "anova" ) + theme_pubr()

ggplot(dados_datasetscomp_ADNI, aes(x = Diagnostic, y = I.zscore, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_boxplot() +
 stat_compare_means(method = "anova" ) + theme_pubr()

ggplot(dados_datasetscomp_ADNI, aes(x = I.zscore, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_density() + theme_pubr()

aov_diag_I <- aov(I ~ Diagnostic*Sample, data = dados_datasetscomp_ADNI)
summary(aov_diag_I)
aov_diag_I_diag_TK <- TukeyHSD(aov_diag_I)
aov_diag_I_diag_TK

ggplot(dados_datasetscomp_ADNI, aes(x = Diagnostic, y = I_age_decay, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_boxplot() +
 stat_compare_means(method = "anova") + theme_pubr()

ggplot(dados_datasetscomp_ADNI, aes(x = Diagnostic, y = I_age_decay.zscore, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_boxplot() +
 stat_compare_means(method = "anova") + theme_pubr()

ggplot(dados_datasetscomp_ADNI, aes(x = I_age_decay.zscore, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_density() + theme_pubr()

aov_diag_I_age_decay <- aov(I_age_decay ~ Diagnostic*Sample, data = dados_datasetscomp_ADNI)
summary(aov_diag_I_age_decay)
aov_diag_I_age_decay_diag_TK <- TukeyHSD(aov_diag_I_age_decay)
aov_diag_I_age_decay_diag_TK

```


```{r eval=FALSE, include=FALSE}


ggplot(dados_datasetscomp_ADNI, aes(x = Diagnostic, y = S, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_boxplot() +
 stat_compare_means(method = "anova") + theme_pubr()

ggplot(dados_datasetscomp_ADNI, aes(x = Diagnostic, y = S.zscore, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_boxplot() +
 stat_compare_means(method = "anova") + theme_pubr()

ggplot(dados_datasetscomp_ADNI, aes(x = S.zscore, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_density() + theme_pubr()

aov_diag_S <- aov(S ~ Diagnostic*Sample, data = dados_datasetscomp_ADNI)
summary(aov_diag_S)
aov_diag_S_diag_TK <- TukeyHSD(aov_diag_S)
aov_diag_S_diag_TK

ggplot(dados_datasetscomp_ADNI, aes(x = Diagnostic, y = S_age_decay, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_boxplot() +
 stat_compare_means(method = "anova") + theme_pubr()

ggplot(dados_datasetscomp_ADNI, aes(x = Diagnostic, y = S_age_decay.zscore, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_boxplot() +
 stat_compare_means(method = "anova") + theme_pubr()

ggplot(dados_datasetscomp_ADNI, aes(x = S_age_decay.zscore, color = Diagnostic, fill = Diagnostic, alpha = 0.4)) +
  geom_density() + theme_pubr()

aov_diag_S_age_decay <- aov(S_age_decay ~ Diagnostic*Sample, data = dados_datasetscomp_ADNI)
summary(aov_diag_S_age_decay)
aov_diag_S_age_decay_diag_TK <- TukeyHSD(aov_diag_S_age_decay)
aov_diag_S_age_decay_diag_TK

```
