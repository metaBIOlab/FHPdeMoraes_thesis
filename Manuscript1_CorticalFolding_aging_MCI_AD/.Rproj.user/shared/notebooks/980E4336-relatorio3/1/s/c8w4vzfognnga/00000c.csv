"0",""
"0","multinom1 <- multinom(Diagnostic ~ K + Age, data = train.data)"
"1","# weights: "
"1"," "
"1","12"
"1"," ("
"1",""
"1","6"
"1",""
"1"," variable)
"
"1","initial  value 213.130784 
"
"1","iter  10 value 142.733086
"
"1","iter  20 value 141.522216
"
"1","iter  30 value 135.869701
"
"1","iter  40 value 135.204635
"
"1","iter  50 value 135.109494
"
"1","iter  60 value 135.004106
"
"1","iter  70 value 134.949990
"
"1","iter  80 value 134.935244
"
"1","iter  90 value 134.928278
"
"1","iter 100 value 134.925355
"
"1","final  value 134.925355 
"
"1","stopped after 100 iterations
"
"0","multinom2 <- multinom(Diagnostic ~ logAvgThickness + Age, data = train.data)"
"1","# weights: "
"1"," "
"1","12"
"1"," ("
"1",""
"1","6"
"1",""
"1"," variable)
"
"1","initial  value 213.130784 
"
"1","iter  10 value 139.961542
"
"1","iter  20 value 139.672869
"
"1","final  value 137.784561 
"
"1","converged
"
"0","multinom10 <- multinom(Diagnostic ~ S + Age, data = train.data)"
"1","# weights: "
"1"," "
"1","12"
"1"," ("
"1",""
"1","6"
"1",""
"1"," variable)
"
"1","initial  value 213.130784 
"
"1","iter  10 value 142.591194
"
"1","iter  20 value 142.204890
"
"1","iter  30 value 141.270596
"
"1","iter  40 value 141.112098
"
"1","iter  50 value 141.097199
"
"1","final  value 141.089795 
"
"1","converged
"
"0","multinom11 <- multinom(Diagnostic ~ I + Age, data = train.data)"
"1","# weights: "
"1"," "
"1","12"
"1"," ("
"1",""
"1","6"
"1",""
"1"," variable)
"
"1","initial  value 213.130784 
"
"1","iter  10 value 139.961266
"
"1","iter  20 value 139.803800
"
"1","iter  30 value 138.051783
"
"1","iter  40 value 137.777742
"
"1","iter  40 value 137.777742
"
"1","final  value 137.777742 
"
"1","converged
"
"0","multinom0 <- multinom(Diagnostic ~ K + Age + ESC, data = train.data)"
"1","# weights: "
"1"," "
"1","15"
"1"," ("
"1",""
"1","8"
"1",""
"1"," variable)
"
"1","initial  value 213.130784 
"
"1","iter  10 value 134.116498
"
"1","iter  20 value 131.453188
"
"1","iter  30 value 129.237736
"
"1","iter  40 value 124.493246
"
"1","iter  50 value 124.078558
"
"1","iter  60 value 123.970662
"
"1","iter  70 value 123.868622
"
"1","iter  80 value 123.801584
"
"1","iter  90 value 123.732669
"
"1","iter 100 value 123.709843
"
"1","final  value 123.709843 
"
"1","stopped after 100 iterations
"
"0","multinom0_2 <- multinom(Diagnostic ~ logAvgThickness + Age + ESC, data = train.data)"
"1","# weights: "
"1"," "
"1","15"
"1"," ("
"1",""
"1","8"
"1",""
"1"," variable)
"
"1","initial  value 213.130784 
"
"1","iter  10 value 132.749238
"
"1","iter  20 value 130.774868
"
"1","iter  30 value 129.107343
"
"1","iter  40 value 127.724807
"
"1","iter  50 value 127.590914
"
"1","iter  60 value 127.569589
"
"1","iter  70 value 127.554830
"
"1","iter  80 value 127.547652
"
"1","iter  90 value 127.539117
"
"1","iter 100 value 127.535291
"
"1","final  value 127.535291 
"
"1","stopped after 100 iterations
"
"0","multinom_Gender1 <- multinom(Diagnostic ~ K + Age + Gender , data = train.data)"
"1","# weights: "
"1"," "
"1","15"
"1"," ("
"1",""
"1","8"
"1",""
"1"," variable)
"
"1","initial  value 213.130784 
"
"1","iter  10 value 140.087480
"
"1","iter  20 value 130.881728
"
"1","iter  30 value 128.755223
"
"1","iter  40 value 127.574431
"
"1","iter  50 value 127.074918
"
"1","iter  60 value 126.999856
"
"1","iter  70 value 126.824155
"
"1","iter  80 value 126.780775
"
"1","iter  90 value 126.731951
"
"1","iter 100 value 126.700153
"
"1","final  value 126.700153 
"
"1","stopped after 100 iterations
"
"0","multinom_Gender2 <- multinom(Diagnostic ~ logAvgThickness + Age + Gender , data = train.data)"
"1","# weights: "
"1"," "
"1","15"
"1"," ("
"1",""
"1","8"
"1",""
"1"," variable)
"
"1","initial  value 213.130784 
"
"1","iter  10 value 137.019686
"
"1","iter  20 value 135.406470
"
"1","iter  30 value 134.647746
"
"1","iter  40 value 133.996241
"
"1","iter  50 value 133.939802
"
"1","iter  60 value 133.891576
"
"1","iter  70 value 133.853402
"
"1","iter  70 value 133.853402
"
"1","iter  70 value 133.853400
"
"1","final  value 133.853400 
"
"1","converged
"
"0","multinom0_0 <- multinom(Diagnostic ~ K + S + I + Age, data = train.data)"
"1","# weights: "
"1"," "
"1","18"
"1"," ("
"1",""
"1","10"
"1",""
"1"," variable)
"
"1","initial  value 213.130784 
"
"1","iter  10 value 137.550017
"
"1","iter  20 value 132.662085
"
"1","iter  30 value 130.676258
"
"1","iter  40 value 129.813038
"
"1","final  value 129.791092 
"
"1","converged
"
"0","# anova(multinom2, multinom1, test = ""Chisq"")"
"0","# anova(multinom0, multinom1, test = ""Chisq"")"
"0","# "
"0","# anova(multinom0_0, multinom1, test = ""Chisq"")"
"0",""
"0","## da estatistica ##"
"0"," "
"0","m.multi.nova1 <-"
"0","  multinom(Diagnostic ~ K + Age, data = train.data)"
"1","# weights: "
"1"," "
"1","12"
"1"," ("
"1",""
"1","6"
"1",""
"1"," variable)
"
"1","initial  value 213.130784 
"
"1","iter  10 value 142.733086
"
"1","iter  20 value 141.522216
"
"1","iter  30 value 135.869701
"
"1","iter  40 value 135.204635
"
"1","iter  50 value 135.109494
"
"1","iter  60 value 135.004106
"
"1","iter  70 value 134.949990
"
"1","iter  80 value 134.935244
"
"1","iter  90 value 134.928278
"
"1","iter 100 value 134.925355
"
"1","final  value 134.925355 
"
"1","stopped after 100 iterations
"
"0","  stargazer(m.multi.nova1, type = ""text"")"
"1","
"
"1","==============================================
"
"1",""
"1","                 "
"1"," "
"1","    "
"1","Dependent variable:"
"1","     "
"1","
"
"1","                  "
"1","----------------------------"
"1","
"
"1",""
"1","                 "
"1"," "
"1","      "
"1","AD"
"1","      "
"1"," "
"1","     "
"1","MCI"
"1","     "
"1","
"
"1",""
"1","                 "
"1"," "
"1","     "
"1","(1)"
"1","      "
"1"," "
"1","     "
"1","(2)"
"1","     "
"1","
"
"1","----------------------------------------------
"
"1","K"
"1","                "
"1"," "
"1","  "
"1","-73.439***"
"1","  "
"1"," "
"1","   "
"1","-14.440"
"1","   "
"1","
"
"1",""
"1","                 "
"1"," "
"1","   "
"1","(3.324)"
"1","    "
"1"," "
"1","  "
"1","(11.464)"
"1","   "
"1","
"
"1",""
"1","                 "
"1"," "
"1","       "
"1",""
"1","       "
"1"," "
"1","      "
"1",""
"1","       "
"1","
"
"1","Age"
"1","              "
"1"," "
"1","   "
"1","0.258***"
"1","   "
"1"," "
"1","  "
"1","0.118***"
"1","   "
"1","
"
"1",""
"1","                 "
"1"," "
"1","   "
"1","(0.067)"
"1","    "
"1"," "
"1","   "
"1","(0.032)"
"1","   "
"1","
"
"1",""
"1","                 "
"1"," "
"1","       "
"1",""
"1","       "
"1"," "
"1","      "
"1",""
"1","       "
"1","
"
"1","Constant"
"1","         "
"1"," "
"1","  "
"1","-59.859***"
"1","  "
"1"," "
"1"," "
"1","-16.673***"
"1","  "
"1","
"
"1",""
"1","                 "
"1"," "
"1","   "
"1","(3.971)"
"1","    "
"1"," "
"1","   "
"1","(6.078)"
"1","   "
"1","
"
"1",""
"1","                 "
"1"," "
"1","       "
"1",""
"1","       "
"1"," "
"1","      "
"1",""
"1","       "
"1","
"
"1","----------------------------------------------
"
"1","Akaike Inf. Crit."
"1"," "
"1","   "
"1","281.851"
"1","    "
"1"," "
"1","   "
"1","281.851"
"1","   "
"1","
"
"1","==============================================
"
"1","Note:"
"1","            "
"1"," "
"1"," "
"1","*p<0.1; **p<0.05; ***p<0.01"
"1","
"
"0","  z1 <-"
"0","    summary(m.multi.nova1)$coefficients / summary(m.multi.nova1)$standard.errors"
"0","    p1 <- (1 - pnorm(abs(z1), 0, 1)) * 2"
"0","    t(p1)"
"1","           "
"1","           AD"
"1","          MCI"
"1","
(Intercept)"
"1"," 0.0000000000"
"1"," 0.0060857025"
"1","
K          "
"1"," 0.0000000000"
"1"," 0.2077896026"
"1","
Age        "
"1"," 0.0001078354"
"1"," 0.0001855143"
"1","
"
"0","#Para facilitar a interpreta??o:"
"0","coef.multi1 = exp(coef(m.multi.nova1))"
"0","t(coef.multi1)"
"1","           "
"1","           AD"
"1","          MCI"
"1","
(Intercept)"
"1"," 1.008650e-26"
"1"," 5.741146e-08"
"1","
K          "
"1"," 1.275907e-32"
"1"," 5.353058e-07"
"1","
Age        "
"1"," 1.294764e+00"
"1"," 1.125566e+00"
"1","
"
"0","#Previsoes"
"0","predicted.classes.multi.nova1 <- m.multi.nova1 %>% predict(test.data, type = ""class"")"
"0",""
"0","#Model accuracy"
"0","mean(predicted.classes.multi.nova1 == test.data$Diagnostic)"
"1","[1]"
"1"," 0.7307692"
"1","
"
"0","# Summary"
"0","confusionMatrix(predicted.classes.multi.nova1, test.data$Diagnostic)"
"1","Confusion Matrix and Statistics

"
"1","          Reference
"
"1","Prediction"
"1"," CTL"
"1"," AD"
"1"," MCI"
"1","
       CTL"
"1","  30"
"1","  2"
"1","   8"
"1","
       AD "
"1","   0"
"1","  3"
"1","   1"
"1","
       MCI"
"1","   2"
"1","  1"
"1","   5"
"1","
"
"1","
Overall Statistics
"
"1",""
"1","                         "
"1","                 "
"1","
"
"1","               Accuracy :"
"1"," 0.7308          "
"1","
"
"1","                 95% CI :"
"1"," (0.5898, 0.8443)"
"1","
"
"1","    No Information Rate :"
"1"," 0.6154          "
"1","
"
"1","    P-Value [Acc > NIR] :"
"1"," 0.05604         "
"1","
"
"1","                         "
"1","                 "
"1","
"
"1","                  Kappa :"
"1"," 0.4348          "
"1","
"
"1","                         "
"1","                 "
"1","
"
"1"," Mcnemar's Test P-Value :"
"1"," 0.13278         "
"1","
"
"1","
Statistics by Class:

"
"1","                    "
"1"," Class: CTL"
"1"," Class: AD"
"1"," Class: MCI"
"1","
Sensitivity         "
"1","     0.9375"
"1","   0.50000"
"1","    0.35714"
"1","
Specificity         "
"1","     0.5000"
"1","   0.97826"
"1","    0.92105"
"1","
Pos Pred Value      "
"1","     0.7500"
"1","   0.75000"
"1","    0.62500"
"1","
Neg Pred Value      "
"1","     0.8333"
"1","   0.93750"
"1","    0.79545"
"1","
Prevalence          "
"1","     0.6154"
"1","   0.11538"
"1","    0.26923"
"1","
Detection Rate      "
"1","     0.5769"
"1","   0.05769"
"1","    0.09615"
"1","
Detection Prevalence"
"1","     0.7692"
"1","   0.07692"
"1","    0.15385"
"1","
Balanced Accuracy   "
"1","     0.7188"
"1","   0.73913"
"1","    0.63910"
"1","
"
"0","#ROC"
"0","multiclass.roc("
"0","  as.numeric(test.data$Diagnostic),"
"0","  as.numeric(predicted.classes.multi.nova1),"
"0","  percent = F,"
"0","  ci.alpha = 0.9,"
"0","  stratified = FALSE,"
"0","  plot = TRUE,"
"0","  grid = FALSE,"
"0","  legacy.axes = TRUE,"
"0","  reuse.auc = TRUE,"
"0","  print.auc = TRUE,"
"0","  print.thres.col = ""blue"","
"0","  ci.type = ""bars"","
"0","  print.thres.cex = 0.7,"
"0","  main = ""ROC curve"","
"0","  ylab = ""Sensitivity (true positive rate)"","
"0","  xlab = ""1-Specificity (false positive rate)"""
"0","  )"
"2","Setting direction: controls < cases
"
"2","Setting direction: controls < cases
"
